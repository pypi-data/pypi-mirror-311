Metadata-Version: 2.1
Name: wxbtool
Version: 0.1.21
Summary: A toolkit for WeatherBench based on PyTorch
Author-email: Mingli Yuan <mingli.yuan@gmail.com>
License: MIT License
        
        Copyright (c) 2020 Beijing ColorfulClouds Technology Co.,Ltd.
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch>=2.5.1
Requires-Dist: numpy>=2.1.2
Requires-Dist: netcdf4>=1.7.2
Requires-Dist: toolz>=1.0.0
Requires-Dist: dask>=2024.10.0
Requires-Dist: xarray>=0.21.1
Requires-Dist: opencv-python>=4.10.0.84
Requires-Dist: arrow>=1.3.0
Requires-Dist: python-decouple>=3.8
Requires-Dist: leibniz>=0.2.0
Requires-Dist: flask>=3.0.3
Requires-Dist: msgpack>=1.1.0
Requires-Dist: msgpack-numpy>=0.4.8
Requires-Dist: requests>=2.32.3
Requires-Dist: gunicorn>=23.0.0
Requires-Dist: arghandler>=1.3.1
Requires-Dist: lightning>=2.4.0
Requires-Dist: requests-unixsocket>=0.3.0
Requires-Dist: flake8>=7.1.1
Requires-Dist: pytest>=8.3.3
Requires-Dist: cdsapi>=0.7.4

# wxbtool

[![DOI](https://zenodo.org/badge/269931312.svg)](https://zenodo.org/badge/latestdoi/269931312)

A toolkit for WeatherBench based on PyTorch

Install
--------

```bash
pip install wxbtool
```

Cheat sheet
-----------

Start a data set server for 3-days prediction of t850 by Weyn's solution
```bash
wxb dserve -m wxbtool.specs.res5_625.t850weyn -s Setting3d
```

Start a training process for a UNet model following Weyn's solution
```bash
wxb train -m wxbtool.zoo.res5_625.unet.t850d3sm_weyn
```

Start a testing process for a UNet model following Weyn's solution
```bash
wxb test -m wxbtool.zoo.res5_625.unet.t850d3sm_weyn
```

Start a data set server with http binding
```bash
wxb dserve -m wxbtool.specs.res5_625.t850weyn -s Setting3d 
```

Start a data set server with ip and port
```bash
wxb dserve -m wxbtool.specs.res5_625.t850weyn -s Setting3d -b 127.0.0.1:8088
```

Start a training process with unix socket binding
```bash
wxb train -m wxbtool.zoo.res5_625.unet.t850d3sm_weyn -d unix:/tmp/test.sock
```

How to use
-----------

* [quick start](https://github.com/caiyunapp/wxbtool/wiki/quick-start)
* understanding the physical process by plotting
* develop your own neural model
* try a toy physical model
* explore the possibility to combine neural and physical model together

How to release
---------------

```bash
uv build
uv publish

git tag va.b.c master
git push origin va.b.c
```

Contributors
------------

* Mingli Yuan ([Mountain](https://github.com/mountain))
* Ren Lu
