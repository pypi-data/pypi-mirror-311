[project]
name = "fitrequest"
version = "0.8.11"
description = "Python class that allow to create REST API client with dynamic code generation"
homepage = "https://skillcorner.com/"
repository = "https://gitlab.com/public-corner/fitrequest"
documentation = "https://fitrequest.readthedocs.io/en/latest/"
readme = "README.md"
requires-python = ">=3.8,<3.13"
dependencies = [
    "defusedxml>=0.7.1",
    "makefun>=1.15.4",
    "orjson>=3.9.10",
    "pydantic>=2.5.2",
    "pytest-cov>=5.0.0",
    "requests>=2.30.0",
]

[project.optional-dependencies]
aws-credentials = [
    "boto3>=1.34.96",
    "strenum>=0.4.15",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.poe.tasks.lock]
help = "Lock file"
shell = "uv lock"

[tool.poe.tasks.lock_upgrade]
help = "Lock file"
shell = "uv lock --upgrade"

[tool.poe.tasks.test]
sequence = [
  {cmd = "uv run pytest tests"},
]

[tool.pytest.ini_options]
addopts = "--cov=fitrequest --cov-branch --cov-report term-missing --cov-report html --cov-report xml --cov-report lcov --junitxml=junit_test.xml"

[tool.lint.ruff]
fix = true
line-length = 120
select = ["B", "E", "F", "I001", "Q", "SIM", "UP", "W"]
target-version = "py38"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.uv]
dev-dependencies = [
  "boto3>=1.35.16",
  "coverage>=7.6.1",
  "moto[secretsmanager, ssm]>=5.0.14",
  "poethepoet>=0.27.0",
  "pre-commit>=3.5.0",
  "pytest>=8.3.2",
  "requests-mock>=1.12.1",
  "ruff>=0.6.2",
  "sphinx>=7.1.2",
  "sphinx-book-theme>=0.0.39",
  "strenum>=0.4.15",
]
package = true
