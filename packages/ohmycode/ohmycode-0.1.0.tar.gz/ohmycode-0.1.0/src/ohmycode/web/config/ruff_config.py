from ...utils.config_utils import get_python_version
from ..config_types import ToolConfig, ToolOptionType

py_version = f"py{get_python_version().replace('.', '')}"

RUFF_CONFIG: ToolConfig = {
    "name": "Ruff",
    "description": "快速的 Python linter 和格式化工具",
    "enabled": True,
    "command": "ruff check",
    "options": {
        "fix": {
            "name": "自动修复",
            "description": "自动修复发现的问题",
            "value": {"type": str(ToolOptionType.BOOLEAN), "value": True},
        },
        "select": {
            "name": "启用规则",
            "description": "选择要启用的规则代码",
            "value": {
                "type": ToolOptionType.MULTI_SELECT,
                "value": ["E", "F", "UP", "B", "SIM", "I"],
                "choices": [
                    "E",
                    "F",
                    "I",
                    "UP",
                    "B",
                    "C",
                    "D",
                    "ERA",
                    "N",
                    "PL",
                    "RUF",
                    "S",
                    "T",
                    "W",
                    "COM",
                    "Q",
                    "SIM",
                    "PTH",
                    "RET",
                    "ISC",
                    "ICN",
                    "PIE",
                    "E4",
                    "E7",
                    "E9",
                    "F401",
                    "F403",
                    "B001",
                    "I001",
                ],
                "choices_desc": {
                    "E": "pycodestyle错误 - 代码风格错误检查",
                    "F": "Pyflakes - 语法错误和未定义名称检查",
                    "I": "isort - 导入语句排序和格式化",
                    "UP": "pyupgrade - 推荐使用新版本Python特性",
                    "B": "flake8-bugbear - 检测潜在的bug和设计问题",
                    "C": "flake8-comprehensions - 列表推导式最佳实践",
                    "D": "pydocstyle - 文档字符串风格检查",
                    "ERA": "eradicate - 检测注释掉的代码",
                    "N": "pep8-naming - 命名规范检查",
                    "PL": "Pylint - 代码分析和错误检测",
                    "RUF": "Ruff特有规则 - Ruff独有的检查规则",
                    "S": "flake8-bandit - 安全漏洞检查",
                    "T": "flake8-print - 检测print语句",
                    "W": "pycodestyle警告 - 代码风格警告",
                    "COM": "flake8-commas - 逗号使用规范",
                    "Q": "flake8-quotes - 引号使用规范",
                    "SIM": "flake8-simplify - 代码简化建议",
                    "PTH": "flake8-use-pathlib - 推荐使用pathlib",
                    "RET": "flake8-return - 返回值规范",
                    "ISC": "flake8-implicit-str-concat - 字符串拼接规范",
                    "ICN": "flake8-import-conventions - 导入约定检查",
                    "PIE": "flake8-pie - Python改进建议",
                    "E4": "Python语法错误",
                    "E7": "语句错误(如循环变量覆盖)",
                    "E9": "运行时错误(如缩进问题)",
                    "F401": "未使用的导入",
                    "F403": "from module import * 使用",
                    "B001": "不要使用裸except语句",
                    "I001": "import排序错误",
                },
            },
        },
        "ignore": {
            "name": "忽略规则",
            "description": "忽略指定的规则",
            "value": {
                "type": ToolOptionType.MULTI_SELECT,
                "value": [],
                "choices": [],
            },
        },
        "line-length": {
            "name": "行长度",
            "description": "最大行长度",
            "value": {
                "type": ToolOptionType.NUMBER,
                "value": 120,
                "min": 60,
                "max": 120,
            },
        },
        "respect-gitignore": {
            "name": "遵循 gitignore",
            "description": "遵循 .gitignore 文件的规则",
            "value": {"type": str(ToolOptionType.BOOLEAN), "value": True},
        },
        "show-fixes": {
            "name": "显示修复",
            "description": "显示将要进行的修复",
            "value": {"type": str(ToolOptionType.BOOLEAN), "value": False},
        },
        "output-format": {
            "name": "输出格式",
            "description": "设置输出格式,以获取更详细的信息",
            "value": {
                "type": ToolOptionType.SELECT,
                "value": "json",
                "choices": [
                    "text",
                    "json",
                    "json-lines",
                    "gitlab",
                    "github",
                    "full",
                    "grouped",
                    "pylint",
                    "azure",
                ],
                "choices_desc": {
                    "text": "默认文本格式",
                    "json": "JSON格式",
                    "json-lines": "每行一个JSON对象",
                    "gitlab": "GitLab兼容格式",
                    "github": "GitHub兼容格式",
                    "full": "完整详细信息",
                    "grouped": "按文件分组的信息",
                    "pylint": "Pylint格式",
                    "azure": "Azure Pipeline格式",
                },
            },
        },
        "statistics": {
            "name": "显示统计",
            "description": "显示错误统计信息和每个规则的违规计数",
            "value": {"type": str(ToolOptionType.BOOLEAN), "value": False},
        },
        "target-version": {
            "name": "目标 Python 版本",
            "description": "设置目标 Python 版本",
            "value": {
                "type": ToolOptionType.SELECT,
                "value": py_version,
                "choices": ["py37", "py38", "py39", "py310", "py311", "py312"],
            },
        },
        "extend-select": {
            "name": "扩展规则",
            "description": "扩展要检查的规则",
            "value": {
                "type": ToolOptionType.MULTI_SELECT,
                "value": [],
                "choices": [],
            },
        },
        "per-file-ignores": {
            "name": "按文件忽略",
            "description": "为特定文件设置忽略规则",
            "value": {
                "type": ToolOptionType.TEXT,
                "value": "",
            },
        },
        "extend-ignore": {
            "name": "扩展忽略",
            "description": "扩展要忽略的规则",
            "value": {
                "type": ToolOptionType.MULTI_SELECT,
                "value": [],
                "choices": [],
            },
        },
    },
}
