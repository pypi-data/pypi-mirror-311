[tool.poetry]
name = "delphai-ml-utils"
version = "1.1.0"
description = "A Python package to manage delphai machine learning operations."
authors = ["ml-team-delphai <ml@delphai.com>"]
homepage = "https://github.com/delphai/delphai-ml-utils"

[tool.poetry.dependencies]
python = ">=3.9,<4"

confuse = "^2.0.0"
azure-storage-blob = "^12.14.1"
mylib = "^0.0.1"
google = "^3.0.0"
gspread = "^5.7.1"
nltk = "^3.7"
numpy = "^1.21.1"
pandas = "^1.3.5"
pysbd = "^0.3.4"
scikit-learn = "^1.0.2"
tldextract = "^3.4.0"
tqdm = "^4.64.1"
trafilatura = "^1.4.0"
goose3 = "^3.1.12"
justext = "^3.0.0"
matplotlib = "^3.2.2"
mlcm = "^0.0.1"
seaborn = "^0.12.1"
clean-text = { extras = ["gpl"], version = "^0.6.0" }
omegaconf = { version = "^2.1.0", optional = true }
memoization = { version = "^0.3.1", optional = true }
kubernetes = { version = "^12.0.0", optional = true }
coloredlogs = { version = "^14.0", optional = true }
keyring = { version = "^21.5.0", optional = true }
dacite = { version = "^1.6.0", optional = true }
deepmerge = { version = "^0.1.0", optional = true }
motor = { version = "^2.3.0", optional = true }
sentencepiece = { version = "^0.1.97", optional = true }
sacremoses = { version = "^0.0.53", optional = true }
nlpaug = { version = "^1.1.11", optional = true }
protobuf = { version = "<3.21.0", optional = true }
transformers = {extras = ["onnx"], version = "^4.24.0", optional = true }
torch = { version = "~1.12.0", optional = true }
torchvision = { version = "~0.13.0", optional = true }
torchaudio = { version = "~0.12.0", optional = true }
gitpython = "^3.1.34"
dvc = "^3.18.0"
dvc-azure = "^2.22.1"
mlflow = "2.3.2"
python-dotenv = "^1.0.0"
httpx = "^0.27.2"

[tool.poetry.extras]
config = [
  "omegaconf",
  "memoization",
  "kubernetes",
  "deepmerge",
  "keyring",
  "coloredlogs",
  "dacite"
]

database = [
  "motor"
]

transformers= [
  "nlpaug",
  "protobuf",
  "transformers",
  "sentencepiece",
  "sacremoses",
  "torch",
  "torchvision",
  "torchaudio"
]

[tool.poetry.dev-dependencies]
pytest = "^8.3.3"
pytest-asyncio = "0.24.0"
pytest-watch = "4.2.0"
black = "^22.3.0"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.22.1"

[tool.poe.tasks]
format = "black ."
test = "ptw -- --verbose"
publish-test = "poetry publish -r testpypi"
publish = [
  {cmd = "poetry version patch"},
  {cmd = "poetry build"},
  {cmd = "poetry publish --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD}"},
  {cmd = "poetry publish --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} -r testpypi"}
]

[build-system]
requires = ["poetry>=1.2.0"]
build-backend = "poetry.masonry.api"
