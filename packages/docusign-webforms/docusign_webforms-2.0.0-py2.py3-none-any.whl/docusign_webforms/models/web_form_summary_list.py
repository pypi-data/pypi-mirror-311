# coding: utf-8

"""
    Web Forms API version 1.1

    The Web Forms API facilitates generating semantic HTML forms around everyday contracts.   # noqa: E501

    OpenAPI spec version: 1.1.0
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from docusign_webforms.client.configuration import Configuration


class WebFormSummaryList(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'items': 'list[WebFormSummary]',
        'result_set_size': 'float',
        'total_set_size': 'float',
        'start_position': 'float',
        'end_position': 'float',
        'next_url': 'str',
        'previous_url': 'str'
    }

    attribute_map = {
        'items': 'items',
        'result_set_size': 'resultSetSize',
        'total_set_size': 'totalSetSize',
        'start_position': 'startPosition',
        'end_position': 'endPosition',
        'next_url': 'nextUrl',
        'previous_url': 'previousUrl'
    }

    def __init__(self, _configuration=None, **kwargs):  # noqa: E501
        """WebFormSummaryList - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._items = None
        self._result_set_size = None
        self._total_set_size = None
        self._start_position = None
        self._end_position = None
        self._next_url = None
        self._previous_url = None
        self.discriminator = None

        setattr(self, "_{}".format('items'), kwargs.get('items', None))
        setattr(self, "_{}".format('result_set_size'), kwargs.get('result_set_size', None))
        setattr(self, "_{}".format('total_set_size'), kwargs.get('total_set_size', None))
        setattr(self, "_{}".format('start_position'), kwargs.get('start_position', None))
        setattr(self, "_{}".format('end_position'), kwargs.get('end_position', None))
        setattr(self, "_{}".format('next_url'), kwargs.get('next_url', None))
        setattr(self, "_{}".format('previous_url'), kwargs.get('previous_url', None))

    @property
    def items(self):
        """Gets the items of this WebFormSummaryList.  # noqa: E501

        Array of web form items with each containing summary.  # noqa: E501

        :return: The items of this WebFormSummaryList.  # noqa: E501
        :rtype: list[WebFormSummary]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this WebFormSummaryList.

        Array of web form items with each containing summary.  # noqa: E501

        :param items: The items of this WebFormSummaryList.  # noqa: E501
        :type: list[WebFormSummary]
        """

        self._items = items

    @property
    def result_set_size(self):
        """Gets the result_set_size of this WebFormSummaryList.  # noqa: E501

        Result set size for current page  # noqa: E501

        :return: The result_set_size of this WebFormSummaryList.  # noqa: E501
        :rtype: float
        """
        return self._result_set_size

    @result_set_size.setter
    def result_set_size(self, result_set_size):
        """Sets the result_set_size of this WebFormSummaryList.

        Result set size for current page  # noqa: E501

        :param result_set_size: The result_set_size of this WebFormSummaryList.  # noqa: E501
        :type: float
        """

        self._result_set_size = result_set_size

    @property
    def total_set_size(self):
        """Gets the total_set_size of this WebFormSummaryList.  # noqa: E501

        Total result set size  # noqa: E501

        :return: The total_set_size of this WebFormSummaryList.  # noqa: E501
        :rtype: float
        """
        return self._total_set_size

    @total_set_size.setter
    def total_set_size(self, total_set_size):
        """Sets the total_set_size of this WebFormSummaryList.

        Total result set size  # noqa: E501

        :param total_set_size: The total_set_size of this WebFormSummaryList.  # noqa: E501
        :type: float
        """

        self._total_set_size = total_set_size

    @property
    def start_position(self):
        """Gets the start_position of this WebFormSummaryList.  # noqa: E501

        Starting position of fields returned for the current page  # noqa: E501

        :return: The start_position of this WebFormSummaryList.  # noqa: E501
        :rtype: float
        """
        return self._start_position

    @start_position.setter
    def start_position(self, start_position):
        """Sets the start_position of this WebFormSummaryList.

        Starting position of fields returned for the current page  # noqa: E501

        :param start_position: The start_position of this WebFormSummaryList.  # noqa: E501
        :type: float
        """

        self._start_position = start_position

    @property
    def end_position(self):
        """Gets the end_position of this WebFormSummaryList.  # noqa: E501

        Ending position of fields returned for the current page  # noqa: E501

        :return: The end_position of this WebFormSummaryList.  # noqa: E501
        :rtype: float
        """
        return self._end_position

    @end_position.setter
    def end_position(self, end_position):
        """Sets the end_position of this WebFormSummaryList.

        Ending position of fields returned for the current page  # noqa: E501

        :param end_position: The end_position of this WebFormSummaryList.  # noqa: E501
        :type: float
        """

        self._end_position = end_position

    @property
    def next_url(self):
        """Gets the next_url of this WebFormSummaryList.  # noqa: E501

        Url for the next page of results  # noqa: E501

        :return: The next_url of this WebFormSummaryList.  # noqa: E501
        :rtype: str
        """
        return self._next_url

    @next_url.setter
    def next_url(self, next_url):
        """Sets the next_url of this WebFormSummaryList.

        Url for the next page of results  # noqa: E501

        :param next_url: The next_url of this WebFormSummaryList.  # noqa: E501
        :type: str
        """

        self._next_url = next_url

    @property
    def previous_url(self):
        """Gets the previous_url of this WebFormSummaryList.  # noqa: E501

        Url for the previous page of results  # noqa: E501

        :return: The previous_url of this WebFormSummaryList.  # noqa: E501
        :rtype: str
        """
        return self._previous_url

    @previous_url.setter
    def previous_url(self, previous_url):
        """Sets the previous_url of this WebFormSummaryList.

        Url for the previous page of results  # noqa: E501

        :param previous_url: The previous_url of this WebFormSummaryList.  # noqa: E501
        :type: str
        """

        self._previous_url = previous_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WebFormSummaryList, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WebFormSummaryList):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, WebFormSummaryList):
            return True

        return self.to_dict() != other.to_dict()
