"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ServerCommand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UUID_FIELD_NUMBER: builtins.int
    LOG_MESSAGE_FIELD_NUMBER: builtins.int
    CAPTURE_SCREEN_FIELD_NUMBER: builtins.int
    ADD_CUSTOM_CONTROL_FIELD_NUMBER: builtins.int
    SET_CAMERA_FIELD_NUMBER: builtins.int
    ADD_OBJECT_FIELD_NUMBER: builtins.int
    SET_KEY_EVENT_HANDLER_FIELD_NUMBER: builtins.int
    REMOVE_OBJECT_FIELD_NUMBER: builtins.int
    REMOVE_CUSTOM_CONTROL_FIELD_NUMBER: builtins.int
    SET_CUSTOM_CONTROL_FIELD_NUMBER: builtins.int
    SET_ENABLE_FIELD_NUMBER: builtins.int
    GET_CAMERA_STATE_FIELD_NUMBER: builtins.int
    SET_CAMERA_STATE_EVENT_HANDLER_FIELD_NUMBER: builtins.int
    SET_CONFIG_FIELD_NUMBER: builtins.int
    UUID: builtins.str
    log_message: builtins.str
    capture_screen: builtins.bool
    @property
    def add_custom_control(self) -> global___CustomControl: ...
    @property
    def set_camera(self) -> global___SetCamera: ...
    @property
    def add_object(self) -> global___AddObject: ...
    @property
    def set_key_event_handler(self) -> global___SetKeyEventHandler: ...
    @property
    def remove_object(self) -> global___RemoveObject: ...
    @property
    def remove_custom_control(self) -> global___RemoveCustomControl: ...
    @property
    def set_custom_control(self) -> global___SetCustomControl: ...
    set_enable: builtins.bool
    get_camera_state: builtins.bool
    @property
    def set_camera_state_event_handler(self) -> global___SetCameraStateEventHandler: ...
    @property
    def set_config(self) -> global___SetConfig: ...
    def __init__(
        self,
        *,
        UUID: builtins.str = ...,
        log_message: builtins.str = ...,
        capture_screen: builtins.bool = ...,
        add_custom_control: global___CustomControl | None = ...,
        set_camera: global___SetCamera | None = ...,
        add_object: global___AddObject | None = ...,
        set_key_event_handler: global___SetKeyEventHandler | None = ...,
        remove_object: global___RemoveObject | None = ...,
        remove_custom_control: global___RemoveCustomControl | None = ...,
        set_custom_control: global___SetCustomControl | None = ...,
        set_enable: builtins.bool = ...,
        get_camera_state: builtins.bool = ...,
        set_camera_state_event_handler: global___SetCameraStateEventHandler | None = ...,
        set_config: global___SetConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Command", b"Command", "add_custom_control", b"add_custom_control", "add_object", b"add_object", "capture_screen", b"capture_screen", "get_camera_state", b"get_camera_state", "log_message", b"log_message", "remove_custom_control", b"remove_custom_control", "remove_object", b"remove_object", "set_camera", b"set_camera", "set_camera_state_event_handler", b"set_camera_state_event_handler", "set_config", b"set_config", "set_custom_control", b"set_custom_control", "set_enable", b"set_enable", "set_key_event_handler", b"set_key_event_handler"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Command", b"Command", "UUID", b"UUID", "add_custom_control", b"add_custom_control", "add_object", b"add_object", "capture_screen", b"capture_screen", "get_camera_state", b"get_camera_state", "log_message", b"log_message", "remove_custom_control", b"remove_custom_control", "remove_object", b"remove_object", "set_camera", b"set_camera", "set_camera_state_event_handler", b"set_camera_state_event_handler", "set_config", b"set_config", "set_custom_control", b"set_custom_control", "set_enable", b"set_enable", "set_key_event_handler", b"set_key_event_handler"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Command", b"Command"]) -> typing_extensions.Literal["log_message", "capture_screen", "add_custom_control", "set_camera", "add_object", "set_key_event_handler", "remove_object", "remove_custom_control", "set_custom_control", "set_enable", "get_camera_state", "set_camera_state_event_handler", "set_config"] | None: ...

global___ServerCommand = ServerCommand

@typing_extensions.final
class CustomControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Slider(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        MIN_FIELD_NUMBER: builtins.int
        MAX_FIELD_NUMBER: builtins.int
        STEP_FIELD_NUMBER: builtins.int
        INIT_VALUE_FIELD_NUMBER: builtins.int
        PARENT_FIELD_NUMBER: builtins.int
        name: builtins.str
        min: builtins.float
        max: builtins.float
        step: builtins.float
        init_value: builtins.float
        parent: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            min: builtins.float = ...,
            max: builtins.float = ...,
            step: builtins.float = ...,
            init_value: builtins.float = ...,
            parent: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["init_value", b"init_value", "max", b"max", "min", b"min", "name", b"name", "parent", b"parent", "step", b"step"]) -> None: ...

    @typing_extensions.final
    class CheckBox(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        INIT_VALUE_FIELD_NUMBER: builtins.int
        PARENT_FIELD_NUMBER: builtins.int
        name: builtins.str
        init_value: builtins.bool
        parent: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            init_value: builtins.bool = ...,
            parent: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["init_value", b"init_value", "name", b"name", "parent", b"parent"]) -> None: ...

    @typing_extensions.final
    class TextBox(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        INIT_VALUE_FIELD_NUMBER: builtins.int
        PARENT_FIELD_NUMBER: builtins.int
        name: builtins.str
        init_value: builtins.str
        parent: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            init_value: builtins.str = ...,
            parent: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["init_value", b"init_value", "name", b"name", "parent", b"parent"]) -> None: ...

    @typing_extensions.final
    class SelectBox(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        ITEMS_FIELD_NUMBER: builtins.int
        INIT_VALUE_FIELD_NUMBER: builtins.int
        PARENT_FIELD_NUMBER: builtins.int
        name: builtins.str
        @property
        def items(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        init_value: builtins.str
        parent: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            items: collections.abc.Iterable[builtins.str] | None = ...,
            init_value: builtins.str = ...,
            parent: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["init_value", b"init_value", "items", b"items", "name", b"name", "parent", b"parent"]) -> None: ...

    @typing_extensions.final
    class Button(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        PARENT_FIELD_NUMBER: builtins.int
        name: builtins.str
        parent: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            parent: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "parent", b"parent"]) -> None: ...

    @typing_extensions.final
    class ColorPicker(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        INIT_VALUE_FIELD_NUMBER: builtins.int
        PARENT_FIELD_NUMBER: builtins.int
        name: builtins.str
        init_value: builtins.str
        parent: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            init_value: builtins.str = ...,
            parent: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["init_value", b"init_value", "name", b"name", "parent", b"parent"]) -> None: ...

    @typing_extensions.final
    class Folder(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        PARENT_FIELD_NUMBER: builtins.int
        name: builtins.str
        parent: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            parent: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "parent", b"parent"]) -> None: ...

    SLIDER_FIELD_NUMBER: builtins.int
    CHECKBOX_FIELD_NUMBER: builtins.int
    TEXTBOX_FIELD_NUMBER: builtins.int
    SELECTBOX_FIELD_NUMBER: builtins.int
    BUTTON_FIELD_NUMBER: builtins.int
    COLOR_PICKER_FIELD_NUMBER: builtins.int
    FOLDER_FIELD_NUMBER: builtins.int
    @property
    def slider(self) -> global___CustomControl.Slider: ...
    @property
    def checkbox(self) -> global___CustomControl.CheckBox: ...
    @property
    def textbox(self) -> global___CustomControl.TextBox: ...
    @property
    def selectbox(self) -> global___CustomControl.SelectBox: ...
    @property
    def button(self) -> global___CustomControl.Button: ...
    @property
    def color_picker(self) -> global___CustomControl.ColorPicker: ...
    @property
    def folder(self) -> global___CustomControl.Folder: ...
    def __init__(
        self,
        *,
        slider: global___CustomControl.Slider | None = ...,
        checkbox: global___CustomControl.CheckBox | None = ...,
        textbox: global___CustomControl.TextBox | None = ...,
        selectbox: global___CustomControl.SelectBox | None = ...,
        button: global___CustomControl.Button | None = ...,
        color_picker: global___CustomControl.ColorPicker | None = ...,
        folder: global___CustomControl.Folder | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Control", b"Control", "button", b"button", "checkbox", b"checkbox", "color_picker", b"color_picker", "folder", b"folder", "selectbox", b"selectbox", "slider", b"slider", "textbox", b"textbox"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Control", b"Control", "button", b"button", "checkbox", b"checkbox", "color_picker", b"color_picker", "folder", b"folder", "selectbox", b"selectbox", "slider", b"slider", "textbox", b"textbox"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Control", b"Control"]) -> typing_extensions.Literal["slider", "checkbox", "textbox", "selectbox", "button", "color_picker", "folder"] | None: ...

global___CustomControl = CustomControl

@typing_extensions.final
class RemoveCustomControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALL_FIELD_NUMBER: builtins.int
    BY_UUID_FIELD_NUMBER: builtins.int
    all: builtins.bool
    by_uuid: builtins.str
    def __init__(
        self,
        *,
        all: builtins.bool = ...,
        by_uuid: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Object", b"Object", "all", b"all", "by_uuid", b"by_uuid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Object", b"Object", "all", b"all", "by_uuid", b"by_uuid"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Object", b"Object"]) -> typing_extensions.Literal["all", "by_uuid"] | None: ...

global___RemoveCustomControl = RemoveCustomControl

@typing_extensions.final
class SetCamera(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _CameraMode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CameraModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SetCamera._CameraMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        PERSPECTIVE: SetCamera._CameraMode.ValueType  # 0
        ORTHOGRAPHIC: SetCamera._CameraMode.ValueType  # 1

    class CameraMode(_CameraMode, metaclass=_CameraModeEnumTypeWrapper): ...
    PERSPECTIVE: SetCamera.CameraMode.ValueType  # 0
    ORTHOGRAPHIC: SetCamera.CameraMode.ValueType  # 1

    @typing_extensions.final
    class Roll(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ANGLE_FIELD_NUMBER: builtins.int
        UP_FIELD_NUMBER: builtins.int
        angle: builtins.float
        @property
        def up(self) -> global___VecXYZf: ...
        def __init__(
            self,
            *,
            angle: builtins.float = ...,
            up: global___VecXYZf | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["up", b"up"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["angle", b"angle", "up", b"up"]) -> None: ...

    PERSPECTIVE_FOV_FIELD_NUMBER: builtins.int
    ORTHOGRAPHIC_FRUSTUM_HEIGHT_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    ROLL_FIELD_NUMBER: builtins.int
    ROLL_LOCK_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    perspective_fov: builtins.float
    orthographic_frustum_height: builtins.float
    @property
    def position(self) -> global___VecXYZf: ...
    @property
    def target(self) -> global___VecXYZf: ...
    @property
    def roll(self) -> global___SetCamera.Roll: ...
    roll_lock: builtins.bool
    mode: global___SetCamera.CameraMode.ValueType
    def __init__(
        self,
        *,
        perspective_fov: builtins.float = ...,
        orthographic_frustum_height: builtins.float = ...,
        position: global___VecXYZf | None = ...,
        target: global___VecXYZf | None = ...,
        roll: global___SetCamera.Roll | None = ...,
        roll_lock: builtins.bool = ...,
        mode: global___SetCamera.CameraMode.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Camera", b"Camera", "mode", b"mode", "orthographic_frustum_height", b"orthographic_frustum_height", "perspective_fov", b"perspective_fov", "position", b"position", "roll", b"roll", "roll_lock", b"roll_lock", "target", b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Camera", b"Camera", "mode", b"mode", "orthographic_frustum_height", b"orthographic_frustum_height", "perspective_fov", b"perspective_fov", "position", b"position", "roll", b"roll", "roll_lock", b"roll_lock", "target", b"target"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Camera", b"Camera"]) -> typing_extensions.Literal["perspective_fov", "orthographic_frustum_height", "position", "target", "roll", "roll_lock", "mode"] | None: ...

global___SetCamera = SetCamera

@typing_extensions.final
class AddObject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class LineSet(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        POINTS_FIELD_NUMBER: builtins.int
        FROM_INDEX_FIELD_NUMBER: builtins.int
        TO_INDEX_FIELD_NUMBER: builtins.int
        COLORS_FIELD_NUMBER: builtins.int
        WIDTHS_FIELD_NUMBER: builtins.int
        @property
        def points(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VecXYZf]: ...
        @property
        def from_index(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        @property
        def to_index(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        @property
        def colors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VecRGBf]: ...
        @property
        def widths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        def __init__(
            self,
            *,
            points: collections.abc.Iterable[global___VecXYZf] | None = ...,
            from_index: collections.abc.Iterable[builtins.int] | None = ...,
            to_index: collections.abc.Iterable[builtins.int] | None = ...,
            colors: collections.abc.Iterable[global___VecRGBf] | None = ...,
            widths: collections.abc.Iterable[builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["colors", b"colors", "from_index", b"from_index", "points", b"points", "to_index", b"to_index", "widths", b"widths"]) -> None: ...

    @typing_extensions.final
    class PointCloud(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PCD_DATA_FIELD_NUMBER: builtins.int
        POINT_SIZE_FIELD_NUMBER: builtins.int
        pcd_data: builtins.bytes
        point_size: builtins.float
        def __init__(
            self,
            *,
            pcd_data: builtins.bytes = ...,
            point_size: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["pcd_data", b"pcd_data", "point_size", b"point_size"]) -> None: ...

    @typing_extensions.final
    class Overlay(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _CoordinateType:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _CoordinateTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AddObject.Overlay._CoordinateType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            WORLD_COORDINATE: AddObject.Overlay._CoordinateType.ValueType  # 0
            SCREEN_COORDINATE: AddObject.Overlay._CoordinateType.ValueType  # 1

        class CoordinateType(_CoordinateType, metaclass=_CoordinateTypeEnumTypeWrapper): ...
        WORLD_COORDINATE: AddObject.Overlay.CoordinateType.ValueType  # 0
        SCREEN_COORDINATE: AddObject.Overlay.CoordinateType.ValueType  # 1

        @typing_extensions.final
        class Image(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            DATA_FIELD_NUMBER: builtins.int
            WIDTH_FIELD_NUMBER: builtins.int
            data: builtins.bytes
            width: builtins.int
            def __init__(
                self,
                *,
                data: builtins.bytes = ...,
                width: builtins.int = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "width", b"width"]) -> None: ...

        POSITION_FIELD_NUMBER: builtins.int
        HTML_FIELD_NUMBER: builtins.int
        IMAGE_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        @property
        def position(self) -> global___VecXYZf: ...
        html: builtins.str
        @property
        def image(self) -> global___AddObject.Overlay.Image: ...
        type: global___AddObject.Overlay.CoordinateType.ValueType
        def __init__(
            self,
            *,
            position: global___VecXYZf | None = ...,
            html: builtins.str = ...,
            image: global___AddObject.Overlay.Image | None = ...,
            type: global___AddObject.Overlay.CoordinateType.ValueType = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["Contents", b"Contents", "html", b"html", "image", b"image", "position", b"position"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["Contents", b"Contents", "html", b"html", "image", b"image", "position", b"position", "type", b"type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["Contents", b"Contents"]) -> typing_extensions.Literal["html", "image"] | None: ...

    @typing_extensions.final
    class Mesh(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        POINTS_FIELD_NUMBER: builtins.int
        VERTEX_A_INDEX_FIELD_NUMBER: builtins.int
        VERTEX_B_INDEX_FIELD_NUMBER: builtins.int
        VERTEX_C_INDEX_FIELD_NUMBER: builtins.int
        COLORS_FIELD_NUMBER: builtins.int
        @property
        def points(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VecXYZf]: ...
        @property
        def vertex_a_index(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        @property
        def vertex_b_index(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        @property
        def vertex_c_index(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        @property
        def colors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VecRGBf]: ...
        def __init__(
            self,
            *,
            points: collections.abc.Iterable[global___VecXYZf] | None = ...,
            vertex_a_index: collections.abc.Iterable[builtins.int] | None = ...,
            vertex_b_index: collections.abc.Iterable[builtins.int] | None = ...,
            vertex_c_index: collections.abc.Iterable[builtins.int] | None = ...,
            colors: collections.abc.Iterable[global___VecRGBf] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["colors", b"colors", "points", b"points", "vertex_a_index", b"vertex_a_index", "vertex_b_index", b"vertex_b_index", "vertex_c_index", b"vertex_c_index"]) -> None: ...

    @typing_extensions.final
    class Image(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DOUBLE_SIDE_FIELD_NUMBER: builtins.int
        UPPER_LEFT_FIELD_NUMBER: builtins.int
        LOWER_LEFT_FIELD_NUMBER: builtins.int
        LOWER_RIGHT_FIELD_NUMBER: builtins.int
        DATA_FIELD_NUMBER: builtins.int
        double_side: builtins.bool
        @property
        def upper_left(self) -> global___VecXYZf: ...
        @property
        def lower_left(self) -> global___VecXYZf: ...
        @property
        def lower_right(self) -> global___VecXYZf: ...
        data: builtins.bytes
        def __init__(
            self,
            *,
            double_side: builtins.bool = ...,
            upper_left: global___VecXYZf | None = ...,
            lower_left: global___VecXYZf | None = ...,
            lower_right: global___VecXYZf | None = ...,
            data: builtins.bytes = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["lower_left", b"lower_left", "lower_right", b"lower_right", "upper_left", b"upper_left"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "double_side", b"double_side", "lower_left", b"lower_left", "lower_right", b"lower_right", "upper_left", b"upper_left"]) -> None: ...

    LINE_SET_FIELD_NUMBER: builtins.int
    POINT_CLOUD_FIELD_NUMBER: builtins.int
    OVERLAY_FIELD_NUMBER: builtins.int
    MESH_FIELD_NUMBER: builtins.int
    IMAGE_FIELD_NUMBER: builtins.int
    @property
    def line_set(self) -> global___AddObject.LineSet: ...
    @property
    def point_cloud(self) -> global___AddObject.PointCloud: ...
    @property
    def overlay(self) -> global___AddObject.Overlay: ...
    @property
    def mesh(self) -> global___AddObject.Mesh: ...
    @property
    def image(self) -> global___AddObject.Image: ...
    def __init__(
        self,
        *,
        line_set: global___AddObject.LineSet | None = ...,
        point_cloud: global___AddObject.PointCloud | None = ...,
        overlay: global___AddObject.Overlay | None = ...,
        mesh: global___AddObject.Mesh | None = ...,
        image: global___AddObject.Image | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Object", b"Object", "image", b"image", "line_set", b"line_set", "mesh", b"mesh", "overlay", b"overlay", "point_cloud", b"point_cloud"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Object", b"Object", "image", b"image", "line_set", b"line_set", "mesh", b"mesh", "overlay", b"overlay", "point_cloud", b"point_cloud"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Object", b"Object"]) -> typing_extensions.Literal["line_set", "point_cloud", "overlay", "mesh", "image"] | None: ...

global___AddObject = AddObject

@typing_extensions.final
class RemoveObject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALL_FIELD_NUMBER: builtins.int
    BY_UUID_FIELD_NUMBER: builtins.int
    all: builtins.bool
    by_uuid: builtins.str
    def __init__(
        self,
        *,
        all: builtins.bool = ...,
        by_uuid: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Object", b"Object", "all", b"all", "by_uuid", b"by_uuid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Object", b"Object", "all", b"all", "by_uuid", b"by_uuid"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Object", b"Object"]) -> typing_extensions.Literal["all", "by_uuid"] | None: ...

global___RemoveObject = RemoveObject

@typing_extensions.final
class SetKeyEventHandler(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYDOWN_FIELD_NUMBER: builtins.int
    KEYUP_FIELD_NUMBER: builtins.int
    KEYPRESS_FIELD_NUMBER: builtins.int
    keydown: builtins.bool
    keyup: builtins.bool
    keypress: builtins.bool
    def __init__(
        self,
        *,
        keydown: builtins.bool = ...,
        keyup: builtins.bool = ...,
        keypress: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Event", b"Event", "keydown", b"keydown", "keypress", b"keypress", "keyup", b"keyup"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Event", b"Event", "keydown", b"keydown", "keypress", b"keypress", "keyup", b"keyup"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Event", b"Event"]) -> typing_extensions.Literal["keydown", "keyup", "keypress"] | None: ...

global___SetKeyEventHandler = SetKeyEventHandler

@typing_extensions.final
class SetCameraStateEventHandler(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADD_WITH_INTERVAL_FIELD_NUMBER: builtins.int
    REMOVE_BY_UUID_FIELD_NUMBER: builtins.int
    REMOVE_ALL_FIELD_NUMBER: builtins.int
    add_with_interval: builtins.float
    remove_by_uuid: builtins.str
    remove_all: builtins.bool
    def __init__(
        self,
        *,
        add_with_interval: builtins.float = ...,
        remove_by_uuid: builtins.str = ...,
        remove_all: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Action", b"Action", "add_with_interval", b"add_with_interval", "remove_all", b"remove_all", "remove_by_uuid", b"remove_by_uuid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Action", b"Action", "add_with_interval", b"add_with_interval", "remove_all", b"remove_all", "remove_by_uuid", b"remove_by_uuid"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Action", b"Action"]) -> typing_extensions.Literal["add_with_interval", "remove_by_uuid", "remove_all"] | None: ...

global___SetCameraStateEventHandler = SetCameraStateEventHandler

@typing_extensions.final
class VecXYZf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    z: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___VecXYZf = VecXYZf

@typing_extensions.final
class VecRGBf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    R_FIELD_NUMBER: builtins.int
    G_FIELD_NUMBER: builtins.int
    B_FIELD_NUMBER: builtins.int
    r: builtins.float
    g: builtins.float
    b: builtins.float
    def __init__(
        self,
        *,
        r: builtins.float = ...,
        g: builtins.float = ...,
        b: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["b", b"b", "g", b"g", "r", b"r"]) -> None: ...

global___VecRGBf = VecRGBf

@typing_extensions.final
class SetCustomControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Slider(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        MIN_FIELD_NUMBER: builtins.int
        MAX_FIELD_NUMBER: builtins.int
        STEP_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        name: builtins.str
        min: builtins.float
        max: builtins.float
        step: builtins.float
        value: builtins.float
        def __init__(
            self,
            *,
            name: builtins.str | None = ...,
            min: builtins.float | None = ...,
            max: builtins.float | None = ...,
            step: builtins.float | None = ...,
            value: builtins.float | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_max", b"_max", "_min", b"_min", "_name", b"_name", "_step", b"_step", "_value", b"_value", "max", b"max", "min", b"min", "name", b"name", "step", b"step", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_max", b"_max", "_min", b"_min", "_name", b"_name", "_step", b"_step", "_value", b"_value", "max", b"max", "min", b"min", "name", b"name", "step", b"step", "value", b"value"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_max", b"_max"]) -> typing_extensions.Literal["max"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_min", b"_min"]) -> typing_extensions.Literal["min"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_name", b"_name"]) -> typing_extensions.Literal["name"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_step", b"_step"]) -> typing_extensions.Literal["step"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_value", b"_value"]) -> typing_extensions.Literal["value"] | None: ...

    @typing_extensions.final
    class CheckBox(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        name: builtins.str
        value: builtins.bool
        def __init__(
            self,
            *,
            name: builtins.str | None = ...,
            value: builtins.bool | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_name", b"_name", "_value", b"_value", "name", b"name", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_name", b"_name", "_value", b"_value", "name", b"name", "value", b"value"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_name", b"_name"]) -> typing_extensions.Literal["name"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_value", b"_value"]) -> typing_extensions.Literal["value"] | None: ...

    @typing_extensions.final
    class TextBox(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        name: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str | None = ...,
            value: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_name", b"_name", "_value", b"_value", "name", b"name", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_name", b"_name", "_value", b"_value", "name", b"name", "value", b"value"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_name", b"_name"]) -> typing_extensions.Literal["name"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_value", b"_value"]) -> typing_extensions.Literal["value"] | None: ...

    @typing_extensions.final
    class SelectBox(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        ITEMS_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        name: builtins.str
        @property
        def items(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        value: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str | None = ...,
            items: collections.abc.Iterable[builtins.str] | None = ...,
            value: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_name", b"_name", "_value", b"_value", "name", b"name", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_name", b"_name", "_value", b"_value", "items", b"items", "name", b"name", "value", b"value"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_name", b"_name"]) -> typing_extensions.Literal["name"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_value", b"_value"]) -> typing_extensions.Literal["value"] | None: ...

    @typing_extensions.final
    class Button(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        name: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_name", b"_name", "name", b"name"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_name", b"_name", "name", b"name"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_name", b"_name"]) -> typing_extensions.Literal["name"] | None: ...

    @typing_extensions.final
    class ColorPicker(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        name: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str | None = ...,
            value: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_name", b"_name", "_value", b"_value", "name", b"name", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_name", b"_name", "_value", b"_value", "name", b"name", "value", b"value"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_name", b"_name"]) -> typing_extensions.Literal["name"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_value", b"_value"]) -> typing_extensions.Literal["value"] | None: ...

    TARGET_FIELD_NUMBER: builtins.int
    SLIDER_FIELD_NUMBER: builtins.int
    CHECKBOX_FIELD_NUMBER: builtins.int
    TEXTBOX_FIELD_NUMBER: builtins.int
    SELECTBOX_FIELD_NUMBER: builtins.int
    BUTTON_FIELD_NUMBER: builtins.int
    COLOR_PICKER_FIELD_NUMBER: builtins.int
    target: builtins.str
    @property
    def slider(self) -> global___SetCustomControl.Slider: ...
    @property
    def checkbox(self) -> global___SetCustomControl.CheckBox: ...
    @property
    def textbox(self) -> global___SetCustomControl.TextBox: ...
    @property
    def selectbox(self) -> global___SetCustomControl.SelectBox: ...
    @property
    def button(self) -> global___SetCustomControl.Button: ...
    @property
    def color_picker(self) -> global___SetCustomControl.ColorPicker: ...
    def __init__(
        self,
        *,
        target: builtins.str = ...,
        slider: global___SetCustomControl.Slider | None = ...,
        checkbox: global___SetCustomControl.CheckBox | None = ...,
        textbox: global___SetCustomControl.TextBox | None = ...,
        selectbox: global___SetCustomControl.SelectBox | None = ...,
        button: global___SetCustomControl.Button | None = ...,
        color_picker: global___SetCustomControl.ColorPicker | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Control", b"Control", "button", b"button", "checkbox", b"checkbox", "color_picker", b"color_picker", "selectbox", b"selectbox", "slider", b"slider", "textbox", b"textbox"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Control", b"Control", "button", b"button", "checkbox", b"checkbox", "color_picker", b"color_picker", "selectbox", b"selectbox", "slider", b"slider", "target", b"target", "textbox", b"textbox"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Control", b"Control"]) -> typing_extensions.Literal["slider", "checkbox", "textbox", "selectbox", "button", "color_picker"] | None: ...

global___SetCustomControl = SetCustomControl

@typing_extensions.final
class SetConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROTATESPEED_FIELD_NUMBER: builtins.int
    ZOOMSPEED_FIELD_NUMBER: builtins.int
    PANSPEED_FIELD_NUMBER: builtins.int
    ROLLSPEED_FIELD_NUMBER: builtins.int
    rotateSpeed: builtins.float
    zoomSpeed: builtins.float
    panSpeed: builtins.float
    rollSpeed: builtins.float
    def __init__(
        self,
        *,
        rotateSpeed: builtins.float = ...,
        zoomSpeed: builtins.float = ...,
        panSpeed: builtins.float = ...,
        rollSpeed: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Config", b"Config", "panSpeed", b"panSpeed", "rollSpeed", b"rollSpeed", "rotateSpeed", b"rotateSpeed", "zoomSpeed", b"zoomSpeed"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Config", b"Config", "panSpeed", b"panSpeed", "rollSpeed", b"rollSpeed", "rotateSpeed", b"rotateSpeed", "zoomSpeed", b"zoomSpeed"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Config", b"Config"]) -> typing_extensions.Literal["rotateSpeed", "zoomSpeed", "panSpeed", "rollSpeed"] | None: ...

global___SetConfig = SetConfig
