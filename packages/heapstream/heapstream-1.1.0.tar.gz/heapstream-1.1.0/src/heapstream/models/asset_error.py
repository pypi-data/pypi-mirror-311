# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .asset_error_type import AssetErrorType


@JsonMap({"type_": "type"})
class AssetError(BaseModel):
    """AssetError

    :param audio_track_id: ID of the audio track this error is connected to.
    :type audio_track_id: str
    :param messages: Error messages with more details.
    :type messages: List[str]
    :param track_id: ID of the text track this error is connected to.
    :type track_id: str
    :param type_: type_
    :type type_: AssetErrorType
    """

    def __init__(
        self,
        audio_track_id: str,
        messages: List[str],
        track_id: str,
        type_: AssetErrorType,
    ):
        """AssetError

        :param audio_track_id: ID of the audio track this error is connected to.
        :type audio_track_id: str
        :param messages: Error messages with more details.
        :type messages: List[str]
        :param track_id: ID of the text track this error is connected to.
        :type track_id: str
        :param type_: type_
        :type type_: AssetErrorType
        """
        self.audio_track_id = self._define_str(
            "audio_track_id", audio_track_id, nullable=True
        )
        self.messages = messages
        self.track_id = self._define_str("track_id", track_id, nullable=True)
        self.type_ = self._enum_matching(type_, AssetErrorType.list(), "type_")
