# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .audio_track_status import AudioTrackStatus
from .audio_track_type import AudioTrackType


@JsonMap({"id_": "id", "type_": "type"})
class AudioTrack(BaseModel):
    """AudioTrack

    :param id_: ID of the object.
    :type id_: str
    :param lang_code: Language code of the object in the BCP 47 specification.
    :type lang_code: str
    :param original_link: Link to the original file. Only available for additional audio tracks. URL expires after 24 hours by default.
    :type original_link: str
    :param status: status
    :type status: AudioTrackStatus
    :param title: Title of the audio track.
    :type title: str
    :param type_: type_
    :type type_: AudioTrackType
    """

    def __init__(
        self,
        id_: str,
        lang_code: str,
        original_link: str,
        status: AudioTrackStatus,
        title: str,
        type_: AudioTrackType,
    ):
        """AudioTrack

        :param id_: ID of the object.
        :type id_: str
        :param lang_code: Language code of the object in the BCP 47 specification.
        :type lang_code: str
        :param original_link: Link to the original file. Only available for additional audio tracks. URL expires after 24 hours by default.
        :type original_link: str
        :param status: status
        :type status: AudioTrackStatus
        :param title: Title of the audio track.
        :type title: str
        :param type_: type_
        :type type_: AudioTrackType
        """
        self.id_ = id_
        self.lang_code = lang_code
        self.original_link = original_link
        self.status = self._enum_matching(status, AudioTrackStatus.list(), "status")
        self.title = title
        self.type_ = self._enum_matching(type_, AudioTrackType.list(), "type_")
