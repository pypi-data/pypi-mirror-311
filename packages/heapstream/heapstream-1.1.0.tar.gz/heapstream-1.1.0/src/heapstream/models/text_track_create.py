# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .text_track_upload_type import TextTrackUploadType


@JsonMap({"type_": "type"})
class TextTrackCreate(BaseModel):
    """TextTrackCreate

    :param file: File to upload.
    :type file: bytes
    :param lang_code: Language code of the text track. Language must be valid BCP 47., defaults to None
    :type lang_code: str, optional
    :param title: Title of the text track.
    :type title: str
    :param type_: type_
    :type type_: TextTrackUploadType
    """

    def __init__(
        self, file: bytes, title: str, type_: TextTrackUploadType, lang_code: str = None
    ):
        """TextTrackCreate

        :param file: File to upload.
        :type file: bytes
        :param lang_code: Language code of the text track. Language must be valid BCP 47., defaults to None
        :type lang_code: str, optional
        :param title: Title of the text track.
        :type title: str
        :param type_: type_
        :type type_: TextTrackUploadType
        """
        self.file = file
        if lang_code is not None:
            self.lang_code = lang_code
        self.title = self._define_str("title", title, max_length=64)
        self.type_ = self._enum_matching(type_, TextTrackUploadType.list(), "type_")
