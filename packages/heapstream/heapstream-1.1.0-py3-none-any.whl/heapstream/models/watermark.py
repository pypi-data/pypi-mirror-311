# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .watermark_position import WatermarkPosition


@JsonMap({"id_": "id"})
class Watermark(BaseModel):
    """Watermark

    :param id_: ID of the object.
    :type id_: str
    :param image_link: Link to view the watermark image. URL expires after 24 hours by default.
    :type image_link: str
    :param opacity: The watermark's translucency can be adjusted on a scale from 0.0 to 1.0. A setting of 0.0 renders the watermark entirely transparent, while a setting of 1.0 makes it fully opaque. If the watermark originally possesses a degree of semi-transparency, selecting a value of 1.0 won't result in total opacity.
    :type opacity: float
    :param padding: Empty padding space between the neighboring borders (defined by position) of the video and the watermark. `0.0` means no padding at all, while 1.0 means full padding across the video's width or height. , defaults to None
    :type padding: float, optional
    :param position: position
    :type position: WatermarkPosition
    :param scale: Scale the watermark to (`scale` * height) of the video, while preserving its display aspect ratio., defaults to None
    :type scale: float, optional
    :param title: Title of the watermark.
    :type title: str
    """

    def __init__(
        self,
        id_: str,
        image_link: str,
        opacity: float,
        position: WatermarkPosition,
        title: str,
        padding: float = None,
        scale: float = None,
    ):
        """Watermark

        :param id_: ID of the object.
        :type id_: str
        :param image_link: Link to view the watermark image. URL expires after 24 hours by default.
        :type image_link: str
        :param opacity: The watermark's translucency can be adjusted on a scale from 0.0 to 1.0. A setting of 0.0 renders the watermark entirely transparent, while a setting of 1.0 makes it fully opaque. If the watermark originally possesses a degree of semi-transparency, selecting a value of 1.0 won't result in total opacity.
        :type opacity: float
        :param padding: Empty padding space between the neighboring borders (defined by position) of the video and the watermark. `0.0` means no padding at all, while 1.0 means full padding across the video's width or height. , defaults to None
        :type padding: float, optional
        :param position: position
        :type position: WatermarkPosition
        :param scale: Scale the watermark to (`scale` * height) of the video, while preserving its display aspect ratio., defaults to None
        :type scale: float, optional
        :param title: Title of the watermark.
        :type title: str
        """
        self.id_ = id_
        self.image_link = image_link
        self.opacity = self._define_number("opacity", opacity, ge=0, le=1)
        if padding is not None:
            self.padding = self._define_number("padding", padding, ge=0, le=1)
        self.position = self._enum_matching(
            position, WatermarkPosition.list(), "position"
        )
        if scale is not None:
            self.scale = self._define_number("scale", scale, le=1)
        self.title = self._define_str("title", title, min_length=1, max_length=64)
