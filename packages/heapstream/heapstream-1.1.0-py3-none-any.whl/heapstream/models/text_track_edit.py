# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .only_true_enum import OnlyTrueEnum


@JsonMap({})
class TextTrackEdit(BaseModel):
    """TextTrackEdit

    :param default: default, defaults to None
    :type default: OnlyTrueEnum, optional
    :param lang_code: Change the language code of the object., defaults to None
    :type lang_code: str, optional
    :param title: Title of the text track., defaults to None
    :type title: str, optional
    """

    def __init__(
        self, default: OnlyTrueEnum = None, lang_code: str = None, title: str = None
    ):
        """TextTrackEdit

        :param default: default, defaults to None
        :type default: OnlyTrueEnum, optional
        :param lang_code: Change the language code of the object., defaults to None
        :type lang_code: str, optional
        :param title: Title of the text track., defaults to None
        :type title: str, optional
        """
        if default is not None:
            self.default = self._enum_matching(default, OnlyTrueEnum.list(), "default")
        if lang_code is not None:
            self.lang_code = self._define_str("lang_code", lang_code, nullable=True)
        if title is not None:
            self.title = self._define_str("title", title, min_length=1, max_length=20)
