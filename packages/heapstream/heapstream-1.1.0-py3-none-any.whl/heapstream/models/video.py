# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .asset import Asset
from .video_status import VideoStatus


@JsonMap({"id_": "id"})
class Video(BaseModel):
    """Video

    :param asset: asset
    :type asset: Asset
    :param created_on: Timestamp when the object was created.
    :type created_on: str
    :param description: The video description.
    :type description: str
    :param hls_link: Link to the HLS m3u8 playlist. URL expires after 24 hours by default.
    :type hls_link: str
    :param id_: ID of the object.
    :type id_: str
    :param iframe_embed: HTML code to embed the video in an iframe. URL expires after 24 hours by default.
    :type iframe_embed: str
    :param meta: A dynamic key-value store to reference video data within various systems of record. Maximum size is 1KB in json format., defaults to None
    :type meta: dict, optional
    :param password: Password is used to view private videos.
    :type password: str
    :param permalink: Link to the canonical URL of the video.
    :type permalink: str
    :param public: Whether the video is public or not. Public videos can be viewed by just having the video url.
    :type public: bool
    :param status: status
    :type status: VideoStatus
    :param tags: List of strings to tag a video.
    :type tags: List[str]
    :param title: Title of the video.
    :type title: str
    """

    def __init__(
        self,
        asset: Asset,
        created_on: str,
        description: str,
        hls_link: str,
        id_: str,
        iframe_embed: str,
        password: str,
        permalink: str,
        public: bool,
        status: VideoStatus,
        tags: List[str],
        title: str,
        meta: dict = None,
    ):
        """Video

        :param asset: asset
        :type asset: Asset
        :param created_on: Timestamp when the object was created.
        :type created_on: str
        :param description: The video description.
        :type description: str
        :param hls_link: Link to the HLS m3u8 playlist. URL expires after 24 hours by default.
        :type hls_link: str
        :param id_: ID of the object.
        :type id_: str
        :param iframe_embed: HTML code to embed the video in an iframe. URL expires after 24 hours by default.
        :type iframe_embed: str
        :param meta: A dynamic key-value store to reference video data within various systems of record. Maximum size is 1KB in json format., defaults to None
        :type meta: dict, optional
        :param password: Password is used to view private videos.
        :type password: str
        :param permalink: Link to the canonical URL of the video.
        :type permalink: str
        :param public: Whether the video is public or not. Public videos can be viewed by just having the video url.
        :type public: bool
        :param status: status
        :type status: VideoStatus
        :param tags: List of strings to tag a video.
        :type tags: List[str]
        :param title: Title of the video.
        :type title: str
        """
        self.asset = self._define_object(asset, Asset)
        self.created_on = created_on
        self.description = description
        self.hls_link = hls_link
        self.id_ = id_
        self.iframe_embed = iframe_embed
        if meta is not None:
            self.meta = meta
        self.password = password
        self.permalink = self._define_str(
            "permalink", permalink, nullable=True, min_length=1, max_length=2083
        )
        self.public = public
        self.status = self._enum_matching(status, VideoStatus.list(), "status")
        self.tags = tags
        self.title = title
