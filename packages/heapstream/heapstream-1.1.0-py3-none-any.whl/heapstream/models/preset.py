# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .preset_type import PresetType


@JsonMap({"id_": "id"})
class Preset(BaseModel):
    """Preset

    :param audio_track_id: ID of the audio track the preset is connected to.
    :type audio_track_id: str
    :param bandwidth: HLS bandwidth of the video.
    :type bandwidth: int
    :param fps: FPS of the video.
    :type fps: float
    :param height: Height of the video.
    :type height: int
    :param id_: ID of the object.
    :type id_: str
    :param m3u8_link: Link to the m3u8 playlist. URL expires after 24 hours by default.
    :type m3u8_link: str
    :param stream_type: stream_type
    :type stream_type: PresetType
    :param width: Width of the video.
    :type width: int
    """

    def __init__(
        self,
        audio_track_id: str,
        bandwidth: int,
        fps: float,
        height: int,
        id_: str,
        m3u8_link: str,
        stream_type: PresetType,
        width: int,
    ):
        """Preset

        :param audio_track_id: ID of the audio track the preset is connected to.
        :type audio_track_id: str
        :param bandwidth: HLS bandwidth of the video.
        :type bandwidth: int
        :param fps: FPS of the video.
        :type fps: float
        :param height: Height of the video.
        :type height: int
        :param id_: ID of the object.
        :type id_: str
        :param m3u8_link: Link to the m3u8 playlist. URL expires after 24 hours by default.
        :type m3u8_link: str
        :param stream_type: stream_type
        :type stream_type: PresetType
        :param width: Width of the video.
        :type width: int
        """
        self.audio_track_id = self._define_str(
            "audio_track_id", audio_track_id, nullable=True
        )
        self.bandwidth = bandwidth
        self.fps = self._define_number("fps", fps, nullable=True)
        self.height = self._define_number("height", height, nullable=True)
        self.id_ = id_
        self.m3u8_link = m3u8_link
        self.stream_type = self._enum_matching(
            stream_type, PresetType.list(), "stream_type"
        )
        self.width = self._define_number("width", width, nullable=True)
