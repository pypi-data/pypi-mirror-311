import{d as y,B as A,W as b,J as g,e as h,c as w,g as a,h as C,u as k,o as v,j as u,k as e,C as B,D as r,y as D,K as I,L as l,Y as E}from"./index-BFro5MYh.js";import{_ as K}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-BJulCAZU.js";import{u as N}from"./usePageTitle-Bt2w5lgs.js";import{u as P}from"./usePrefectApi-BCy89XZ9.js";const $=y({__name:"AutomationEdit",async setup(T){let o,m;const i=P(),c=A(),_=k(),p=b("automationId"),s=([o,m]=g(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);N(`Edit Automation: ${s.name}`);const f=h(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function x(d){try{await i.automations.updateAutomation(p.value,d),l(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=E(t,r.error.automationUpdate);l(n,"error",{timeout:!1})}}return(d,t)=>{const n=C("p-layout-default");return v(),w(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(I),{crumbs:f.value},{actions:a(()=>[u(e(B),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[D(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(K,{automation:e(s),editing:"",onSubmit:x},null,8,["automation"])]),_:1})}}});export{$ as default};
//# sourceMappingURL=AutomationEdit-DSfT7URp.js.map
