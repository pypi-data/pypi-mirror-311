{
    "pd.read_pickle": "pd.read_pickle(filepath_or_buffer,compression='infer',storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_pickle.html#pandas.read_pickle",
    "df.to_pickle": "df.to_pickle(path,*,compression='infer',protocol=5,storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle",
    "pd.read_table": "pd.read_table(filepath_or_buffer,*,sep=<no_default>,delimiter=None,header='infer',names=<no_default>,index_col=None,usecols=None,dtype=None,engine=None,converters=None,true_values=None,false_values=None,skipinitialspace=False,skiprows=None,skipfooter=0,nrows=None,na_values=None,keep_default_na=True,na_filter=True,verbose=<no_default>,skip_blank_lines=True,parse_dates=False,infer_datetime_format=<no_default>,keep_date_col=<no_default>,date_parser=<no_default>,date_format=None,dayfirst=False,cache_dates=True,iterator=False,chunksize=None,compression='infer',thousands=None,decimal='.',lineterminator=None,quotechar='\"',quoting=0,doublequote=True,escapechar=None,comment=None,encoding=None,encoding_errors='strict',dialect=None,on_bad_lines='error',delim_whitespace=<no_default>,low_memory=True,memory_map=False,float_precision=None,storage_options=None,dtype_backend=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_table.html#pandas.read_table",
    "pd.read_csv": "pd.read_csv(filepath_or_buffer,*,sep=<no_default>,delimiter=None,header='infer',names=<no_default>,index_col=None,usecols=None,dtype=None,engine=None,converters=None,true_values=None,false_values=None,skipinitialspace=False,skiprows=None,skipfooter=0,nrows=None,na_values=None,keep_default_na=True,na_filter=True,verbose=<no_default>,skip_blank_lines=True,parse_dates=None,infer_datetime_format=<no_default>,keep_date_col=<no_default>,date_parser=<no_default>,date_format=None,dayfirst=False,cache_dates=True,iterator=False,chunksize=None,compression='infer',thousands=None,decimal='.',lineterminator=None,quotechar='\"',quoting=0,doublequote=True,escapechar=None,comment=None,encoding=None,encoding_errors='strict',dialect=None,on_bad_lines='error',delim_whitespace=<no_default>,low_memory=True,memory_map=False,float_precision=None,storage_options=None,dtype_backend=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_csv.html#pandas.read_csv",
    "df.to_csv": "df.to_csv(path_or_buf=None,*,sep=',',na_rep='',float_format=None,columns=None,header=True,index=True,index_label=None,mode='w',encoding=None,compression='infer',quoting=None,quotechar='\"',lineterminator=None,chunksize=None,date_format=None,doublequote=True,escapechar=None,decimal='.',errors='strict',storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv",
    "pd.read_fwf": "pd.read_fwf(filepath_or_buffer,*,colspecs='infer',widths=None,infer_nrows=100,dtype_backend=<no_default>,iterator=False,chunksize=None,**kwds)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_fwf.html#pandas.read_fwf",
    "pd.read_clipboard": "pd.read_clipboard(sep='\\\\s+',dtype_backend=<no_default>,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_clipboard.html#pandas.read_clipboard",
    "df.to_clipboard": "df.to_clipboard(*,excel=True,sep=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard",
    "pd.read_excel": "pd.read_excel(io,sheet_name=0,*,header=0,names=None,index_col=None,usecols=None,dtype=None,engine=None,converters=None,true_values=None,false_values=None,skiprows=None,nrows=None,na_values=None,keep_default_na=True,na_filter=True,verbose=False,parse_dates=False,date_parser=<no_default>,date_format=None,thousands=None,decimal='.',comment=None,skipfooter=0,storage_options=None,dtype_backend=<no_default>,engine_kwargs=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_excel.html#pandas.read_excel",
    "df.to_excel": "df.to_excel(excel_writer,*,sheet_name='Sheet1',na_rep='',float_format=None,columns=None,header=True,index=True,index_label=None,startrow=0,startcol=0,engine=None,merge_cells=True,inf_rep='inf',freeze_panes=None,storage_options=None,engine_kwargs=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel",
    "pandas.ExcelFile": "pandas.ExcelFile(path_or_buffer,engine=None,storage_options=None,engine_kwargs=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.html#pandas.ExcelFile",
    "ExcelFile.book": "ExcelFile.book\nhttps://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.book.html#pandas.ExcelFile.book",
    "ExcelFile.sheet_names": "ExcelFile.sheet_names\nhttps://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.sheet_names.html#pandas.ExcelFile.sheet_names",
    "ExcelFile.parse": "ExcelFile.parse(sheet_name=0,header=0,names=None,index_col=None,usecols=None,converters=None,true_values=None,false_values=None,skiprows=None,nrows=None,na_values=None,parse_dates=False,date_parser=<no_default>,date_format=None,thousands=None,comment=None,skipfooter=0,dtype_backend=<no_default>,**kwds)\nhttps://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse",
    "Styler.to_excel": "Styler.to_excel(excel_writer,sheet_name='Sheet1',na_rep='',float_format=None,columns=None,header=True,index=True,index_label=None,startrow=0,startcol=0,engine=None,merge_cells=True,encoding=None,inf_rep='inf',verbose=True,freeze_panes=None,storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel",
    "pandas.ExcelWriter": "pandas.ExcelWriter(path,engine=None,date_format=None,datetime_format=None,mode='w',storage_options=None,if_sheet_exists=None,engine_kwargs=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter",
    "pd.read_json": "pd.read_json(path_or_buf,*,orient=None,typ='frame',dtype=None,convert_axes=None,convert_dates=True,keep_default_dates=True,precise_float=False,date_unit=None,encoding=None,encoding_errors='strict',lines=False,chunksize=None,compression='infer',nrows=None,storage_options=None,dtype_backend=<no_default>,engine='ujson')\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_json.html#pandas.read_json",
    "pd.json_normalize": "pd.json_normalize(data,record_path=None,meta=None,meta_prefix=None,record_prefix=None,errors='raise',sep='.',max_level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html#pandas.json_normalize",
    "df.to_json": "df.to_json(path_or_buf=None,*,orient=None,date_format=None,double_precision=10,force_ascii=True,date_unit='ms',default_handler=None,lines=False,compression='infer',index=None,indent=None,storage_options=None,mode='w')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json",
    "pd.io.json.build_table_schema": "pd.io.json.build_table_schema(data,index=True,primary_key=None,version=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.io.json.build_table_schema.html#pandas.io.json.build_table_schema",
    "pd.read_html": "pd.read_html(io,*,match='.+',flavor=None,header=None,index_col=None,skiprows=None,attrs=None,parse_dates=False,thousands=',',encoding=None,decimal='.',converters=None,na_values=None,keep_default_na=True,displayed_only=True,extract_links=None,dtype_backend=<no_default>,storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_html.html#pandas.read_html",
    "df.to_html": "df.to_html(buf=None,*,columns=None,col_space=None,header=True,index=True,na_rep='NaN',formatters=None,float_format=None,sparsify=None,index_names=True,justify=None,max_rows=None,max_cols=None,show_dimensions=False,decimal='.',bold_rows=True,classes=None,escape=True,notebook=False,border=None,table_id=None,render_links=False,encoding=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html",
    "Styler.to_html": "Styler.to_html(buf=None,*,table_uuid=None,table_attributes=None,sparse_index=None,sparse_columns=None,bold_headers=False,caption=None,max_rows=None,max_columns=None,encoding=None,doctype_html=False,exclude_styles=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html",
    "pd.read_xml": "pd.read_xml(path_or_buffer,*,xpath='./*',namespaces=None,elems_only=False,attrs_only=False,names=None,dtype=None,converters=None,parse_dates=None,encoding='utf-8',parser='lxml',stylesheet=None,iterparse=None,compression='infer',storage_options=None,dtype_backend=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_xml.html#pandas.read_xml",
    "df.to_xml": "df.to_xml(path_or_buffer=None,*,index=True,root_name='data',row_name='row',na_rep=None,attr_cols=None,elem_cols=None,namespaces=None,prefix=None,encoding='utf-8',xml_declaration=True,pretty_print=True,parser='lxml',stylesheet=None,compression='infer',storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml",
    "df.to_latex": "df.to_latex(buf=None,*,columns=None,header=True,index=True,na_rep='NaN',formatters=None,float_format=None,sparsify=None,index_names=True,bold_rows=False,column_format=None,longtable=None,escape=None,encoding=None,decimal='.',multicolumn=None,multicolumn_format=None,multirow=None,caption=None,label=None,position=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex",
    "Styler.to_latex": "Styler.to_latex(buf=None,*,column_format=None,position=None,position_float=None,hrules=None,clines=None,label=None,caption=None,sparse_index=None,sparse_columns=None,multirow_align=None,multicol_align=None,siunitx=False,environment=None,encoding=None,convert_css=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex",
    "pd.read_hdf": "pd.read_hdf(path_or_buf,key=None,mode='r',errors='strict',where=None,start=None,stop=None,columns=None,iterator=False,chunksize=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_hdf.html#pandas.read_hdf",
    "HDFStore.put": "HDFStore.put(key,value,format=None,index=True,append=False,complib=None,complevel=None,min_itemsize=None,nan_rep=None,data_columns=None,encoding=None,errors='strict',track_times=True,dropna=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.HDFStore.put.html#pandas.HDFStore.put",
    "HDFStore.append": "HDFStore.append(key,value,format=None,axes=None,index=True,append=True,complib=None,complevel=None,columns=None,min_itemsize=None,nan_rep=None,chunksize=None,expectedrows=None,dropna=None,data_columns=None,encoding=None,errors='strict')\nhttps://pandas.pydata.org/docs/reference/api/pandas.HDFStore.append.html#pandas.HDFStore.append",
    "HDFStore.get": "HDFStore.get(key)\nhttps://pandas.pydata.org/docs/reference/api/pandas.HDFStore.get.html#pandas.HDFStore.get",
    "HDFStore.select": "HDFStore.select(key,where=None,start=None,stop=None,columns=None,iterator=False,chunksize=None,auto_close=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.HDFStore.select.html#pandas.HDFStore.select",
    "HDFStore.info": "HDFStore.info()\nhttps://pandas.pydata.org/docs/reference/api/pandas.HDFStore.info.html#pandas.HDFStore.info",
    "HDFStore.keys": "HDFStore.keys(include='pandas')\nhttps://pandas.pydata.org/docs/reference/api/pandas.HDFStore.keys.html#pandas.HDFStore.keys",
    "HDFStore.groups": "HDFStore.groups()\nhttps://pandas.pydata.org/docs/reference/api/pandas.HDFStore.groups.html#pandas.HDFStore.groups",
    "HDFStore.walk": "HDFStore.walk(where='/')\nhttps://pandas.pydata.org/docs/reference/api/pandas.HDFStore.walk.html#pandas.HDFStore.walk",
    "pd.read_feather": "pd.read_feather(path,columns=None,use_threads=True,storage_options=None,dtype_backend=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_feather.html#pandas.read_feather",
    "df.to_feather": "df.to_feather(path,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather",
    "pd.read_parquet": "pd.read_parquet(path,engine='auto',columns=None,storage_options=None,use_nullable_dtypes=<no_default>,dtype_backend=<no_default>,filesystem=None,filters=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_parquet.html#pandas.read_parquet",
    "df.to_parquet": "df.to_parquet(path=None,*,engine='auto',compression='snappy',index=None,partition_cols=None,storage_options=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet",
    "pd.read_orc": "pd.read_orc(path,columns=None,dtype_backend=<no_default>,filesystem=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_orc.html#pandas.read_orc",
    "df.to_orc": "df.to_orc(path=None,*,engine='pyarrow',index=None,engine_kwargs=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc",
    "pd.read_sas": "pd.read_sas(filepath_or_buffer,*,format=None,index=None,encoding=None,chunksize=None,iterator=False,compression='infer')\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_sas.html#pandas.read_sas",
    "pd.read_spss": "pd.read_spss(path,usecols=None,convert_categoricals=True,dtype_backend=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_spss.html#pandas.read_spss",
    "pd.read_sql_table": "pd.read_sql_table(table_name,con,schema=None,index_col=None,coerce_float=True,parse_dates=None,columns=None,chunksize=None,dtype_backend=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_sql_table.html#pandas.read_sql_table",
    "pd.read_sql_query": "pd.read_sql_query(sql,con,index_col=None,coerce_float=True,params=None,parse_dates=None,chunksize=None,dtype=None,dtype_backend=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_sql_query.html#pandas.read_sql_query",
    "pd.read_sql": "pd.read_sql(sql,con,index_col=None,coerce_float=True,params=None,parse_dates=None,columns=None,chunksize=None,dtype_backend=<no_default>,dtype=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_sql.html#pandas.read_sql",
    "df.to_sql": "df.to_sql(name,con,*,schema=None,if_exists='fail',index=True,index_label=None,chunksize=None,dtype=None,method=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql",
    "pd.read_gbq": "pd.read_gbq(query,project_id=None,index_col=None,col_order=None,reauth=False,auth_local_webserver=True,dialect=None,location=None,configuration=None,credentials=None,use_bqstorage_api=None,max_results=None,progress_bar_type=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_gbq.html#pandas.read_gbq",
    "pd.read_stata": "pd.read_stata(filepath_or_buffer,*,convert_dates=True,convert_categoricals=True,index_col=None,convert_missing=False,preserve_dtypes=True,columns=None,order_categoricals=True,chunksize=None,iterator=False,compression='infer',storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.read_stata.html#pandas.read_stata",
    "df.to_stata": "df.to_stata(path,*,convert_dates=None,write_index=True,byteorder=None,time_stamp=None,data_label=None,variable_labels=None,version=114,convert_strl=None,compression='infer',storage_options=None,value_labels=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata",
    "StataReader.data_label": "StataReader.data_label\nhttps://pandas.pydata.org/docs/reference/api/pandas.io.stata.StataReader.data_label.html#pandas.io.stata.StataReader.data_label",
    "StataReader.value_labels": "StataReader.value_labels()\nhttps://pandas.pydata.org/docs/reference/api/pandas.io.stata.StataReader.value_labels.html#pandas.io.stata.StataReader.value_labels",
    "StataReader.variable_labels": "StataReader.variable_labels()\nhttps://pandas.pydata.org/docs/reference/api/pandas.io.stata.StataReader.variable_labels.html#pandas.io.stata.StataReader.variable_labels",
    "StataWriter.write_file": "StataWriter.write_file()\nhttps://pandas.pydata.org/docs/reference/api/pandas.io.stata.StataWriter.write_file.html#pandas.io.stata.StataWriter.write_file",
    "pandas.DataFrame": "pandas.DataFrame(data=None,index=None,columns=None,dtype=None,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html#pandas.DataFrame",
    "pandas.Series": "pandas.Series(data=None,index=None,dtype=None,name=None,copy=None,fastpath=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.html#pandas.Series",
    "pd.melt": "pd.melt(frame,id_vars=None,value_vars=None,var_name=None,value_name='value',col_level=None,ignore_index=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.melt.html#pandas.melt",
    "pd.pivot": "pd.pivot(data,*,columns,index=<no_default>,values=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.pivot.html#pandas.pivot",
    "pd.pivot_table": "pd.pivot_table(data,values=None,index=None,columns=None,aggfunc='mean',fill_value=None,margins=False,dropna=True,margins_name='All',observed=<no_default>,sort=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.pivot_table.html#pandas.pivot_table",
    "pd.crosstab": "pd.crosstab(index,columns,values=None,rownames=None,colnames=None,aggfunc=None,margins=False,margins_name='All',dropna=True,normalize=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.crosstab.html#pandas.crosstab",
    "pd.cut": "pd.cut(x,bins,right=True,labels=None,retbins=False,precision=3,include_lowest=False,duplicates='raise',ordered=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.cut.html#pandas.cut",
    "pd.qcut": "pd.qcut(x,q,labels=None,retbins=False,precision=3,duplicates='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.qcut.html#pandas.qcut",
    "pd.merge": "pd.merge(left,right,how='inner',on=None,left_on=None,right_on=None,left_index=False,right_index=False,sort=False,suffixes=('_x','_y'),copy=None,indicator=False,validate=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.merge.html#pandas.merge",
    "pd.merge_ordered": "pd.merge_ordered(left,right,on=None,left_on=None,right_on=None,left_by=None,right_by=None,fill_method=None,suffixes=('_x','_y'),how='outer')\nhttps://pandas.pydata.org/docs/reference/api/pandas.merge_ordered.html#pandas.merge_ordered",
    "pd.merge_asof": "pd.merge_asof(left,right,on=None,left_on=None,right_on=None,left_index=False,right_index=False,by=None,left_by=None,right_by=None,suffixes=('_x','_y'),tolerance=None,allow_exact_matches=True,direction='backward')\nhttps://pandas.pydata.org/docs/reference/api/pandas.merge_asof.html#pandas.merge_asof",
    "pd.concat": "pd.concat(objs,*,axis=0,join='outer',ignore_index=False,keys=None,levels=None,names=None,verify_integrity=False,sort=False,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.concat.html#pandas.concat",
    "pd.get_dummies": "pd.get_dummies(data,prefix=None,prefix_sep='_',dummy_na=False,columns=None,sparse=False,drop_first=False,dtype=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.get_dummies.html#pandas.get_dummies",
    "pd.from_dummies": "pd.from_dummies(data,sep=None,default_category=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.from_dummies.html#pandas.from_dummies",
    "pd.factorize": "pd.factorize(values,sort=False,use_na_sentinel=True,size_hint=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.factorize.html#pandas.factorize",
    "pd.unique": "pd.unique(values)\nhttps://pandas.pydata.org/docs/reference/api/pandas.unique.html#pandas.unique",
    "pd.lreshape": "pd.lreshape(data,groups,dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.lreshape.html#pandas.lreshape",
    "pd.wide_to_long": "pd.wide_to_long(df,stubnames,i,j,sep='',suffix='\\\\d+')\nhttps://pandas.pydata.org/docs/reference/api/pandas.wide_to_long.html#pandas.wide_to_long",
    "pd.isna": "pd.isna(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.isna.html#pandas.isna",
    "pd.isnull": "pd.isnull(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.isnull.html#pandas.isnull",
    "pd.notna": "pd.notna(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.notna.html#pandas.notna",
    "pd.notnull": "pd.notnull(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.notnull.html#pandas.notnull",
    "pd.to_numeric": "pd.to_numeric(arg,errors='raise',downcast=None,dtype_backend=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.to_numeric.html#pandas.to_numeric",
    "pd.to_datetime": "pd.to_datetime(arg,errors='raise',dayfirst=False,yearfirst=False,utc=False,format=None,exact=<no_default>,unit=None,infer_datetime_format=<no_default>,origin='unix',cache=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.to_datetime.html#pandas.to_datetime",
    "pd.to_timedelta": "pd.to_timedelta(arg,unit=None,errors='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.to_timedelta.html#pandas.to_timedelta",
    "pd.date_range": "pd.date_range(start=None,end=None,periods=None,freq=None,tz=None,normalize=False,name=None,inclusive='both',*,unit=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.date_range.html#pandas.date_range",
    "pd.bdate_range": "pd.bdate_range(start=None,end=None,periods=None,freq='B',tz=None,normalize=True,name=None,weekmask=None,holidays=None,inclusive='both',**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.bdate_range.html#pandas.bdate_range",
    "pd.period_range": "pd.period_range(start=None,end=None,periods=None,freq=None,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.period_range.html#pandas.period_range",
    "pd.timedelta_range": "pd.timedelta_range(start=None,end=None,periods=None,freq=None,name=None,closed=None,*,unit=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.timedelta_range.html#pandas.timedelta_range",
    "pd.infer_freq": "pd.infer_freq(index)\nhttps://pandas.pydata.org/docs/reference/api/pandas.infer_freq.html#pandas.infer_freq",
    "pd.interval_range": "pd.interval_range(start=None,end=None,periods=None,freq=None,name=None,closed='right')\nhttps://pandas.pydata.org/docs/reference/api/pandas.interval_range.html#pandas.interval_range",
    "pd.eval": "pd.eval(expr,parser='pd',engine=None,local_dict=None,global_dict=None,resolvers=(),level=0,target=None,inplace=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.eval.html#pandas.eval",
    "pd.tseries.api.guess_datetime_format": "pd.tseries.api.guess_datetime_format(dt_str,dayfirst=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.tseries.api.guess_datetime_format.html#pandas.tseries.api.guess_datetime_format",
    "pd.util.hash_array": "pd.util.hash_array(vals,encoding='utf8',hash_key='0123456789123456',categorize=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.util.hash_array.html#pandas.util.hash_array",
    "pd.util.hash_pd_object": "pd.util.hash_pd_object(obj,index=True,encoding='utf8',hash_key='0123456789123456',categorize=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object",
    "pd.api.interchange.from_dataframe": "pd.api.interchange.from_dataframe(df,allow_copy=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe",
    "Series.index": "Series.index\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.index.html#pandas.Series.index",
    "Series.array": "Series.array\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.array.html#pandas.Series.array",
    "Series.values": "Series.values\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.values.html#pandas.Series.values",
    "Series.dtype": "Series.dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dtype.html#pandas.Series.dtype",
    "Series.shape": "Series.shape\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.shape.html#pandas.Series.shape",
    "Series.nbytes": "Series.nbytes\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.nbytes.html#pandas.Series.nbytes",
    "Series.ndim": "Series.ndim\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.ndim.html#pandas.Series.ndim",
    "Series.size": "Series.size\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.size.html#pandas.Series.size",
    "Series.T": "Series.T\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.T.html#pandas.Series.T",
    "Series.memory_usage": "Series.memory_usage(index=True,deep=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.memory_usage.html#pandas.Series.memory_usage",
    "Series.hasnans": "Series.hasnans\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.hasnans.html#pandas.Series.hasnans",
    "Series.empty": "Series.empty\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.empty.html#pandas.Series.empty",
    "Series.dtypes": "Series.dtypes\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dtypes.html#pandas.Series.dtypes",
    "Series.name": "Series.name\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.name.html#pandas.Series.name",
    "Series.flags": "Series.flags\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.flags.html#pandas.Series.flags",
    "Series.set_flags": "Series.set_flags(*,copy=False,allows_duplicate_labels=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.set_flags.html#pandas.Series.set_flags",
    "Series.astype": "Series.astype(dtype,copy=None,errors='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.astype.html#pandas.Series.astype",
    "Series.convert_dtypes": "Series.convert_dtypes(infer_objects=True,convert_string=True,convert_integer=True,convert_boolean=True,convert_floating=True,dtype_backend='numpy_nullable')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes",
    "Series.infer_objects": "Series.infer_objects(copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects",
    "Series.copy": "Series.copy(deep=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.copy.html#pandas.Series.copy",
    "Series.bool": "Series.bool()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.bool.html#pandas.Series.bool",
    "Series.to_numpy": "Series.to_numpy(dtype=None,copy=False,na_value=<no_default>,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy",
    "Series.to_period": "Series.to_period(freq=None,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_period.html#pandas.Series.to_period",
    "Series.to_timestamp": "Series.to_timestamp(freq=None,how='start',copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_timestamp.html#pandas.Series.to_timestamp",
    "Series.to_list": "Series.to_list()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_list.html#pandas.Series.to_list",
    "Series.__array__": "Series.__array__(dtype=None,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.__array__.html#pandas.Series.__array__",
    "Series.get": "Series.get(key,default=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.get.html#pandas.Series.get",
    "Series.at": "Series.at\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.at.html#pandas.Series.at",
    "Series.iat": "Series.iat\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.iat.html#pandas.Series.iat",
    "Series.loc": "Series.loc\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.loc.html#pandas.Series.loc",
    "Series.iloc": "Series.iloc\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.iloc.html#pandas.Series.iloc",
    "Series.__iter__": "Series.__iter__()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.__iter__.html#pandas.Series.__iter__",
    "Series.items": "Series.items()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.items.html#pandas.Series.items",
    "Series.keys": "Series.keys()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.keys.html#pandas.Series.keys",
    "Series.pop": "Series.pop(item)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.pop.html#pandas.Series.pop",
    "Series.item": "Series.item()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.item.html#pandas.Series.item",
    "Series.xs": "Series.xs(key,axis=0,level=None,drop_level=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.xs.html#pandas.Series.xs",
    "Series.add": "Series.add(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.add.html#pandas.Series.add",
    "Series.sub": "Series.sub(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sub.html#pandas.Series.sub",
    "Series.mul": "Series.mul(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.mul.html#pandas.Series.mul",
    "Series.div": "Series.div(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.div.html#pandas.Series.div",
    "Series.truediv": "Series.truediv(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.truediv.html#pandas.Series.truediv",
    "Series.floordiv": "Series.floordiv(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.floordiv.html#pandas.Series.floordiv",
    "Series.mod": "Series.mod(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.mod.html#pandas.Series.mod",
    "Series.pow": "Series.pow(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.pow.html#pandas.Series.pow",
    "Series.radd": "Series.radd(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.radd.html#pandas.Series.radd",
    "Series.rsub": "Series.rsub(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rsub.html#pandas.Series.rsub",
    "Series.rmul": "Series.rmul(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rmul.html#pandas.Series.rmul",
    "Series.rdiv": "Series.rdiv(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rdiv.html#pandas.Series.rdiv",
    "Series.rtruediv": "Series.rtruediv(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rtruediv.html#pandas.Series.rtruediv",
    "Series.rfloordiv": "Series.rfloordiv(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rfloordiv.html#pandas.Series.rfloordiv",
    "Series.rmod": "Series.rmod(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rmod.html#pandas.Series.rmod",
    "Series.rpow": "Series.rpow(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rpow.html#pandas.Series.rpow",
    "Series.combine": "Series.combine(other,func,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.combine.html#pandas.Series.combine",
    "Series.combine_first": "Series.combine_first(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.combine_first.html#pandas.Series.combine_first",
    "Series.round": "Series.round(decimals=0,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.round.html#pandas.Series.round",
    "Series.lt": "Series.lt(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.lt.html#pandas.Series.lt",
    "Series.gt": "Series.gt(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.gt.html#pandas.Series.gt",
    "Series.le": "Series.le(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.le.html#pandas.Series.le",
    "Series.ge": "Series.ge(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.ge.html#pandas.Series.ge",
    "Series.ne": "Series.ne(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.ne.html#pandas.Series.ne",
    "Series.eq": "Series.eq(other,level=None,fill_value=None,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.eq.html#pandas.Series.eq",
    "Series.product": "Series.product(axis=None,skipna=True,numeric_only=False,min_count=0,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.product.html#pandas.Series.product",
    "Series.dot": "Series.dot(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dot.html#pandas.Series.dot",
    "Series.apply": "Series.apply(func,convert_dtype=<no_default>,args=(),*,by_row='compat',**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.apply.html#pandas.Series.apply",
    "Series.agg": "Series.agg(func=None,axis=0,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.agg.html#pandas.Series.agg",
    "Series.aggregate": "Series.aggregate(func=None,axis=0,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate",
    "Series.transform": "Series.transform(func,axis=0,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.transform.html#pandas.Series.transform",
    "Series.map": "Series.map(arg,na_action=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.map.html#pandas.Series.map",
    "Series.groupby": "Series.groupby(by=None,axis=0,level=None,as_index=True,sort=True,group_keys=True,observed=<no_default>,dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.groupby.html#pandas.Series.groupby",
    "Series.rolling": "Series.rolling(window,min_periods=None,center=False,win_type=None,on=None,axis=<no_default>,closed=None,step=None,method='single')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rolling.html#pandas.Series.rolling",
    "Series.expanding": "Series.expanding(min_periods=1,axis=<no_default>,method='single')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.expanding.html#pandas.Series.expanding",
    "Series.ewm": "Series.ewm(com=None,span=None,halflife=None,alpha=None,min_periods=0,adjust=True,ignore_na=False,axis=<no_default>,times=None,method='single')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.ewm.html#pandas.Series.ewm",
    "Series.pipe": "Series.pipe(func,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.pipe.html#pandas.Series.pipe",
    "Series.abs": "Series.abs()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.abs.html#pandas.Series.abs",
    "Series.all": "Series.all(axis=0,bool_only=False,skipna=True,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.all.html#pandas.Series.all",
    "Series.any": "Series.any(*,axis=0,bool_only=False,skipna=True,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.any.html#pandas.Series.any",
    "Series.autocorr": "Series.autocorr(lag=1)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.autocorr.html#pandas.Series.autocorr",
    "Series.between": "Series.between(left,right,inclusive='both')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.between.html#pandas.Series.between",
    "Series.clip": "Series.clip(lower=None,upper=None,*,axis=None,inplace=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.clip.html#pandas.Series.clip",
    "Series.corr": "Series.corr(other,method='pearson',min_periods=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.corr.html#pandas.Series.corr",
    "Series.count": "Series.count()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.count.html#pandas.Series.count",
    "Series.cov": "Series.cov(other,min_periods=None,ddof=1)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cov.html#pandas.Series.cov",
    "Series.cummax": "Series.cummax(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cummax.html#pandas.Series.cummax",
    "Series.cummin": "Series.cummin(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cummin.html#pandas.Series.cummin",
    "Series.cumprod": "Series.cumprod(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cumprod.html#pandas.Series.cumprod",
    "Series.cumsum": "Series.cumsum(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cumsum.html#pandas.Series.cumsum",
    "Series.describe": "Series.describe(percentiles=None,include=None,exclude=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.describe.html#pandas.Series.describe",
    "Series.diff": "Series.diff(periods=1)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.diff.html#pandas.Series.diff",
    "Series.factorize": "Series.factorize(sort=False,use_na_sentinel=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.factorize.html#pandas.Series.factorize",
    "Series.kurt": "Series.kurt(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.kurt.html#pandas.Series.kurt",
    "Series.max": "Series.max(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.max.html#pandas.Series.max",
    "Series.mean": "Series.mean(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.mean.html#pandas.Series.mean",
    "Series.median": "Series.median(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.median.html#pandas.Series.median",
    "Series.min": "Series.min(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.min.html#pandas.Series.min",
    "Series.mode": "Series.mode(dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.mode.html#pandas.Series.mode",
    "Series.nlargest": "Series.nlargest(n=5,keep='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.nlargest.html#pandas.Series.nlargest",
    "Series.nsmallest": "Series.nsmallest(n=5,keep='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.nsmallest.html#pandas.Series.nsmallest",
    "Series.pct_change": "Series.pct_change(periods=1,fill_method=<no_default>,limit=<no_default>,freq=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.pct_change.html#pandas.Series.pct_change",
    "Series.prod": "Series.prod(axis=None,skipna=True,numeric_only=False,min_count=0,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.prod.html#pandas.Series.prod",
    "Series.quantile": "Series.quantile(q=0.5,interpolation='linear')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.quantile.html#pandas.Series.quantile",
    "Series.rank": "Series.rank(axis=0,method='average',numeric_only=False,na_option='keep',ascending=True,pct=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rank.html#pandas.Series.rank",
    "Series.sem": "Series.sem(axis=None,skipna=True,ddof=1,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sem.html#pandas.Series.sem",
    "Series.skew": "Series.skew(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.skew.html#pandas.Series.skew",
    "Series.std": "Series.std(axis=None,skipna=True,ddof=1,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.std.html#pandas.Series.std",
    "Series.sum": "Series.sum(axis=None,skipna=True,numeric_only=False,min_count=0,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sum.html#pandas.Series.sum",
    "Series.var": "Series.var(axis=None,skipna=True,ddof=1,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.var.html#pandas.Series.var",
    "Series.kurtosis": "Series.kurtosis(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.kurtosis.html#pandas.Series.kurtosis",
    "Series.unique": "Series.unique()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.unique.html#pandas.Series.unique",
    "Series.nunique": "Series.nunique(dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.nunique.html#pandas.Series.nunique",
    "Series.is_unique": "Series.is_unique\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.is_unique.html#pandas.Series.is_unique",
    "Series.is_monotonic_increasing": "Series.is_monotonic_increasing\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing",
    "Series.is_monotonic_decreasing": "Series.is_monotonic_decreasing\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.is_monotonic_decreasing.html#pandas.Series.is_monotonic_decreasing",
    "Series.value_counts": "Series.value_counts(normalize=False,sort=True,ascending=False,bins=None,dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts",
    "Series.align": "Series.align(other,join='outer',axis=None,level=None,copy=None,fill_value=None,method=<no_default>,limit=<no_default>,fill_axis=<no_default>,broadcast_axis=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.align.html#pandas.Series.align",
    "Series.case_when": "Series.case_when(caselist)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.case_when.html#pandas.Series.case_when",
    "Series.drop": "Series.drop(labels=None,*,axis=0,index=None,columns=None,level=None,inplace=False,errors='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.drop.html#pandas.Series.drop",
    "Series.droplevel": "Series.droplevel(level,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.droplevel.html#pandas.Series.droplevel",
    "Series.drop_duplicates": "Series.drop_duplicates(*,keep='first',inplace=False,ignore_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates",
    "Series.duplicated": "Series.duplicated(keep='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.duplicated.html#pandas.Series.duplicated",
    "Series.equals": "Series.equals(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.equals.html#pandas.Series.equals",
    "Series.first": "Series.first(offset)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.first.html#pandas.Series.first",
    "Series.head": "Series.head(n=5)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.head.html#pandas.Series.head",
    "Series.idxmax": "Series.idxmax(axis=0,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.idxmax.html#pandas.Series.idxmax",
    "Series.idxmin": "Series.idxmin(axis=0,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.idxmin.html#pandas.Series.idxmin",
    "Series.isin": "Series.isin(values)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.isin.html#pandas.Series.isin",
    "Series.last": "Series.last(offset)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.last.html#pandas.Series.last",
    "Series.reindex": "Series.reindex(index=None,*,axis=None,method=None,copy=None,level=None,fill_value=None,limit=None,tolerance=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.reindex.html#pandas.Series.reindex",
    "Series.reindex_like": "Series.reindex_like(other,method=None,copy=None,limit=None,tolerance=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.reindex_like.html#pandas.Series.reindex_like",
    "Series.rename": "Series.rename(index=None,*,axis=None,copy=None,inplace=False,level=None,errors='ignore')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rename.html#pandas.Series.rename",
    "Series.rename_axis": "Series.rename_axis(mapper=<no_default>,*,index=<no_default>,axis=0,copy=True,inplace=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis",
    "Series.reset_index": "Series.reset_index(level=None,*,drop=False,name=<no_default>,inplace=False,allow_duplicates=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index",
    "Series.sample": "Series.sample(n=None,frac=None,replace=False,weights=None,random_state=None,axis=None,ignore_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sample.html#pandas.Series.sample",
    "Series.set_axis": "Series.set_axis(labels,*,axis=0,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis",
    "Series.take": "Series.take(indices,axis=0,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.take.html#pandas.Series.take",
    "Series.tail": "Series.tail(n=5)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.tail.html#pandas.Series.tail",
    "Series.truncate": "Series.truncate(before=None,after=None,axis=None,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.truncate.html#pandas.Series.truncate",
    "Series.where": "Series.where(cond,other=nan,*,inplace=False,axis=None,level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.where.html#pandas.Series.where",
    "Series.mask": "Series.mask(cond,other=<no_default>,*,inplace=False,axis=None,level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.mask.html#pandas.Series.mask",
    "Series.add_prefix": "Series.add_prefix(prefix,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.add_prefix.html#pandas.Series.add_prefix",
    "Series.add_suffix": "Series.add_suffix(suffix,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.add_suffix.html#pandas.Series.add_suffix",
    "Series.filter": "Series.filter(items=None,like=None,regex=None,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.filter.html#pandas.Series.filter",
    "Series.backfill": "Series.backfill(*,axis=None,inplace=False,limit=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.backfill.html#pandas.Series.backfill",
    "Series.bfill": "Series.bfill(*,axis=None,inplace=False,limit=None,limit_area=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.bfill.html#pandas.Series.bfill",
    "Series.dropna": "Series.dropna(*,axis=0,inplace=False,how=None,ignore_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dropna.html#pandas.Series.dropna",
    "Series.ffill": "Series.ffill(*,axis=None,inplace=False,limit=None,limit_area=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.ffill.html#pandas.Series.ffill",
    "Series.fillna": "Series.fillna(value=None,*,method=None,axis=None,inplace=False,limit=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.fillna.html#pandas.Series.fillna",
    "Series.interpolate": "Series.interpolate(method='linear',*,axis=0,limit=None,inplace=False,limit_direction=None,limit_area=None,downcast=<no_default>,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate",
    "Series.isna": "Series.isna()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.isna.html#pandas.Series.isna",
    "Series.isnull": "Series.isnull()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.isnull.html#pandas.Series.isnull",
    "Series.notna": "Series.notna()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.notna.html#pandas.Series.notna",
    "Series.notnull": "Series.notnull()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.notnull.html#pandas.Series.notnull",
    "Series.pad": "Series.pad(*,axis=None,inplace=False,limit=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.pad.html#pandas.Series.pad",
    "Series.replace": "Series.replace(to_replace=None,value=<no_default>,*,inplace=False,limit=None,regex=False,method=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.replace.html#pandas.Series.replace",
    "Series.argsort": "Series.argsort(axis=0,kind='quicksort',order=None,stable=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.argsort.html#pandas.Series.argsort",
    "Series.argmin": "Series.argmin(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.argmin.html#pandas.Series.argmin",
    "Series.argmax": "Series.argmax(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.argmax.html#pandas.Series.argmax",
    "Series.reorder_levels": "Series.reorder_levels(order)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.reorder_levels.html#pandas.Series.reorder_levels",
    "Series.sort_values": "Series.sort_values(*,axis=0,ascending=True,inplace=False,kind='quicksort',na_position='last',ignore_index=False,key=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values",
    "Series.sort_index": "Series.sort_index(*,axis=0,level=None,ascending=True,inplace=False,kind='quicksort',na_position='last',sort_remaining=True,ignore_index=False,key=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index",
    "Series.swaplevel": "Series.swaplevel(i=-2,j=-1,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.swaplevel.html#pandas.Series.swaplevel",
    "Series.unstack": "Series.unstack(level=-1,fill_value=None,sort=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.unstack.html#pandas.Series.unstack",
    "Series.explode": "Series.explode(ignore_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.explode.html#pandas.Series.explode",
    "Series.searchsorted": "Series.searchsorted(value,side='left',sorter=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted",
    "Series.ravel": "Series.ravel(order='C')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.ravel.html#pandas.Series.ravel",
    "Series.repeat": "Series.repeat(repeats,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.repeat.html#pandas.Series.repeat",
    "Series.squeeze": "Series.squeeze(axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.squeeze.html#pandas.Series.squeeze",
    "Series.view": "Series.view(dtype=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.view.html#pandas.Series.view",
    "Series.compare": "Series.compare(other,align_axis=1,keep_shape=False,keep_equal=False,result_names=('self','other'))\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.compare.html#pandas.Series.compare",
    "Series.update": "Series.update(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.update.html#pandas.Series.update",
    "Series.asfreq": "Series.asfreq(freq,method=None,how=None,normalize=False,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.asfreq.html#pandas.Series.asfreq",
    "Series.asof": "Series.asof(where,subset=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.asof.html#pandas.Series.asof",
    "Series.shift": "Series.shift(periods=1,freq=None,axis=0,fill_value=<no_default>,suffix=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.shift.html#pandas.Series.shift",
    "Series.first_valid_index": "Series.first_valid_index()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.first_valid_index.html#pandas.Series.first_valid_index",
    "Series.last_valid_index": "Series.last_valid_index()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.last_valid_index.html#pandas.Series.last_valid_index",
    "Series.resample": "Series.resample(rule,axis=<no_default>,closed=None,label=None,convention=<no_default>,kind=<no_default>,on=None,level=None,origin='start_day',offset=None,group_keys=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.resample.html#pandas.Series.resample",
    "Series.tz_convert": "Series.tz_convert(tz,axis=0,level=None,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.tz_convert.html#pandas.Series.tz_convert",
    "Series.tz_localize": "Series.tz_localize(tz,axis=0,level=None,copy=None,ambiguous='raise',nonexistent='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.tz_localize.html#pandas.Series.tz_localize",
    "Series.at_time": "Series.at_time(time,asof=False,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.at_time.html#pandas.Series.at_time",
    "Series.between_time": "Series.between_time(start_time,end_time,inclusive='both',axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.between_time.html#pandas.Series.between_time",
    "Series.str": "Series.str()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.html#pandas.Series.str",
    "Series.cat": "Series.cat()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.html#pandas.Series.cat",
    "Series.dt": "Series.dt()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.html#pandas.Series.dt",
    "Series.sparse": "Series.sparse()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sparse.html#pandas.Series.sparse",
    "df.sparse": "df.sparse()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sparse.html#pandas.DataFrame.sparse",
    "Index.str": "Index.str()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.str.html#pandas.Index.str",
    "Series.dt.date": "Series.dt.date\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.date.html#pandas.Series.dt.date",
    "Series.dt.time": "Series.dt.time\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.time.html#pandas.Series.dt.time",
    "Series.dt.timetz": "Series.dt.timetz\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.timetz.html#pandas.Series.dt.timetz",
    "Series.dt.year": "Series.dt.year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.year.html#pandas.Series.dt.year",
    "Series.dt.month": "Series.dt.month\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.month.html#pandas.Series.dt.month",
    "Series.dt.day": "Series.dt.day\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.day.html#pandas.Series.dt.day",
    "Series.dt.hour": "Series.dt.hour\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.hour.html#pandas.Series.dt.hour",
    "Series.dt.minute": "Series.dt.minute\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.minute.html#pandas.Series.dt.minute",
    "Series.dt.second": "Series.dt.second\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.second.html#pandas.Series.dt.second",
    "Series.dt.microsecond": "Series.dt.microsecond\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.microsecond.html#pandas.Series.dt.microsecond",
    "Series.dt.nanosecond": "Series.dt.nanosecond\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.nanosecond.html#pandas.Series.dt.nanosecond",
    "Series.dt.dayofweek": "Series.dt.dayofweek\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.dayofweek.html#pandas.Series.dt.dayofweek",
    "Series.dt.day_of_week": "Series.dt.day_of_week\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.day_of_week.html#pandas.Series.dt.day_of_week",
    "Series.dt.weekday": "Series.dt.weekday\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.weekday.html#pandas.Series.dt.weekday",
    "Series.dt.dayofyear": "Series.dt.dayofyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.dayofyear.html#pandas.Series.dt.dayofyear",
    "Series.dt.day_of_year": "Series.dt.day_of_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.day_of_year.html#pandas.Series.dt.day_of_year",
    "Series.dt.days_in_month": "Series.dt.days_in_month\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.days_in_month.html#pandas.Series.dt.days_in_month",
    "Series.dt.quarter": "Series.dt.quarter\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.quarter.html#pandas.Series.dt.quarter",
    "Series.dt.is_month_start": "Series.dt.is_month_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.is_month_start.html#pandas.Series.dt.is_month_start",
    "Series.dt.is_month_end": "Series.dt.is_month_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.is_month_end.html#pandas.Series.dt.is_month_end",
    "Series.dt.is_quarter_start": "Series.dt.is_quarter_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.is_quarter_start.html#pandas.Series.dt.is_quarter_start",
    "Series.dt.is_quarter_end": "Series.dt.is_quarter_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.is_quarter_end.html#pandas.Series.dt.is_quarter_end",
    "Series.dt.is_year_start": "Series.dt.is_year_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.is_year_start.html#pandas.Series.dt.is_year_start",
    "Series.dt.is_year_end": "Series.dt.is_year_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.is_year_end.html#pandas.Series.dt.is_year_end",
    "Series.dt.is_leap_year": "Series.dt.is_leap_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.is_leap_year.html#pandas.Series.dt.is_leap_year",
    "Series.dt.daysinmonth": "Series.dt.daysinmonth\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.daysinmonth.html#pandas.Series.dt.daysinmonth",
    "Series.dt.tz": "Series.dt.tz\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.tz.html#pandas.Series.dt.tz",
    "Series.dt.freq": "Series.dt.freq\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.freq.html#pandas.Series.dt.freq",
    "Series.dt.unit": "Series.dt.unit\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.unit.html#pandas.Series.dt.unit",
    "Series.dt.isocalendar": "Series.dt.isocalendar()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar",
    "Series.dt.to_period": "Series.dt.to_period(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.to_period.html#pandas.Series.dt.to_period",
    "Series.dt.to_pydatetime": "Series.dt.to_pydatetime()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.to_pydatetime.html#pandas.Series.dt.to_pydatetime",
    "Series.dt.tz_localize": "Series.dt.tz_localize(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.tz_localize.html#pandas.Series.dt.tz_localize",
    "Series.dt.tz_convert": "Series.dt.tz_convert(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.tz_convert.html#pandas.Series.dt.tz_convert",
    "Series.dt.normalize": "Series.dt.normalize(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.normalize.html#pandas.Series.dt.normalize",
    "Series.dt.strftime": "Series.dt.strftime(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.strftime.html#pandas.Series.dt.strftime",
    "Series.dt.round": "Series.dt.round(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.round.html#pandas.Series.dt.round",
    "Series.dt.floor": "Series.dt.floor(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.floor.html#pandas.Series.dt.floor",
    "Series.dt.ceil": "Series.dt.ceil(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.ceil.html#pandas.Series.dt.ceil",
    "Series.dt.month_name": "Series.dt.month_name(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.month_name.html#pandas.Series.dt.month_name",
    "Series.dt.day_name": "Series.dt.day_name(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.day_name.html#pandas.Series.dt.day_name",
    "Series.dt.as_unit": "Series.dt.as_unit(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit",
    "Series.dt.qyear": "Series.dt.qyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.qyear.html#pandas.Series.dt.qyear",
    "Series.dt.start_time": "Series.dt.start_time\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.start_time.html#pandas.Series.dt.start_time",
    "Series.dt.end_time": "Series.dt.end_time\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.end_time.html#pandas.Series.dt.end_time",
    "Series.dt.days": "Series.dt.days\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.days.html#pandas.Series.dt.days",
    "Series.dt.seconds": "Series.dt.seconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.seconds.html#pandas.Series.dt.seconds",
    "Series.dt.microseconds": "Series.dt.microseconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.microseconds.html#pandas.Series.dt.microseconds",
    "Series.dt.nanoseconds": "Series.dt.nanoseconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.nanoseconds.html#pandas.Series.dt.nanoseconds",
    "Series.dt.components": "Series.dt.components\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.components.html#pandas.Series.dt.components",
    "Series.dt.to_pytimedelta": "Series.dt.to_pytimedelta()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.to_pytimedelta.html#pandas.Series.dt.to_pytimedelta",
    "Series.dt.total_seconds": "Series.dt.total_seconds(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.dt.total_seconds.html#pandas.Series.dt.total_seconds",
    "Series.str.capitalize": "Series.str.capitalize()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.capitalize.html#pandas.Series.str.capitalize",
    "Series.str.casefold": "Series.str.casefold()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.casefold.html#pandas.Series.str.casefold",
    "Series.str.cat": "Series.str.cat(others=None,sep=None,na_rep=None,join='left')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat",
    "Series.str.center": "Series.str.center(width,fillchar='')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.center.html#pandas.Series.str.center",
    "Series.str.contains": "Series.str.contains(pat,case=True,flags=0,na=None,regex=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.contains.html#pandas.Series.str.contains",
    "Series.str.count": "Series.str.count(pat,flags=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.count.html#pandas.Series.str.count",
    "Series.str.decode": "Series.str.decode(encoding,errors='strict')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.decode.html#pandas.Series.str.decode",
    "Series.str.encode": "Series.str.encode(encoding,errors='strict')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.encode.html#pandas.Series.str.encode",
    "Series.str.endswith": "Series.str.endswith(pat,na=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.endswith.html#pandas.Series.str.endswith",
    "Series.str.extract": "Series.str.extract(pat,flags=0,expand=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract",
    "Series.str.extractall": "Series.str.extractall(pat,flags=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.extractall.html#pandas.Series.str.extractall",
    "Series.str.find": "Series.str.find(sub,start=0,end=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.find.html#pandas.Series.str.find",
    "Series.str.findall": "Series.str.findall(pat,flags=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.findall.html#pandas.Series.str.findall",
    "Series.str.fullmatch": "Series.str.fullmatch(pat,case=True,flags=0,na=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch",
    "Series.str.get": "Series.str.get(i)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.get.html#pandas.Series.str.get",
    "Series.str.index": "Series.str.index(sub,start=0,end=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.index.html#pandas.Series.str.index",
    "Series.str.join": "Series.str.join(sep)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.join.html#pandas.Series.str.join",
    "Series.str.len": "Series.str.len()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.len.html#pandas.Series.str.len",
    "Series.str.ljust": "Series.str.ljust(width,fillchar='')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.ljust.html#pandas.Series.str.ljust",
    "Series.str.lower": "Series.str.lower()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower",
    "Series.str.lstrip": "Series.str.lstrip(to_strip=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.lstrip.html#pandas.Series.str.lstrip",
    "Series.str.match": "Series.str.match(pat,case=True,flags=0,na=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.match.html#pandas.Series.str.match",
    "Series.str.normalize": "Series.str.normalize(form)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.normalize.html#pandas.Series.str.normalize",
    "Series.str.pad": "Series.str.pad(width,side='left',fillchar='')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.pad.html#pandas.Series.str.pad",
    "Series.str.partition": "Series.str.partition(sep='',expand=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.partition.html#pandas.Series.str.partition",
    "Series.str.removeprefix": "Series.str.removeprefix(prefix)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.removeprefix.html#pandas.Series.str.removeprefix",
    "Series.str.removesuffix": "Series.str.removesuffix(suffix)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.removesuffix.html#pandas.Series.str.removesuffix",
    "Series.str.repeat": "Series.str.repeat(repeats)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.repeat.html#pandas.Series.str.repeat",
    "Series.str.replace": "Series.str.replace(pat,repl,n=-1,case=None,flags=0,regex=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace",
    "Series.str.rfind": "Series.str.rfind(sub,start=0,end=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.rfind.html#pandas.Series.str.rfind",
    "Series.str.rindex": "Series.str.rindex(sub,start=0,end=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.rindex.html#pandas.Series.str.rindex",
    "Series.str.rjust": "Series.str.rjust(width,fillchar='')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.rjust.html#pandas.Series.str.rjust",
    "Series.str.rpartition": "Series.str.rpartition(sep='',expand=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.rpartition.html#pandas.Series.str.rpartition",
    "Series.str.rstrip": "Series.str.rstrip(to_strip=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.rstrip.html#pandas.Series.str.rstrip",
    "Series.str.slice": "Series.str.slice(start=None,stop=None,step=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.slice.html#pandas.Series.str.slice",
    "Series.str.slice_replace": "Series.str.slice_replace(start=None,stop=None,repl=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.slice_replace.html#pandas.Series.str.slice_replace",
    "Series.str.split": "Series.str.split(pat=None,*,n=-1,expand=False,regex=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.split.html#pandas.Series.str.split",
    "Series.str.rsplit": "Series.str.rsplit(pat=None,*,n=-1,expand=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.rsplit.html#pandas.Series.str.rsplit",
    "Series.str.startswith": "Series.str.startswith(pat,na=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.startswith.html#pandas.Series.str.startswith",
    "Series.str.strip": "Series.str.strip(to_strip=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.strip.html#pandas.Series.str.strip",
    "Series.str.swapcase": "Series.str.swapcase()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.swapcase.html#pandas.Series.str.swapcase",
    "Series.str.title": "Series.str.title()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.title.html#pandas.Series.str.title",
    "Series.str.translate": "Series.str.translate(table)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.translate.html#pandas.Series.str.translate",
    "Series.str.upper": "Series.str.upper()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.upper.html#pandas.Series.str.upper",
    "Series.str.wrap": "Series.str.wrap(width,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.wrap.html#pandas.Series.str.wrap",
    "Series.str.zfill": "Series.str.zfill(width)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.zfill.html#pandas.Series.str.zfill",
    "Series.str.isalnum": "Series.str.isalnum()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.isalnum.html#pandas.Series.str.isalnum",
    "Series.str.isalpha": "Series.str.isalpha()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.isalpha.html#pandas.Series.str.isalpha",
    "Series.str.isdigit": "Series.str.isdigit()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.isdigit.html#pandas.Series.str.isdigit",
    "Series.str.isspace": "Series.str.isspace()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.isspace.html#pandas.Series.str.isspace",
    "Series.str.islower": "Series.str.islower()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.islower.html#pandas.Series.str.islower",
    "Series.str.isupper": "Series.str.isupper()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.isupper.html#pandas.Series.str.isupper",
    "Series.str.istitle": "Series.str.istitle()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.istitle.html#pandas.Series.str.istitle",
    "Series.str.isnumeric": "Series.str.isnumeric()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.isnumeric.html#pandas.Series.str.isnumeric",
    "Series.str.isdecimal": "Series.str.isdecimal()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.isdecimal.html#pandas.Series.str.isdecimal",
    "Series.str.get_dummies": "Series.str.get_dummies(sep='|')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies",
    "Series.cat.categories": "Series.cat.categories\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.categories.html#pandas.Series.cat.categories",
    "Series.cat.ordered": "Series.cat.ordered\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.ordered.html#pandas.Series.cat.ordered",
    "Series.cat.codes": "Series.cat.codes\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.codes.html#pandas.Series.cat.codes",
    "Series.cat.rename_categories": "Series.cat.rename_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.rename_categories.html#pandas.Series.cat.rename_categories",
    "Series.cat.reorder_categories": "Series.cat.reorder_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.reorder_categories.html#pandas.Series.cat.reorder_categories",
    "Series.cat.add_categories": "Series.cat.add_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.add_categories.html#pandas.Series.cat.add_categories",
    "Series.cat.remove_categories": "Series.cat.remove_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.remove_categories.html#pandas.Series.cat.remove_categories",
    "Series.cat.remove_unused_categories": "Series.cat.remove_unused_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.remove_unused_categories.html#pandas.Series.cat.remove_unused_categories",
    "Series.cat.set_categories": "Series.cat.set_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.set_categories.html#pandas.Series.cat.set_categories",
    "Series.cat.as_ordered": "Series.cat.as_ordered(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.as_ordered.html#pandas.Series.cat.as_ordered",
    "Series.cat.as_unordered": "Series.cat.as_unordered(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.cat.as_unordered.html#pandas.Series.cat.as_unordered",
    "Series.sparse.npoints": "Series.sparse.npoints\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sparse.npoints.html#pandas.Series.sparse.npoints",
    "Series.sparse.density": "Series.sparse.density\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sparse.density.html#pandas.Series.sparse.density",
    "Series.sparse.fill_value": "Series.sparse.fill_value\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sparse.fill_value.html#pandas.Series.sparse.fill_value",
    "Series.sparse.sp_values": "Series.sparse.sp_values\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sparse.sp_values.html#pandas.Series.sparse.sp_values",
    "methodSeries.sparse.from_coo": "methodSeries.sparse.from_coo(A,dense_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo",
    "Series.sparse.to_coo": "Series.sparse.to_coo(row_levels=(0,),column_levels=(1,),sort_labels=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo",
    "Series.list.flatten": "Series.list.flatten()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.list.flatten.html#pandas.Series.list.flatten",
    "Series.list.len": "Series.list.len()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.list.len.html#pandas.Series.list.len",
    "Series.list.__getitem__": "Series.list.__getitem__(key)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__",
    "Series.struct.dtypes": "Series.struct.dtypes\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.struct.dtypes.html#pandas.Series.struct.dtypes",
    "Series.struct.field": "Series.struct.field(name_or_index)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.struct.field.html#pandas.Series.struct.field",
    "Series.struct.explode": "Series.struct.explode()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.struct.explode.html#pandas.Series.struct.explode",
    "pandas.Flags": "pandas.Flags(obj,*,allows_duplicate_labels)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Flags.html#pandas.Flags",
    "Series.attrs": "Series.attrs\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.attrs.html#pandas.Series.attrs",
    "Series.plot": "Series.plot(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.html#pandas.Series.plot",
    "Series.plot.area": "Series.plot.area(x=None,y=None,stacked=True,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.area.html#pandas.Series.plot.area",
    "Series.plot.bar": "Series.plot.bar(x=None,y=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.bar.html#pandas.Series.plot.bar",
    "Series.plot.barh": "Series.plot.barh(x=None,y=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.barh.html#pandas.Series.plot.barh",
    "Series.plot.box": "Series.plot.box(by=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.box.html#pandas.Series.plot.box",
    "Series.plot.density": "Series.plot.density(bw_method=None,ind=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.density.html#pandas.Series.plot.density",
    "Series.plot.hist": "Series.plot.hist(by=None,bins=10,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.hist.html#pandas.Series.plot.hist",
    "Series.plot.kde": "Series.plot.kde(bw_method=None,ind=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.kde.html#pandas.Series.plot.kde",
    "Series.plot.line": "Series.plot.line(x=None,y=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.line.html#pandas.Series.plot.line",
    "Series.plot.pie": "Series.plot.pie(**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.plot.pie.html#pandas.Series.plot.pie",
    "Series.hist": "Series.hist(by=None,ax=None,grid=True,xlabelsize=None,xrot=None,ylabelsize=None,yrot=None,figsize=None,bins=10,backend=None,legend=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.hist.html#pandas.Series.hist",
    "Series.to_pickle": "Series.to_pickle(path,*,compression='infer',protocol=5,storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle",
    "Series.to_csv": "Series.to_csv(path_or_buf=None,*,sep=',',na_rep='',float_format=None,columns=None,header=True,index=True,index_label=None,mode='w',encoding=None,compression='infer',quoting=None,quotechar='\"',lineterminator=None,chunksize=None,date_format=None,doublequote=True,escapechar=None,decimal='.',errors='strict',storage_options=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv",
    "Series.to_dict": "Series.to_dict(*,into=<class'dict'>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict",
    "Series.to_excel": "Series.to_excel(excel_writer,*,sheet_name='Sheet1',na_rep='',float_format=None,columns=None,header=True,index=True,index_label=None,startrow=0,startcol=0,engine=None,merge_cells=True,inf_rep='inf',freeze_panes=None,storage_options=None,engine_kwargs=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel",
    "Series.to_frame": "Series.to_frame(name=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_frame.html#pandas.Series.to_frame",
    "Series.to_xarray": "Series.to_xarray()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_xarray.html#pandas.Series.to_xarray",
    "Series.to_hdf": "Series.to_hdf(path_or_buf,*,key,mode='a',complevel=None,complib=None,append=False,format=None,index=True,min_itemsize=None,nan_rep=None,dropna=None,data_columns=None,errors='strict',encoding='UTF-8')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_hdf.html#pandas.Series.to_hdf",
    "Series.to_sql": "Series.to_sql(name,con,*,schema=None,if_exists='fail',index=True,index_label=None,chunksize=None,dtype=None,method=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_sql.html#pandas.Series.to_sql",
    "Series.to_json": "Series.to_json(path_or_buf=None,*,orient=None,date_format=None,double_precision=10,force_ascii=True,date_unit='ms',default_handler=None,lines=False,compression='infer',index=None,indent=None,storage_options=None,mode='w')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_json.html#pandas.Series.to_json",
    "Series.to_string": "Series.to_string(buf=None,na_rep='NaN',float_format=None,header=True,index=True,length=False,dtype=False,name=False,max_rows=None,min_rows=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_string.html#pandas.Series.to_string",
    "Series.to_clipboard": "Series.to_clipboard(*,excel=True,sep=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_clipboard.html#pandas.Series.to_clipboard",
    "Series.to_latex": "Series.to_latex(buf=None,*,columns=None,header=True,index=True,na_rep='NaN',formatters=None,float_format=None,sparsify=None,index_names=True,bold_rows=False,column_format=None,longtable=None,escape=None,encoding=None,decimal='.',multicolumn=None,multicolumn_format=None,multirow=None,caption=None,label=None,position=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_latex.html#pandas.Series.to_latex",
    "Series.to_markdown": "Series.to_markdown(buf=None,mode='wt',index=True,storage_options=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown",
    "pandas.MultiIndex": "pandas.MultiIndex(levels=None,codes=None,sortorder=None,names=None,dtype=None,copy=False,name=None,verify_integrity=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.html#pandas.MultiIndex",
    "df.index": "df.index\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.index.html#pandas.DataFrame.index",
    "df.columns": "df.columns\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.columns.html#pandas.DataFrame.columns",
    "DataFrame.dtypes": "DataFrame.dtypes\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dtypes.html#pandas.DataFrame.dtypes",
    "df.info": "df.info(verbose=None,buf=None,max_cols=None,memory_usage=None,show_counts=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info",
    "df.select_dtypes": "df.select_dtypes(include=None,exclude=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.select_dtypes.html#pandas.DataFrame.select_dtypes",
    "DataFrame.values": "DataFrame.values\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.values.html#pandas.DataFrame.values",
    "DataFrame.axes": "DataFrame.axes\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.axes.html#pandas.DataFrame.axes",
    "DataFrame.ndim": "DataFrame.ndim\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ndim.html#pandas.DataFrame.ndim",
    "DataFrame.size": "DataFrame.size\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.size.html#pandas.DataFrame.size",
    "DataFrame.shape": "DataFrame.shape\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shape.html#pandas.DataFrame.shape",
    "df.memory_usage": "df.memory_usage(index=True,deep=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage",
    "DataFrame.empty": "DataFrame.empty\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.empty.html#pandas.DataFrame.empty",
    "df.set_flags": "df.set_flags(*,copy=False,allows_duplicate_labels=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.set_flags.html#pandas.DataFrame.set_flags",
    "df.astype": "df.astype(dtype,copy=None,errors='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype",
    "df.convert_dtypes": "df.convert_dtypes(infer_objects=True,convert_string=True,convert_integer=True,convert_boolean=True,convert_floating=True,dtype_backend='numpy_nullable')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes",
    "df.infer_objects": "df.infer_objects(copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects",
    "df.copy": "df.copy(deep=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.copy.html#pandas.DataFrame.copy",
    "df.bool": "df.bool()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.bool.html#pandas.DataFrame.bool",
    "df.to_numpy": "df.to_numpy(dtype=None,copy=False,na_value=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy",
    "df.head": "df.head(n=5)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head",
    "DataFrame.at": "DataFrame.at\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at",
    "DataFrame.iat": "DataFrame.iat\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.iat.html#pandas.DataFrame.iat",
    "DataFrame.loc": "DataFrame.loc\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc",
    "DataFrame.iloc": "DataFrame.iloc\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc",
    "df.insert": "df.insert(loc,column,value,allow_duplicates=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.insert.html#pandas.DataFrame.insert",
    "df.__iter__": "df.__iter__()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.__iter__.html#pandas.DataFrame.__iter__",
    "df.items": "df.items()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.items.html#pandas.DataFrame.items",
    "df.keys": "df.keys()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.keys.html#pandas.DataFrame.keys",
    "df.iterrows": "df.iterrows()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.iterrows.html#pandas.DataFrame.iterrows",
    "df.itertuples": "df.itertuples(index=True,name='Pandas')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.itertuples.html#pandas.DataFrame.itertuples",
    "df.pop": "df.pop(item)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pop.html#pandas.DataFrame.pop",
    "df.tail": "df.tail(n=5)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail",
    "df.xs": "df.xs(key,axis=0,level=None,drop_level=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs",
    "df.get": "df.get(key,default=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.get.html#pandas.DataFrame.get",
    "df.isin": "df.isin(values)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.isin.html#pandas.DataFrame.isin",
    "df.where": "df.where(cond,other=nan,*,inplace=False,axis=None,level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where",
    "df.mask": "df.mask(cond,other=<no_default>,*,inplace=False,axis=None,level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask",
    "df.query": "df.query(expr,*,inplace=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query",
    "df.__add__": "df.__add__(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.__add__.html#pandas.DataFrame.__add__",
    "df.add": "df.add(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.add.html#pandas.DataFrame.add",
    "df.sub": "df.sub(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sub.html#pandas.DataFrame.sub",
    "df.mul": "df.mul(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mul.html#pandas.DataFrame.mul",
    "df.div": "df.div(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.div.html#pandas.DataFrame.div",
    "df.truediv": "df.truediv(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.truediv.html#pandas.DataFrame.truediv",
    "df.floordiv": "df.floordiv(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.floordiv.html#pandas.DataFrame.floordiv",
    "df.mod": "df.mod(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mod.html#pandas.DataFrame.mod",
    "df.pow": "df.pow(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pow.html#pandas.DataFrame.pow",
    "df.dot": "df.dot(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dot.html#pandas.DataFrame.dot",
    "df.radd": "df.radd(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.radd.html#pandas.DataFrame.radd",
    "df.rsub": "df.rsub(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rsub.html#pandas.DataFrame.rsub",
    "df.rmul": "df.rmul(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rmul.html#pandas.DataFrame.rmul",
    "df.rdiv": "df.rdiv(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rdiv.html#pandas.DataFrame.rdiv",
    "df.rtruediv": "df.rtruediv(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rtruediv.html#pandas.DataFrame.rtruediv",
    "df.rfloordiv": "df.rfloordiv(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rfloordiv.html#pandas.DataFrame.rfloordiv",
    "df.rmod": "df.rmod(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rmod.html#pandas.DataFrame.rmod",
    "df.rpow": "df.rpow(other,axis='columns',level=None,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rpow.html#pandas.DataFrame.rpow",
    "df.lt": "df.lt(other,axis='columns',level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.lt.html#pandas.DataFrame.lt",
    "df.gt": "df.gt(other,axis='columns',level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.gt.html#pandas.DataFrame.gt",
    "df.le": "df.le(other,axis='columns',level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.le.html#pandas.DataFrame.le",
    "df.ge": "df.ge(other,axis='columns',level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ge.html#pandas.DataFrame.ge",
    "df.ne": "df.ne(other,axis='columns',level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ne.html#pandas.DataFrame.ne",
    "df.eq": "df.eq(other,axis='columns',level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.eq.html#pandas.DataFrame.eq",
    "df.combine": "df.combine(other,func,fill_value=None,overwrite=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.combine.html#pandas.DataFrame.combine",
    "df.combine_first": "df.combine_first(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.combine_first.html#pandas.DataFrame.combine_first",
    "df.apply": "df.apply(func,axis=0,raw=False,result_type=None,args=(),by_row='compat',engine='python',engine_kwargs=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply",
    "df.map": "df.map(func,na_action=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.map.html#pandas.DataFrame.map",
    "df.applymap": "df.applymap(func,na_action=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.applymap.html#pandas.DataFrame.applymap",
    "df.pipe": "df.pipe(func,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pipe.html#pandas.DataFrame.pipe",
    "df.agg": "df.agg(func=None,axis=0,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg",
    "df.aggregate": "df.aggregate(func=None,axis=0,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.aggregate.html#pandas.DataFrame.aggregate",
    "df.transform": "df.transform(func,axis=0,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform",
    "df.groupby": "df.groupby(by=None,axis=<no_default>,level=None,as_index=True,sort=True,group_keys=True,observed=<no_default>,dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby",
    "df.rolling": "df.rolling(window,min_periods=None,center=False,win_type=None,on=None,axis=<no_default>,closed=None,step=None,method='single')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling",
    "df.expanding": "df.expanding(min_periods=1,axis=<no_default>,method='single')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding",
    "df.ewm": "df.ewm(com=None,span=None,halflife=None,alpha=None,min_periods=0,adjust=True,ignore_na=False,axis=<no_default>,times=None,method='single')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm",
    "df.abs": "df.abs()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.abs.html#pandas.DataFrame.abs",
    "df.all": "df.all(axis=0,bool_only=False,skipna=True,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all",
    "df.any": "df.any(*,axis=0,bool_only=False,skipna=True,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any",
    "df.clip": "df.clip(lower=None,upper=None,*,axis=None,inplace=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip",
    "df.corr": "df.corr(method='pearson',min_periods=1,numeric_only=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr",
    "df.corrwith": "df.corrwith(other,axis=0,drop=False,method='pearson',numeric_only=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith",
    "df.count": "df.count(axis=0,numeric_only=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.count.html#pandas.DataFrame.count",
    "df.cov": "df.cov(min_periods=None,ddof=1,numeric_only=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov",
    "df.cummax": "df.cummax(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.cummax.html#pandas.DataFrame.cummax",
    "df.cummin": "df.cummin(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.cummin.html#pandas.DataFrame.cummin",
    "df.cumprod": "df.cumprod(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.cumprod.html#pandas.DataFrame.cumprod",
    "df.cumsum": "df.cumsum(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.cumsum.html#pandas.DataFrame.cumsum",
    "df.describe": "df.describe(percentiles=None,include=None,exclude=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe",
    "df.diff": "df.diff(periods=1,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff",
    "df.eval": "df.eval(expr,*,inplace=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval",
    "df.kurt": "df.kurt(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.kurt.html#pandas.DataFrame.kurt",
    "df.kurtosis": "df.kurtosis(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.kurtosis.html#pandas.DataFrame.kurtosis",
    "df.max": "df.max(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max",
    "df.mean": "df.mean(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean",
    "df.median": "df.median(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median",
    "df.min": "df.min(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min",
    "df.mode": "df.mode(axis=0,numeric_only=False,dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mode.html#pandas.DataFrame.mode",
    "df.pct_change": "df.pct_change(periods=1,fill_method=<no_default>,limit=<no_default>,freq=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pct_change.html#pandas.DataFrame.pct_change",
    "df.prod": "df.prod(axis=0,skipna=True,numeric_only=False,min_count=0,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.prod.html#pandas.DataFrame.prod",
    "df.product": "df.product(axis=0,skipna=True,numeric_only=False,min_count=0,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.product.html#pandas.DataFrame.product",
    "df.quantile": "df.quantile(q=0.5,axis=0,numeric_only=False,interpolation='linear',method='single')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile",
    "df.rank": "df.rank(axis=0,method='average',numeric_only=False,na_option='keep',ascending=True,pct=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rank.html#pandas.DataFrame.rank",
    "df.round": "df.round(decimals=0,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round",
    "df.sem": "df.sem(axis=0,skipna=True,ddof=1,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sem.html#pandas.DataFrame.sem",
    "df.skew": "df.skew(axis=0,skipna=True,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.skew.html#pandas.DataFrame.skew",
    "df.sum": "df.sum(axis=0,skipna=True,numeric_only=False,min_count=0,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sum.html#pandas.DataFrame.sum",
    "df.std": "df.std(axis=0,skipna=True,ddof=1,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.std.html#pandas.DataFrame.std",
    "df.var": "df.var(axis=0,skipna=True,ddof=1,numeric_only=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.var.html#pandas.DataFrame.var",
    "df.nunique": "df.nunique(axis=0,dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nunique.html#pandas.DataFrame.nunique",
    "df.value_counts": "df.value_counts(subset=None,normalize=False,sort=True,ascending=False,dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts",
    "df.add_prefix": "df.add_prefix(prefix,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix",
    "df.add_suffix": "df.add_suffix(suffix,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix",
    "df.align": "df.align(other,join='outer',axis=None,level=None,copy=None,fill_value=None,method=<no_default>,limit=<no_default>,fill_axis=<no_default>,broadcast_axis=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align",
    "df.at_time": "df.at_time(time,asof=False,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.at_time.html#pandas.DataFrame.at_time",
    "df.between_time": "df.between_time(start_time,end_time,inclusive='both',axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.between_time.html#pandas.DataFrame.between_time",
    "df.drop": "df.drop(labels=None,*,axis=0,index=None,columns=None,level=None,inplace=False,errors='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop",
    "df.drop_duplicates": "df.drop_duplicates(subset=None,*,keep='first',inplace=False,ignore_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates",
    "df.duplicated": "df.duplicated(subset=None,keep='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated",
    "df.equals": "df.equals(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals",
    "df.filter": "df.filter(items=None,like=None,regex=None,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.filter.html#pandas.DataFrame.filter",
    "df.first": "df.first(offset)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first",
    "df.idxmax": "df.idxmax(axis=0,skipna=True,numeric_only=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax",
    "df.idxmin": "df.idxmin(axis=0,skipna=True,numeric_only=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin",
    "df.last": "df.last(offset)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last",
    "df.reindex": "df.reindex(labels=None,*,index=None,columns=None,axis=None,method=None,copy=None,level=None,fill_value=nan,limit=None,tolerance=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex",
    "df.reindex_like": "df.reindex_like(other,method=None,copy=None,limit=None,tolerance=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reindex_like.html#pandas.DataFrame.reindex_like",
    "df.rename": "df.rename(mapper=None,*,index=None,columns=None,axis=None,copy=None,inplace=False,level=None,errors='ignore')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rename.html#pandas.DataFrame.rename",
    "df.rename_axis": "df.rename_axis(mapper=<no_default>,*,index=<no_default>,columns=<no_default>,axis=0,copy=None,inplace=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis",
    "df.reset_index": "df.reset_index(level=None,*,drop=False,inplace=False,col_level=0,col_fill='',allow_duplicates=<no_default>,names=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index",
    "df.sample": "df.sample(n=None,frac=None,replace=False,weights=None,random_state=None,axis=None,ignore_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample",
    "df.set_axis": "df.set_axis(labels,*,axis=0,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis",
    "df.set_index": "df.set_index(keys,*,drop=True,append=False,inplace=False,verify_integrity=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index",
    "df.take": "df.take(indices,axis=0,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take",
    "df.truncate": "df.truncate(before=None,after=None,axis=None,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate",
    "df.backfill": "df.backfill(*,axis=None,inplace=False,limit=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.backfill.html#pandas.DataFrame.backfill",
    "df.bfill": "df.bfill(*,axis=None,inplace=False,limit=None,limit_area=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill",
    "df.dropna": "df.dropna(*,axis=0,how=<no_default>,thresh=<no_default>,subset=None,inplace=False,ignore_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna",
    "df.ffill": "df.ffill(*,axis=None,inplace=False,limit=None,limit_area=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill",
    "df.fillna": "df.fillna(value=None,*,method=None,axis=None,inplace=False,limit=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna",
    "df.interpolate": "df.interpolate(method='linear',*,axis=0,limit=None,inplace=False,limit_direction=None,limit_area=None,downcast=<no_default>,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate",
    "df.isna": "df.isna()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.isna.html#pandas.DataFrame.isna",
    "df.isnull": "df.isnull()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.isnull.html#pandas.DataFrame.isnull",
    "df.notna": "df.notna()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.notna.html#pandas.DataFrame.notna",
    "df.notnull": "df.notnull()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.notnull.html#pandas.DataFrame.notnull",
    "df.pad": "df.pad(*,axis=None,inplace=False,limit=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pad.html#pandas.DataFrame.pad",
    "df.replace": "df.replace(to_replace=None,value=<no_default>,*,inplace=False,limit=None,regex=False,method=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace",
    "df.droplevel": "df.droplevel(level,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.droplevel.html#pandas.DataFrame.droplevel",
    "df.pivot": "df.pivot(*,columns,index=<no_default>,values=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot",
    "df.pivot_table": "df.pivot_table(values=None,index=None,columns=None,aggfunc='mean',fill_value=None,margins=False,dropna=True,margins_name='All',observed=<no_default>,sort=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table",
    "df.reorder_levels": "df.reorder_levels(order,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reorder_levels.html#pandas.DataFrame.reorder_levels",
    "df.sort_values": "df.sort_values(by,*,axis=0,ascending=True,inplace=False,kind='quicksort',na_position='last',ignore_index=False,key=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values",
    "df.sort_index": "df.sort_index(*,axis=0,level=None,ascending=True,inplace=False,kind='quicksort',na_position='last',sort_remaining=True,ignore_index=False,key=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index",
    "df.nlargest": "df.nlargest(n,columns,keep='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nlargest.html#pandas.DataFrame.nlargest",
    "df.nsmallest": "df.nsmallest(n,columns,keep='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.nsmallest.html#pandas.DataFrame.nsmallest",
    "df.swaplevel": "df.swaplevel(i=-2,j=-1,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.swaplevel.html#pandas.DataFrame.swaplevel",
    "df.stack": "df.stack(level=-1,dropna=<no_default>,sort=<no_default>,future_stack=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack",
    "df.unstack": "df.unstack(level=-1,fill_value=None,sort=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack",
    "df.swapaxes": "df.swapaxes(axis1,axis2,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.swapaxes.html#pandas.DataFrame.swapaxes",
    "df.melt": "df.melt(id_vars=None,value_vars=None,var_name=None,value_name='value',col_level=None,ignore_index=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt",
    "df.explode": "df.explode(column,ignore_index=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode",
    "df.squeeze": "df.squeeze(axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.squeeze.html#pandas.DataFrame.squeeze",
    "df.to_xarray": "df.to_xarray()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_xarray.html#pandas.DataFrame.to_xarray",
    "DataFrame.T": "DataFrame.T\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.T.html#pandas.DataFrame.T",
    "df.transpose": "df.transpose(*args,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose",
    "df.assign": "df.assign(**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.assign.html#pandas.DataFrame.assign",
    "df.compare": "df.compare(other,align_axis=1,keep_shape=False,keep_equal=False,result_names=('self','other'))\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare",
    "df.join": "df.join(other,on=None,how='left',lsuffix='',rsuffix='',sort=False,validate=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join",
    "df.merge": "df.merge(right,how='inner',on=None,left_on=None,right_on=None,left_index=False,right_index=False,sort=False,suffixes=('_x','_y'),copy=None,indicator=False,validate=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge",
    "df.update": "df.update(other,join='left',overwrite=True,filter_func=None,errors='ignore')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update",
    "df.asfreq": "df.asfreq(freq,method=None,how=None,normalize=False,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.asfreq.html#pandas.DataFrame.asfreq",
    "df.asof": "df.asof(where,subset=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.asof.html#pandas.DataFrame.asof",
    "df.shift": "df.shift(periods=1,freq=None,axis=0,fill_value=<no_default>,suffix=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift",
    "df.first_valid_index": "df.first_valid_index()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.first_valid_index.html#pandas.DataFrame.first_valid_index",
    "df.last_valid_index": "df.last_valid_index()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.last_valid_index.html#pandas.DataFrame.last_valid_index",
    "df.resample": "df.resample(rule,axis=<no_default>,closed=None,label=None,convention=<no_default>,kind=<no_default>,on=None,level=None,origin='start_day',offset=None,group_keys=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample",
    "df.to_period": "df.to_period(freq=None,axis=0,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_period.html#pandas.DataFrame.to_period",
    "df.to_timestamp": "df.to_timestamp(freq=None,how='start',axis=0,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_timestamp.html#pandas.DataFrame.to_timestamp",
    "df.tz_convert": "df.tz_convert(tz,axis=0,level=None,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.tz_convert.html#pandas.DataFrame.tz_convert",
    "df.tz_localize": "df.tz_localize(tz,axis=0,level=None,copy=None,ambiguous='raise',nonexistent='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.tz_localize.html#pandas.DataFrame.tz_localize",
    "DataFrame.attrs": "DataFrame.attrs\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs",
    "df.plot": "df.plot(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot",
    "df.plot.area": "df.plot.area(x=None,y=None,stacked=True,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.area.html#pandas.DataFrame.plot.area",
    "df.plot.bar": "df.plot.bar(x=None,y=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.bar.html#pandas.DataFrame.plot.bar",
    "df.plot.barh": "df.plot.barh(x=None,y=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.barh.html#pandas.DataFrame.plot.barh",
    "df.plot.box": "df.plot.box(by=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box",
    "df.plot.density": "df.plot.density(bw_method=None,ind=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.density.html#pandas.DataFrame.plot.density",
    "df.plot.hexbin": "df.plot.hexbin(x,y,C=None,reduce_C_function=None,gridsize=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.hexbin.html#pandas.DataFrame.plot.hexbin",
    "df.plot.hist": "df.plot.hist(by=None,bins=10,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist",
    "df.plot.kde": "df.plot.kde(bw_method=None,ind=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.kde.html#pandas.DataFrame.plot.kde",
    "df.plot.line": "df.plot.line(x=None,y=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.line.html#pandas.DataFrame.plot.line",
    "df.plot.pie": "df.plot.pie(**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.pie.html#pandas.DataFrame.plot.pie",
    "df.plot.scatter": "df.plot.scatter(x,y,s=None,c=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter",
    "df.boxplot": "df.boxplot(column=None,by=None,ax=None,fontsize=None,rot=0,grid=True,figsize=None,layout=None,return_type=None,backend=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot",
    "df.hist": "df.hist(column=None,by=None,grid=True,xlabelsize=None,xrot=None,ylabelsize=None,yrot=None,ax=None,sharex=False,sharey=False,figsize=None,layout=None,bins=10,backend=None,legend=False,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist",
    "df.sparse.density": "df.sparse.density\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sparse.density.html#pandas.DataFrame.sparse.density",
    "methodDataFrame.sparse.from_spmatrix": "methodDataFrame.sparse.from_spmatrix(data,index=None,columns=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sparse.from_spmatrix.html#pandas.DataFrame.sparse.from_spmatrix",
    "df.sparse.to_coo": "df.sparse.to_coo()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sparse.to_coo.html#pandas.DataFrame.sparse.to_coo",
    "df.sparse.to_dense": "df.sparse.to_dense()\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sparse.to_dense.html#pandas.DataFrame.sparse.to_dense",
    "methodDataFrame.from_dict": "methodDataFrame.from_dict(data,orient='columns',dtype=None,columns=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict",
    "methodDataFrame.from_records": "methodDataFrame.from_records(data,index=None,exclude=None,columns=None,coerce_float=False,nrows=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records",
    "df.to_hdf": "df.to_hdf(path_or_buf,*,key,mode='a',complevel=None,complib=None,append=False,format=None,index=True,min_itemsize=None,nan_rep=None,dropna=None,data_columns=None,errors='strict',encoding='UTF-8')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf",
    "df.to_dict": "df.to_dict(orient='dict',*,into=<class'dict'>,index=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict",
    "df.to_gbq": "df.to_gbq(destination_table,*,project_id=None,chunksize=None,reauth=False,if_exists='fail',auth_local_webserver=True,table_schema=None,location=None,progress_bar=True,credentials=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq",
    "df.to_records": "df.to_records(index=True,column_dtypes=None,index_dtypes=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records",
    "df.to_string": "df.to_string(buf=None,*,columns=None,col_space=None,header=True,index=True,na_rep='NaN',formatters=None,float_format=None,sparsify=None,index_names=True,justify=None,max_rows=None,max_cols=None,show_dimensions=False,decimal='.',line_width=None,min_rows=None,max_colwidth=None,encoding=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string",
    "df.to_markdown": "df.to_markdown(buf=None,*,mode='wt',index=True,storage_options=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown",
    "DataFrame.style": "DataFrame.style\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.style.html#pandas.DataFrame.style",
    "df.__dataframe__": "df.__dataframe__(nan_as_null=False,allow_copy=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.__dataframe__.html#pandas.DataFrame.__dataframe__",
    "pd.array": "pd.array(data,dtype=None,copy=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.array.html#pandas.array",
    "pandas.arrays.ArrowExtensionArray": "pandas.arrays.ArrowExtensionArray(values)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray",
    "pandas.ArrowDtype": "pandas.ArrowDtype(pyarrow_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype",
    "pandas.Timestamp": "pandas.Timestamp(ts_input=<objectobject>,year=None,month=None,day=None,hour=None,minute=None,second=None,microsecond=None,tzinfo=None,*,nanosecond=None,tz=None,unit=None,fold=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.html#pandas.Timestamp",
    "Timestamp.asm8": "Timestamp.asm8\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8",
    "Timestamp.day": "Timestamp.day\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.day.html#pandas.Timestamp.day",
    "Timestamp.dayofweek": "Timestamp.dayofweek\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek",
    "Timestamp.day_of_week": "Timestamp.day_of_week\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week",
    "Timestamp.dayofyear": "Timestamp.dayofyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear",
    "Timestamp.day_of_year": "Timestamp.day_of_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year",
    "Timestamp.days_in_month": "Timestamp.days_in_month\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month",
    "Timestamp.daysinmonth": "Timestamp.daysinmonth\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth",
    "Timestamp.fold": "Timestamp.fold\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.fold.html#pandas.Timestamp.fold",
    "Timestamp.hour": "Timestamp.hour\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.hour.html#pandas.Timestamp.hour",
    "Timestamp.is_leap_year": "Timestamp.is_leap_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year",
    "Timestamp.is_month_end": "Timestamp.is_month_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end",
    "Timestamp.is_month_start": "Timestamp.is_month_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start",
    "Timestamp.is_quarter_end": "Timestamp.is_quarter_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end",
    "Timestamp.is_quarter_start": "Timestamp.is_quarter_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start",
    "Timestamp.is_year_end": "Timestamp.is_year_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end",
    "Timestamp.is_year_start": "Timestamp.is_year_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start",
    "Timestamp.max=Timestamp": "Timestamp.max=Timestamp('2262-04-1123:47:16.854775807')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.max.html#pandas.Timestamp.max",
    "Timestamp.microsecond": "Timestamp.microsecond\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond",
    "Timestamp.min=Timestamp": "Timestamp.min=Timestamp('1677-09-2100:12:43.145224193')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.min.html#pandas.Timestamp.min",
    "Timestamp.minute": "Timestamp.minute\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.minute.html#pandas.Timestamp.minute",
    "Timestamp.month": "Timestamp.month\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.month.html#pandas.Timestamp.month",
    "Timestamp.nanosecond": "Timestamp.nanosecond\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond",
    "Timestamp.quarter": "Timestamp.quarter\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter",
    "Timestamp.resolution=Timedelta": "Timestamp.resolution=Timedelta('0days00:00:00.000000001')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution",
    "Timestamp.second": "Timestamp.second\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.second.html#pandas.Timestamp.second",
    "Timestamp.tz": "Timestamp.tz\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz.html#pandas.Timestamp.tz",
    "Timestamp.tzinfo": "Timestamp.tzinfo\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo",
    "Timestamp.unit": "Timestamp.unit\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.unit.html#pandas.Timestamp.unit",
    "Timestamp.value": "Timestamp.value\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.value.html#pandas.Timestamp.value",
    "Timestamp.week": "Timestamp.week\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.week.html#pandas.Timestamp.week",
    "Timestamp.weekofyear": "Timestamp.weekofyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear",
    "Timestamp.year": "Timestamp.year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.year.html#pandas.Timestamp.year",
    "Timestamp.as_unit": "Timestamp.as_unit(unit,round_ok=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit",
    "Timestamp.astimezone": "Timestamp.astimezone(tz)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone",
    "Timestamp.ceil": "Timestamp.ceil(freq,ambiguous='raise',nonexistent='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil",
    "methodTimestamp.combine": "methodTimestamp.combine(date,time)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.combine.html#pandas.Timestamp.combine",
    "Timestamp.ctime": "Timestamp.ctime()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime",
    "Timestamp.date": "Timestamp.date()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.date.html#pandas.Timestamp.date",
    "Timestamp.day_name": "Timestamp.day_name(locale=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name",
    "Timestamp.dst": "Timestamp.dst()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.dst.html#pandas.Timestamp.dst",
    "Timestamp.floor": "Timestamp.floor(freq,ambiguous='raise',nonexistent='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.floor.html#pandas.Timestamp.floor",
    "methodTimestamp.fromordinal": "methodTimestamp.fromordinal(ordinal,tz=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal",
    "methodTimestamp.fromtimestamp": "methodTimestamp.fromtimestamp(ts)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp",
    "Timestamp.isocalendar": "Timestamp.isocalendar()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar",
    "Timestamp.isoformat": "Timestamp.isoformat(sep='T',timespec='auto')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat",
    "Timestamp.isoweekday": "Timestamp.isoweekday()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday",
    "Timestamp.month_name": "Timestamp.month_name(locale=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name",
    "Timestamp.normalize": "Timestamp.normalize()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize",
    "methodTimestamp.now": "methodTimestamp.now(tz=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.now.html#pandas.Timestamp.now",
    "Timestamp.replace": "Timestamp.replace(year=None,month=None,day=None,hour=None,minute=None,second=None,microsecond=None,nanosecond=None,tzinfo=<class'object'>,fold=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.replace.html#pandas.Timestamp.replace",
    "Timestamp.round": "Timestamp.round(freq,ambiguous='raise',nonexistent='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round",
    "Timestamp.strftime": "Timestamp.strftime(format)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime",
    "methodTimestamp.strptime": "methodTimestamp.strptime(string,format)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime",
    "Timestamp.time": "Timestamp.time()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.time.html#pandas.Timestamp.time",
    "Timestamp.timestamp": "Timestamp.timestamp()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp",
    "Timestamp.timetuple": "Timestamp.timetuple()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple",
    "Timestamp.timetz": "Timestamp.timetz()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz",
    "Timestamp.to_datetime64": "Timestamp.to_datetime64()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64",
    "Timestamp.to_numpy": "Timestamp.to_numpy(dtype=None,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy",
    "Timestamp.to_julian_date": "Timestamp.to_julian_date()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date",
    "Timestamp.to_period": "Timestamp.to_period(freq=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period",
    "Timestamp.to_pydatetime": "Timestamp.to_pydatetime(warn=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime",
    "methodTimestamp.today": "methodTimestamp.today(tz=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.today.html#pandas.Timestamp.today",
    "Timestamp.toordinal": "Timestamp.toordinal()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal",
    "Timestamp.tz_convert": "Timestamp.tz_convert(tz)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert",
    "Timestamp.tz_localize": "Timestamp.tz_localize(tz,ambiguous='raise',nonexistent='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize",
    "Timestamp.tzname": "Timestamp.tzname()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname",
    "methodTimestamp.utcfromtimestamp": "methodTimestamp.utcfromtimestamp(ts)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp",
    "methodTimestamp.utcnow": "methodTimestamp.utcnow()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow",
    "Timestamp.utcoffset": "Timestamp.utcoffset()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset",
    "Timestamp.utctimetuple": "Timestamp.utctimetuple()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple",
    "Timestamp.weekday": "Timestamp.weekday()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday",
    "pandas.arrays.DatetimeArray": "pandas.arrays.DatetimeArray(values,dtype=None,freq=<no_default>,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray",
    "pandas.DatetimeTZDtype": "pandas.DatetimeTZDtype(unit='ns',tz=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype",
    "pandas.Timedelta": "pandas.Timedelta(value=<objectobject>,unit=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.html#pandas.Timedelta",
    "Timedelta.asm8": "Timedelta.asm8\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8",
    "Timedelta.components": "Timedelta.components\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.components.html#pandas.Timedelta.components",
    "Timedelta.days": "Timedelta.days\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.days.html#pandas.Timedelta.days",
    "Timedelta.max=Timedelta": "Timedelta.max=Timedelta('106751days23:47:16.854775807')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.max.html#pandas.Timedelta.max",
    "Timedelta.microseconds": "Timedelta.microseconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds",
    "Timedelta.min=Timedelta": "Timedelta.min=Timedelta('-106752days+00:12:43.145224193')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.min.html#pandas.Timedelta.min",
    "Timedelta.nanoseconds": "Timedelta.nanoseconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds",
    "Timedelta.resolution=Timedelta": "Timedelta.resolution=Timedelta('0days00:00:00.000000001')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution",
    "Timedelta.seconds": "Timedelta.seconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds",
    "Timedelta.unit": "Timedelta.unit\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.unit.html#pandas.Timedelta.unit",
    "Timedelta.value": "Timedelta.value\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.value.html#pandas.Timedelta.value",
    "Timedelta.view": "Timedelta.view(dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.view.html#pandas.Timedelta.view",
    "Timedelta.as_unit": "Timedelta.as_unit(unit,round_ok=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit",
    "Timedelta.ceil": "Timedelta.ceil(freq)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil",
    "Timedelta.floor": "Timedelta.floor(freq)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.floor.html#pandas.Timedelta.floor",
    "Timedelta.isoformat": "Timedelta.isoformat()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat",
    "Timedelta.round": "Timedelta.round(freq)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.round.html#pandas.Timedelta.round",
    "Timedelta.to_pytimedelta": "Timedelta.to_pytimedelta()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta",
    "Timedelta.to_timedelta64": "Timedelta.to_timedelta64()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64",
    "Timedelta.to_numpy": "Timedelta.to_numpy(dtype=None,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy",
    "Timedelta.total_seconds": "Timedelta.total_seconds()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds",
    "pandas.arrays.TimedeltaArray": "pandas.arrays.TimedeltaArray(values,dtype=None,freq=<no_default>,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray",
    "pandas.Period": "pandas.Period(value=None,freq=None,ordinal=None,year=None,month=None,quarter=None,day=None,hour=None,minute=None,second=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.html#pandas.Period",
    "Period.day": "Period.day\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.day.html#pandas.Period.day",
    "Period.dayofweek": "Period.dayofweek\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.dayofweek.html#pandas.Period.dayofweek",
    "Period.day_of_week": "Period.day_of_week\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.day_of_week.html#pandas.Period.day_of_week",
    "Period.dayofyear": "Period.dayofyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.dayofyear.html#pandas.Period.dayofyear",
    "Period.day_of_year": "Period.day_of_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.day_of_year.html#pandas.Period.day_of_year",
    "Period.days_in_month": "Period.days_in_month\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.days_in_month.html#pandas.Period.days_in_month",
    "Period.daysinmonth": "Period.daysinmonth\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth",
    "Period.end_time": "Period.end_time\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.end_time.html#pandas.Period.end_time",
    "Period.freq": "Period.freq\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.freq.html#pandas.Period.freq",
    "Period.freqstr": "Period.freqstr\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.freqstr.html#pandas.Period.freqstr",
    "Period.hour": "Period.hour\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.hour.html#pandas.Period.hour",
    "Period.is_leap_year": "Period.is_leap_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year",
    "Period.minute": "Period.minute\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.minute.html#pandas.Period.minute",
    "Period.month": "Period.month\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.month.html#pandas.Period.month",
    "Period.ordinal": "Period.ordinal\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.ordinal.html#pandas.Period.ordinal",
    "Period.quarter": "Period.quarter\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.quarter.html#pandas.Period.quarter",
    "Period.qyear": "Period.qyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.qyear.html#pandas.Period.qyear",
    "Period.second": "Period.second\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.second.html#pandas.Period.second",
    "Period.start_time": "Period.start_time\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.start_time.html#pandas.Period.start_time",
    "Period.week": "Period.week\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.week.html#pandas.Period.week",
    "Period.weekday": "Period.weekday\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.weekday.html#pandas.Period.weekday",
    "Period.weekofyear": "Period.weekofyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.weekofyear.html#pandas.Period.weekofyear",
    "Period.year": "Period.year\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.year.html#pandas.Period.year",
    "Period.asfreq": "Period.asfreq(freq,how='E')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.asfreq.html#pandas.Period.asfreq",
    "methodPeriod.now": "methodPeriod.now(freq)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.now.html#pandas.Period.now",
    "Period.strftime": "Period.strftime(fmt)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.strftime.html#pandas.Period.strftime",
    "Period.to_timestamp": "Period.to_timestamp(freq=None,how='start')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp",
    "pandas.arrays.PeriodArray": "pandas.arrays.PeriodArray(values,dtype=None,freq=None,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray",
    "pandas.PeriodDtype": "pandas.PeriodDtype(freq)\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype",
    "pandas.Interval": "pandas.Interval\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.html#pandas.Interval",
    "Interval.closed": "Interval.closed\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.closed.html#pandas.Interval.closed",
    "Interval.closed_left": "Interval.closed_left\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.closed_left.html#pandas.Interval.closed_left",
    "Interval.closed_right": "Interval.closed_right\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.closed_right.html#pandas.Interval.closed_right",
    "Interval.is_empty": "Interval.is_empty\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.is_empty.html#pandas.Interval.is_empty",
    "Interval.left": "Interval.left\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.left.html#pandas.Interval.left",
    "Interval.length": "Interval.length\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.length.html#pandas.Interval.length",
    "Interval.mid": "Interval.mid\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.mid.html#pandas.Interval.mid",
    "Interval.open_left": "Interval.open_left\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.open_left.html#pandas.Interval.open_left",
    "Interval.open_right": "Interval.open_right\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.open_right.html#pandas.Interval.open_right",
    "Interval.overlaps": "Interval.overlaps(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.overlaps.html#pandas.Interval.overlaps",
    "Interval.right": "Interval.right\nhttps://pandas.pydata.org/docs/reference/api/pandas.Interval.right.html#pandas.Interval.right",
    "pandas.arrays.IntervalArray": "pandas.arrays.IntervalArray(data,closed=None,dtype=None,copy=False,verify_integrity=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray",
    "pandas.IntervalDtype": "pandas.IntervalDtype(subtype=None,closed=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype",
    "pandas.arrays.IntegerArray": "pandas.arrays.IntegerArray(values,mask,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray",
    "pandas.Int8Dtype": "pandas.Int8Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Int8Dtype.html#pandas.Int8Dtype",
    "pandas.Int16Dtype": "pandas.Int16Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Int16Dtype.html#pandas.Int16Dtype",
    "pandas.Int32Dtype": "pandas.Int32Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Int32Dtype.html#pandas.Int32Dtype",
    "pandas.Int64Dtype": "pandas.Int64Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Int64Dtype.html#pandas.Int64Dtype",
    "pandas.UInt8Dtype": "pandas.UInt8Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.UInt8Dtype.html#pandas.UInt8Dtype",
    "pandas.UInt16Dtype": "pandas.UInt16Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.UInt16Dtype.html#pandas.UInt16Dtype",
    "pandas.UInt32Dtype": "pandas.UInt32Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.UInt32Dtype.html#pandas.UInt32Dtype",
    "pandas.UInt64Dtype": "pandas.UInt64Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.UInt64Dtype.html#pandas.UInt64Dtype",
    "pandas.arrays.FloatingArray": "pandas.arrays.FloatingArray(values,mask,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray",
    "pandas.Float32Dtype": "pandas.Float32Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Float32Dtype.html#pandas.Float32Dtype",
    "pandas.Float64Dtype": "pandas.Float64Dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Float64Dtype.html#pandas.Float64Dtype",
    "pandas.CategoricalDtype": "pandas.CategoricalDtype(categories=None,ordered=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype",
    "CategoricalDtype.categories": "CategoricalDtype.categories\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalDtype.categories.html#pandas.CategoricalDtype.categories",
    "CategoricalDtype.ordered": "CategoricalDtype.ordered\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalDtype.ordered.html#pandas.CategoricalDtype.ordered",
    "pandas.Categorical": "pandas.Categorical(values,categories=None,ordered=None,dtype=None,fastpath=<no_default>,copy=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Categorical.html#pandas.Categorical",
    "methodCategorical.from_codes": "methodCategorical.from_codes(codes,categories=None,ordered=None,dtype=None,validate=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes",
    "Categorical.dtype": "Categorical.dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Categorical.dtype.html#pandas.Categorical.dtype",
    "Categorical.categories": "Categorical.categories\nhttps://pandas.pydata.org/docs/reference/api/pandas.Categorical.categories.html#pandas.Categorical.categories",
    "Categorical.ordered": "Categorical.ordered\nhttps://pandas.pydata.org/docs/reference/api/pandas.Categorical.ordered.html#pandas.Categorical.ordered",
    "Categorical.codes": "Categorical.codes\nhttps://pandas.pydata.org/docs/reference/api/pandas.Categorical.codes.html#pandas.Categorical.codes",
    "Categorical.__array__": "Categorical.__array__(dtype=None,copy=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Categorical.__array__.html#pandas.Categorical.__array__",
    "pandas.arrays.SparseArray": "pandas.arrays.SparseArray(data,sparse_index=None,fill_value=None,kind='integer',dtype=None,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray",
    "pandas.SparseDtype": "pandas.SparseDtype(dtype=<'numpy.float64'>,fill_value=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.SparseDtype.html#pandas.SparseDtype",
    "pandas.arrays.StringArray": "pandas.arrays.StringArray(values,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray",
    "pandas.arrays.ArrowStringArray": "pandas.arrays.ArrowStringArray(values)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray",
    "pandas.StringDtype": "pandas.StringDtype(storage=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.StringDtype.html#pandas.StringDtype",
    "pandas.arrays.BooleanArray": "pandas.arrays.BooleanArray(values,mask,copy=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray",
    "pandas.BooleanDtype": "pandas.BooleanDtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype",
    "pd.api.types.union_categoricals": "pd.api.types.union_categoricals(to_union,sort_categories=False,ignore_order=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals",
    "pd.api.types.infer_dtype": "pd.api.types.infer_dtype(value,skipna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype",
    "pd.api.types.pd_dtype": "pd.api.types.pd_dtype(dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.pandas_dtype.html#pandas.api.types.pandas_dtype",
    "pd.api.types.is_any_real_numeric_dtype": "pd.api.types.is_any_real_numeric_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype",
    "pd.api.types.is_bool_dtype": "pd.api.types.is_bool_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype",
    "pd.api.types.is_categorical_dtype": "pd.api.types.is_categorical_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype",
    "pd.api.types.is_complex_dtype": "pd.api.types.is_complex_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype",
    "pd.api.types.is_datetime64_any_dtype": "pd.api.types.is_datetime64_any_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype",
    "pd.api.types.is_datetime64_dtype": "pd.api.types.is_datetime64_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype",
    "pd.api.types.is_datetime64_ns_dtype": "pd.api.types.is_datetime64_ns_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype",
    "pd.api.types.is_datetime64tz_dtype": "pd.api.types.is_datetime64tz_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype",
    "pd.api.types.is_extension_array_dtype": "pd.api.types.is_extension_array_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype",
    "pd.api.types.is_float_dtype": "pd.api.types.is_float_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype",
    "pd.api.types.is_int64_dtype": "pd.api.types.is_int64_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype",
    "pd.api.types.is_integer_dtype": "pd.api.types.is_integer_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype",
    "pd.api.types.is_interval_dtype": "pd.api.types.is_interval_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype",
    "pd.api.types.is_numeric_dtype": "pd.api.types.is_numeric_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype",
    "pd.api.types.is_object_dtype": "pd.api.types.is_object_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype",
    "pd.api.types.is_period_dtype": "pd.api.types.is_period_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype",
    "pd.api.types.is_signed_integer_dtype": "pd.api.types.is_signed_integer_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype",
    "pd.api.types.is_string_dtype": "pd.api.types.is_string_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype",
    "pd.api.types.is_timedelta64_dtype": "pd.api.types.is_timedelta64_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype",
    "pd.api.types.is_timedelta64_ns_dtype": "pd.api.types.is_timedelta64_ns_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype",
    "pd.api.types.is_unsigned_integer_dtype": "pd.api.types.is_unsigned_integer_dtype(arr_or_dtype)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype",
    "pd.api.types.is_sparse": "pd.api.types.is_sparse(arr)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse",
    "pd.api.types.is_dict_like": "pd.api.types.is_dict_like(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like",
    "pd.api.types.is_file_like": "pd.api.types.is_file_like(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like",
    "pd.api.types.is_list_like": "pd.api.types.is_list_like(obj,allow_sets=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like",
    "pd.api.types.is_named_tuple": "pd.api.types.is_named_tuple(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple",
    "pd.api.types.is_iterator": "pd.api.types.is_iterator(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator",
    "pd.api.types.is_bool": "pd.api.types.is_bool(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_bool.html#pandas.api.types.is_bool",
    "pd.api.types.is_complex": "pd.api.types.is_complex(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_complex.html#pandas.api.types.is_complex",
    "pd.api.types.is_float": "pd.api.types.is_float(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_float.html#pandas.api.types.is_float",
    "pd.api.types.is_hashable": "pd.api.types.is_hashable(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable",
    "pd.api.types.is_integer": "pd.api.types.is_integer(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_integer.html#pandas.api.types.is_integer",
    "pd.api.types.is_interval": "pd.api.types.is_interval(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_interval.html#pandas.api.types.is_interval",
    "pd.api.types.is_number": "pd.api.types.is_number(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_number.html#pandas.api.types.is_number",
    "pd.api.types.is_re": "pd.api.types.is_re(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_re.html#pandas.api.types.is_re",
    "pd.api.types.is_re_compilable": "pd.api.types.is_re_compilable(obj)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable",
    "pd.api.types.is_scalar": "pd.api.types.is_scalar(val)\nhttps://pandas.pydata.org/docs/reference/api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar",
    "pandas.Index": "pandas.Index(data=None,dtype=None,copy=False,name=None,tupleize_cols=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.html#pandas.Index",
    "pd.NA": "pd.NA\nhttps://pandas.pydata.org/docs/reference/api/pandas.NA.html#pandas.NA",
    "pd.NaT": "pd.NaT\nhttps://pandas.pydata.org/docs/reference/api/pandas.NaT.html#pandas.NaT",
    "Index.values": "Index.values\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.values.html#pandas.Index.values",
    "Index.is_monotonic_increasing": "Index.is_monotonic_increasing\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing",
    "Index.is_monotonic_decreasing": "Index.is_monotonic_decreasing\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing",
    "Index.is_unique": "Index.is_unique\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_unique.html#pandas.Index.is_unique",
    "Index.has_duplicates": "Index.has_duplicates\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.has_duplicates.html#pandas.Index.has_duplicates",
    "Index.hasnans": "Index.hasnans\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.hasnans.html#pandas.Index.hasnans",
    "Index.dtype": "Index.dtype\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.dtype.html#pandas.Index.dtype",
    "Index.inferred_type": "Index.inferred_type\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.inferred_type.html#pandas.Index.inferred_type",
    "Index.shape": "Index.shape\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.shape.html#pandas.Index.shape",
    "Index.name": "Index.name\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.name.html#pandas.Index.name",
    "Index.names": "Index.names\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.names.html#pandas.Index.names",
    "Index.nbytes": "Index.nbytes\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.nbytes.html#pandas.Index.nbytes",
    "Index.ndim": "Index.ndim\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.ndim.html#pandas.Index.ndim",
    "Index.size": "Index.size\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.size.html#pandas.Index.size",
    "Index.empty": "Index.empty\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.empty.html#pandas.Index.empty",
    "Index.T": "Index.T\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.T.html#pandas.Index.T",
    "Index.memory_usage": "Index.memory_usage(deep=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.memory_usage.html#pandas.Index.memory_usage",
    "Index.all": "Index.all(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.all.html#pandas.Index.all",
    "Index.any": "Index.any(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.any.html#pandas.Index.any",
    "Index.argmin": "Index.argmin(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.argmin.html#pandas.Index.argmin",
    "Index.argmax": "Index.argmax(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.argmax.html#pandas.Index.argmax",
    "Index.copy": "Index.copy(name=None,deep=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.copy.html#pandas.Index.copy",
    "Index.delete": "Index.delete(loc)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.delete.html#pandas.Index.delete",
    "Index.drop": "Index.drop(labels,errors='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.drop.html#pandas.Index.drop",
    "Index.drop_duplicates": "Index.drop_duplicates(*,keep='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates",
    "Index.duplicated": "Index.duplicated(keep='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.duplicated.html#pandas.Index.duplicated",
    "Index.equals": "Index.equals(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.equals.html#pandas.Index.equals",
    "Index.factorize": "Index.factorize(sort=False,use_na_sentinel=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.factorize.html#pandas.Index.factorize",
    "finalIndex.identical": "finalIndex.identical(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.identical.html#pandas.Index.identical",
    "Index.insert": "Index.insert(loc,item)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.insert.html#pandas.Index.insert",
    "finalIndex.is_": "finalIndex.is_(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_.html#pandas.Index.is_",
    "finalIndex.is_boolean": "finalIndex.is_boolean()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_boolean.html#pandas.Index.is_boolean",
    "finalIndex.is_categorical": "finalIndex.is_categorical()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_categorical.html#pandas.Index.is_categorical",
    "finalIndex.is_floating": "finalIndex.is_floating()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_floating.html#pandas.Index.is_floating",
    "finalIndex.is_integer": "finalIndex.is_integer()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_integer.html#pandas.Index.is_integer",
    "finalIndex.is_interval": "finalIndex.is_interval()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_interval.html#pandas.Index.is_interval",
    "finalIndex.is_numeric": "finalIndex.is_numeric()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_numeric.html#pandas.Index.is_numeric",
    "finalIndex.is_object": "finalIndex.is_object()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.is_object.html#pandas.Index.is_object",
    "Index.min": "Index.min(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.min.html#pandas.Index.min",
    "Index.max": "Index.max(axis=None,skipna=True,*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.max.html#pandas.Index.max",
    "Index.reindex": "Index.reindex(target,method=None,level=None,limit=None,tolerance=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.reindex.html#pandas.Index.reindex",
    "Index.rename": "Index.rename(name,*,inplace=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.rename.html#pandas.Index.rename",
    "Index.repeat": "Index.repeat(repeats,axis=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.repeat.html#pandas.Index.repeat",
    "finalIndex.where": "finalIndex.where(cond,other=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.where.html#pandas.Index.where",
    "Index.take": "Index.take(indices,axis=0,allow_fill=True,fill_value=None,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.take.html#pandas.Index.take",
    "Index.putmask": "Index.putmask(mask,value)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.putmask.html#pandas.Index.putmask",
    "Index.unique": "Index.unique(level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.unique.html#pandas.Index.unique",
    "Index.nunique": "Index.nunique(dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.nunique.html#pandas.Index.nunique",
    "Index.value_counts": "Index.value_counts(normalize=False,sort=True,ascending=False,bins=None,dropna=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.value_counts.html#pandas.Index.value_counts",
    "Index.set_names": "Index.set_names(names,*,level=None,inplace=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.set_names.html#pandas.Index.set_names",
    "finalIndex.droplevel": "finalIndex.droplevel(level=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.droplevel.html#pandas.Index.droplevel",
    "Index.fillna": "Index.fillna(value=None,downcast=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.fillna.html#pandas.Index.fillna",
    "Index.dropna": "Index.dropna(how='any')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.dropna.html#pandas.Index.dropna",
    "finalIndex.isna": "finalIndex.isna()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.isna.html#pandas.Index.isna",
    "finalIndex.notna": "finalIndex.notna()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.notna.html#pandas.Index.notna",
    "Index.astype": "Index.astype(dtype,copy=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.astype.html#pandas.Index.astype",
    "Index.item": "Index.item()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.item.html#pandas.Index.item",
    "Index.map": "Index.map(mapper,na_action=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.map.html#pandas.Index.map",
    "finalIndex.ravel": "finalIndex.ravel(order='C')\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.ravel.html#pandas.Index.ravel",
    "Index.to_list": "Index.to_list()\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.to_list.html#pandas.Index.to_list",
    "finalIndex.to_series": "finalIndex.to_series(index=None,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.to_series.html#pandas.Index.to_series",
    "Index.to_frame": "Index.to_frame(index=True,name=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.to_frame.html#pandas.Index.to_frame",
    "Index.view": "Index.view(cls=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.view.html#pandas.Index.view",
    "Index.argsort": "Index.argsort(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.argsort.html#pandas.Index.argsort",
    "Index.searchsorted": "Index.searchsorted(value,side='left',sorter=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.searchsorted.html#pandas.Index.searchsorted",
    "Index.sort_values": "Index.sort_values(*,return_indexer=False,ascending=True,na_position='last',key=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values",
    "Index.shift": "Index.shift(periods=1,freq=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.shift.html#pandas.Index.shift",
    "Index.append": "Index.append(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.append.html#pandas.Index.append",
    "finalIndex.join": "finalIndex.join(other,*,how='left',level=None,return_indexers=False,sort=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.join.html#pandas.Index.join",
    "finalIndex.intersection": "finalIndex.intersection(other,sort=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.intersection.html#pandas.Index.intersection",
    "finalIndex.union": "finalIndex.union(other,sort=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.union.html#pandas.Index.union",
    "finalIndex.difference": "finalIndex.difference(other,sort=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.difference.html#pandas.Index.difference",
    "Index.symmetric_difference": "Index.symmetric_difference(other,result_name=None,sort=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference",
    "finalIndex.asof": "finalIndex.asof(label)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.asof.html#pandas.Index.asof",
    "Index.asof_locs": "Index.asof_locs(where,mask)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.asof_locs.html#pandas.Index.asof_locs",
    "finalIndex.get_indexer": "finalIndex.get_indexer(target,method=None,limit=None,tolerance=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.get_indexer.html#pandas.Index.get_indexer",
    "finalIndex.get_indexer_for": "finalIndex.get_indexer_for(target)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for",
    "Index.get_indexer_non_unique": "Index.get_indexer_non_unique(target)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique",
    "Index.get_level_values": "Index.get_level_values(level)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.get_level_values.html#pandas.Index.get_level_values",
    "Index.get_loc": "Index.get_loc(key)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc",
    "Index.get_slice_bound": "Index.get_slice_bound(label,side)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound",
    "Index.isin": "Index.isin(values,level=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.isin.html#pandas.Index.isin",
    "Index.slice_indexer": "Index.slice_indexer(start=None,end=None,step=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer",
    "Index.slice_locs": "Index.slice_locs(start=None,end=None,step=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.Index.slice_locs.html#pandas.Index.slice_locs",
    "pandas.RangeIndex": "pandas.RangeIndex(start=None,stop=None,step=None,dtype=None,copy=False,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.RangeIndex.html#pandas.RangeIndex",
    "RangeIndex.start": "RangeIndex.start\nhttps://pandas.pydata.org/docs/reference/api/pandas.RangeIndex.start.html#pandas.RangeIndex.start",
    "RangeIndex.stop": "RangeIndex.stop\nhttps://pandas.pydata.org/docs/reference/api/pandas.RangeIndex.stop.html#pandas.RangeIndex.stop",
    "RangeIndex.step": "RangeIndex.step\nhttps://pandas.pydata.org/docs/reference/api/pandas.RangeIndex.step.html#pandas.RangeIndex.step",
    "methodRangeIndex.from_range": "methodRangeIndex.from_range(data,name=None,dtype=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.RangeIndex.from_range.html#pandas.RangeIndex.from_range",
    "pandas.CategoricalIndex": "pandas.CategoricalIndex(data=None,categories=None,ordered=None,dtype=None,copy=False,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex",
    "CategoricalIndex.codes": "CategoricalIndex.codes\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.codes.html#pandas.CategoricalIndex.codes",
    "CategoricalIndex.categories": "CategoricalIndex.categories\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.categories.html#pandas.CategoricalIndex.categories",
    "CategoricalIndex.ordered": "CategoricalIndex.ordered\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.ordered.html#pandas.CategoricalIndex.ordered",
    "CategoricalIndex.rename_categories": "CategoricalIndex.rename_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.rename_categories.html#pandas.CategoricalIndex.rename_categories",
    "CategoricalIndex.reorder_categories": "CategoricalIndex.reorder_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.reorder_categories.html#pandas.CategoricalIndex.reorder_categories",
    "CategoricalIndex.add_categories": "CategoricalIndex.add_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.add_categories.html#pandas.CategoricalIndex.add_categories",
    "CategoricalIndex.remove_categories": "CategoricalIndex.remove_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.remove_categories.html#pandas.CategoricalIndex.remove_categories",
    "CategoricalIndex.remove_unused_categories": "CategoricalIndex.remove_unused_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.remove_unused_categories.html#pandas.CategoricalIndex.remove_unused_categories",
    "CategoricalIndex.set_categories": "CategoricalIndex.set_categories(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.set_categories.html#pandas.CategoricalIndex.set_categories",
    "CategoricalIndex.as_ordered": "CategoricalIndex.as_ordered(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.as_ordered.html#pandas.CategoricalIndex.as_ordered",
    "CategoricalIndex.as_unordered": "CategoricalIndex.as_unordered(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.as_unordered.html#pandas.CategoricalIndex.as_unordered",
    "CategoricalIndex.map": "CategoricalIndex.map(mapper,na_action=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.map.html#pandas.CategoricalIndex.map",
    "CategoricalIndex.equals": "CategoricalIndex.equals(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.CategoricalIndex.equals.html#pandas.CategoricalIndex.equals",
    "pandas.IntervalIndex": "pandas.IntervalIndex(data,closed=None,dtype=None,copy=False,name=None,verify_integrity=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex",
    "methodIntervalIndex.from_arrays": "methodIntervalIndex.from_arrays(left,right,closed='right',name=None,copy=False,dtype=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays",
    "methodIntervalIndex.from_tuples": "methodIntervalIndex.from_tuples(data,closed='right',name=None,copy=False,dtype=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples",
    "methodIntervalIndex.from_breaks": "methodIntervalIndex.from_breaks(breaks,closed='right',name=None,copy=False,dtype=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks",
    "IntervalIndex.left": "IntervalIndex.left\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.left.html#pandas.IntervalIndex.left",
    "IntervalIndex.right": "IntervalIndex.right\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.right.html#pandas.IntervalIndex.right",
    "IntervalIndex.mid": "IntervalIndex.mid\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.mid.html#pandas.IntervalIndex.mid",
    "IntervalIndex.closed": "IntervalIndex.closed\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.closed.html#pandas.IntervalIndex.closed",
    "IntervalIndex.length": "IntervalIndex.length\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.length.html#pandas.IntervalIndex.length",
    "IntervalIndex.values": "IntervalIndex.values\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.values.html#pandas.IntervalIndex.values",
    "IntervalIndex.is_empty": "IntervalIndex.is_empty\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.is_empty.html#pandas.IntervalIndex.is_empty",
    "IntervalIndex.is_non_overlapping_monotonic": "IntervalIndex.is_non_overlapping_monotonic\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.is_non_overlapping_monotonic.html#pandas.IntervalIndex.is_non_overlapping_monotonic",
    "IntervalIndex.is_overlapping": "IntervalIndex.is_overlapping\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping",
    "IntervalIndex.get_loc": "IntervalIndex.get_loc(key)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.get_loc.html#pandas.IntervalIndex.get_loc",
    "IntervalIndex.get_indexer": "IntervalIndex.get_indexer(target,method=None,limit=None,tolerance=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer",
    "IntervalIndex.set_closed": "IntervalIndex.set_closed(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.set_closed.html#pandas.IntervalIndex.set_closed",
    "IntervalIndex.contains": "IntervalIndex.contains(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.contains.html#pandas.IntervalIndex.contains",
    "IntervalIndex.overlaps": "IntervalIndex.overlaps(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.overlaps.html#pandas.IntervalIndex.overlaps",
    "IntervalIndex.to_tuples": "IntervalIndex.to_tuples(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.to_tuples.html#pandas.IntervalIndex.to_tuples",
    "methodMultiIndex.from_arrays": "methodMultiIndex.from_arrays(arrays,sortorder=None,names=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.from_arrays.html#pandas.MultiIndex.from_arrays",
    "methodMultiIndex.from_tuples": "methodMultiIndex.from_tuples(tuples,sortorder=None,names=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.from_tuples.html#pandas.MultiIndex.from_tuples",
    "methodMultiIndex.from_product": "methodMultiIndex.from_product(iterables,sortorder=None,names=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.from_product.html#pandas.MultiIndex.from_product",
    "methodMultiIndex.from_frame": "methodMultiIndex.from_frame(df,sortorder=None,names=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.from_frame.html#pandas.MultiIndex.from_frame",
    "MultiIndex.names": "MultiIndex.names\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.names.html#pandas.MultiIndex.names",
    "MultiIndex.levels": "MultiIndex.levels\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.levels.html#pandas.MultiIndex.levels",
    "MultiIndex.codes": "MultiIndex.codes\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.codes.html#pandas.MultiIndex.codes",
    "MultiIndex.nlevels": "MultiIndex.nlevels\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.nlevels.html#pandas.MultiIndex.nlevels",
    "MultiIndex.levshape": "MultiIndex.levshape\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.levshape.html#pandas.MultiIndex.levshape",
    "MultiIndex.dtypes": "MultiIndex.dtypes\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.dtypes.html#pandas.MultiIndex.dtypes",
    "MultiIndex.set_levels": "MultiIndex.set_levels(levels,*,level=None,verify_integrity=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels",
    "MultiIndex.set_codes": "MultiIndex.set_codes(codes,*,level=None,verify_integrity=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes",
    "MultiIndex.to_flat_index": "MultiIndex.to_flat_index()\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.to_flat_index.html#pandas.MultiIndex.to_flat_index",
    "MultiIndex.to_frame": "MultiIndex.to_frame(index=True,name=<no_default>,allow_duplicates=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.to_frame.html#pandas.MultiIndex.to_frame",
    "MultiIndex.sortlevel": "MultiIndex.sortlevel(level=0,ascending=True,sort_remaining=True,na_position='first')\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.sortlevel.html#pandas.MultiIndex.sortlevel",
    "MultiIndex.droplevel": "MultiIndex.droplevel(level=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.droplevel.html#pandas.MultiIndex.droplevel",
    "MultiIndex.swaplevel": "MultiIndex.swaplevel(i=-2,j=-1)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.swaplevel.html#pandas.MultiIndex.swaplevel",
    "MultiIndex.reorder_levels": "MultiIndex.reorder_levels(order)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.reorder_levels.html#pandas.MultiIndex.reorder_levels",
    "MultiIndex.remove_unused_levels": "MultiIndex.remove_unused_levels()\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.remove_unused_levels.html#pandas.MultiIndex.remove_unused_levels",
    "MultiIndex.drop": "MultiIndex.drop(codes,level=None,errors='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.drop.html#pandas.MultiIndex.drop",
    "MultiIndex.copy": "MultiIndex.copy(names=None,deep=False,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy",
    "MultiIndex.append": "MultiIndex.append(other)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.append.html#pandas.MultiIndex.append",
    "MultiIndex.truncate": "MultiIndex.truncate(before=None,after=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.truncate.html#pandas.MultiIndex.truncate",
    "MultiIndex.get_loc": "MultiIndex.get_loc(key)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.get_loc.html#pandas.MultiIndex.get_loc",
    "MultiIndex.get_locs": "MultiIndex.get_locs(seq)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.get_locs.html#pandas.MultiIndex.get_locs",
    "MultiIndex.get_loc_level": "MultiIndex.get_loc_level(key,level=0,drop_level=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.get_loc_level.html#pandas.MultiIndex.get_loc_level",
    "MultiIndex.get_indexer": "MultiIndex.get_indexer(target,method=None,limit=None,tolerance=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer",
    "MultiIndex.get_level_values": "MultiIndex.get_level_values(level)\nhttps://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.get_level_values.html#pandas.MultiIndex.get_level_values",
    "pd.IndexSlice=<pd.core.indexing._IndexSliceobject>": "pd.IndexSlice=<pd.core.indexing._IndexSliceobject>\nhttps://pandas.pydata.org/docs/reference/api/pandas.IndexSlice.html#pandas.IndexSlice",
    "pandas.DatetimeIndex": "pandas.DatetimeIndex(data=None,freq=<no_default>,tz=<no_default>,normalize=<no_default>,closed=<no_default>,ambiguous='raise',dayfirst=False,yearfirst=False,dtype=None,copy=False,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex",
    "DatetimeIndex.year": "DatetimeIndex.year\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year",
    "DatetimeIndex.month": "DatetimeIndex.month\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month",
    "DatetimeIndex.day": "DatetimeIndex.day\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day",
    "DatetimeIndex.hour": "DatetimeIndex.hour\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.hour.html#pandas.DatetimeIndex.hour",
    "DatetimeIndex.minute": "DatetimeIndex.minute\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.minute.html#pandas.DatetimeIndex.minute",
    "DatetimeIndex.second": "DatetimeIndex.second\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.second.html#pandas.DatetimeIndex.second",
    "DatetimeIndex.microsecond": "DatetimeIndex.microsecond\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.microsecond.html#pandas.DatetimeIndex.microsecond",
    "DatetimeIndex.nanosecond": "DatetimeIndex.nanosecond\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.nanosecond.html#pandas.DatetimeIndex.nanosecond",
    "DatetimeIndex.date": "DatetimeIndex.date\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.date.html#pandas.DatetimeIndex.date",
    "DatetimeIndex.time": "DatetimeIndex.time\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.time.html#pandas.DatetimeIndex.time",
    "DatetimeIndex.timetz": "DatetimeIndex.timetz\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.timetz.html#pandas.DatetimeIndex.timetz",
    "DatetimeIndex.dayofyear": "DatetimeIndex.dayofyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.dayofyear.html#pandas.DatetimeIndex.dayofyear",
    "DatetimeIndex.day_of_year": "DatetimeIndex.day_of_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.day_of_year.html#pandas.DatetimeIndex.day_of_year",
    "DatetimeIndex.dayofweek": "DatetimeIndex.dayofweek\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.dayofweek.html#pandas.DatetimeIndex.dayofweek",
    "DatetimeIndex.day_of_week": "DatetimeIndex.day_of_week\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.day_of_week.html#pandas.DatetimeIndex.day_of_week",
    "DatetimeIndex.weekday": "DatetimeIndex.weekday\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.weekday.html#pandas.DatetimeIndex.weekday",
    "DatetimeIndex.quarter": "DatetimeIndex.quarter\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.quarter.html#pandas.DatetimeIndex.quarter",
    "DatetimeIndex.tz": "DatetimeIndex.tz\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.tz.html#pandas.DatetimeIndex.tz",
    "DatetimeIndex.freq": "DatetimeIndex.freq\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.freq.html#pandas.DatetimeIndex.freq",
    "DatetimeIndex.freqstr": "DatetimeIndex.freqstr\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.freqstr.html#pandas.DatetimeIndex.freqstr",
    "DatetimeIndex.is_month_start": "DatetimeIndex.is_month_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.is_month_start.html#pandas.DatetimeIndex.is_month_start",
    "DatetimeIndex.is_month_end": "DatetimeIndex.is_month_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.is_month_end.html#pandas.DatetimeIndex.is_month_end",
    "DatetimeIndex.is_quarter_start": "DatetimeIndex.is_quarter_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.is_quarter_start.html#pandas.DatetimeIndex.is_quarter_start",
    "DatetimeIndex.is_quarter_end": "DatetimeIndex.is_quarter_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.is_quarter_end.html#pandas.DatetimeIndex.is_quarter_end",
    "DatetimeIndex.is_year_start": "DatetimeIndex.is_year_start\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.is_year_start.html#pandas.DatetimeIndex.is_year_start",
    "DatetimeIndex.is_year_end": "DatetimeIndex.is_year_end\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.is_year_end.html#pandas.DatetimeIndex.is_year_end",
    "DatetimeIndex.is_leap_year": "DatetimeIndex.is_leap_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.is_leap_year.html#pandas.DatetimeIndex.is_leap_year",
    "DatetimeIndex.inferred_freq": "DatetimeIndex.inferred_freq\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq",
    "DatetimeIndex.indexer_at_time": "DatetimeIndex.indexer_at_time(time,asof=False)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.indexer_at_time.html#pandas.DatetimeIndex.indexer_at_time",
    "DatetimeIndex.indexer_between_time": "DatetimeIndex.indexer_between_time(start_time,end_time,include_start=True,include_end=True)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.indexer_between_time.html#pandas.DatetimeIndex.indexer_between_time",
    "DatetimeIndex.normalize": "DatetimeIndex.normalize(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.normalize.html#pandas.DatetimeIndex.normalize",
    "DatetimeIndex.strftime": "DatetimeIndex.strftime(date_format)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.strftime.html#pandas.DatetimeIndex.strftime",
    "DatetimeIndex.snap": "DatetimeIndex.snap(freq='S')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.snap.html#pandas.DatetimeIndex.snap",
    "DatetimeIndex.tz_convert": "DatetimeIndex.tz_convert(tz)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.tz_convert.html#pandas.DatetimeIndex.tz_convert",
    "DatetimeIndex.tz_localize": "DatetimeIndex.tz_localize(tz,ambiguous='raise',nonexistent='raise')\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize",
    "DatetimeIndex.round": "DatetimeIndex.round(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.round.html#pandas.DatetimeIndex.round",
    "DatetimeIndex.floor": "DatetimeIndex.floor(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.floor.html#pandas.DatetimeIndex.floor",
    "DatetimeIndex.ceil": "DatetimeIndex.ceil(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.ceil.html#pandas.DatetimeIndex.ceil",
    "DatetimeIndex.month_name": "DatetimeIndex.month_name(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.month_name.html#pandas.DatetimeIndex.month_name",
    "DatetimeIndex.day_name": "DatetimeIndex.day_name(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.day_name.html#pandas.DatetimeIndex.day_name",
    "DatetimeIndex.as_unit": "DatetimeIndex.as_unit(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit",
    "DatetimeIndex.to_period": "DatetimeIndex.to_period(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period",
    "DatetimeIndex.to_pydatetime": "DatetimeIndex.to_pydatetime(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.to_pydatetime.html#pandas.DatetimeIndex.to_pydatetime",
    "DatetimeIndex.to_series": "DatetimeIndex.to_series(index=None,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series",
    "DatetimeIndex.to_frame": "DatetimeIndex.to_frame(index=True,name=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.to_frame.html#pandas.DatetimeIndex.to_frame",
    "DatetimeIndex.mean": "DatetimeIndex.mean(*,skipna=True,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.mean.html#pandas.DatetimeIndex.mean",
    "DatetimeIndex.std": "DatetimeIndex.std(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.DatetimeIndex.std.html#pandas.DatetimeIndex.std",
    "pandas.TimedeltaIndex": "pandas.TimedeltaIndex(data=None,unit=<no_default>,freq=<no_default>,closed=<no_default>,dtype=None,copy=False,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex",
    "TimedeltaIndex.days": "TimedeltaIndex.days\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.days.html#pandas.TimedeltaIndex.days",
    "TimedeltaIndex.seconds": "TimedeltaIndex.seconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.seconds.html#pandas.TimedeltaIndex.seconds",
    "TimedeltaIndex.microseconds": "TimedeltaIndex.microseconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.microseconds.html#pandas.TimedeltaIndex.microseconds",
    "TimedeltaIndex.nanoseconds": "TimedeltaIndex.nanoseconds\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.nanoseconds.html#pandas.TimedeltaIndex.nanoseconds",
    "TimedeltaIndex.components": "TimedeltaIndex.components\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.components.html#pandas.TimedeltaIndex.components",
    "TimedeltaIndex.inferred_freq": "TimedeltaIndex.inferred_freq\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.inferred_freq.html#pandas.TimedeltaIndex.inferred_freq",
    "TimedeltaIndex.as_unit": "TimedeltaIndex.as_unit(unit)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit",
    "TimedeltaIndex.to_pytimedelta": "TimedeltaIndex.to_pytimedelta(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.to_pytimedelta.html#pandas.TimedeltaIndex.to_pytimedelta",
    "TimedeltaIndex.to_series": "TimedeltaIndex.to_series(index=None,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.to_series.html#pandas.TimedeltaIndex.to_series",
    "TimedeltaIndex.round": "TimedeltaIndex.round(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.round.html#pandas.TimedeltaIndex.round",
    "TimedeltaIndex.floor": "TimedeltaIndex.floor(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.floor.html#pandas.TimedeltaIndex.floor",
    "TimedeltaIndex.ceil": "TimedeltaIndex.ceil(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.ceil.html#pandas.TimedeltaIndex.ceil",
    "TimedeltaIndex.to_frame": "TimedeltaIndex.to_frame(index=True,name=<no_default>)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.to_frame.html#pandas.TimedeltaIndex.to_frame",
    "TimedeltaIndex.mean": "TimedeltaIndex.mean(*,skipna=True,axis=0)\nhttps://pandas.pydata.org/docs/reference/api/pandas.TimedeltaIndex.mean.html#pandas.TimedeltaIndex.mean",
    "pandas.PeriodIndex": "pandas.PeriodIndex(data=None,ordinal=None,freq=None,dtype=None,copy=False,name=None,**fields)\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex",
    "PeriodIndex.day": "PeriodIndex.day\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.day.html#pandas.PeriodIndex.day",
    "PeriodIndex.dayofweek": "PeriodIndex.dayofweek\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.dayofweek.html#pandas.PeriodIndex.dayofweek",
    "PeriodIndex.day_of_week": "PeriodIndex.day_of_week\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.day_of_week.html#pandas.PeriodIndex.day_of_week",
    "PeriodIndex.dayofyear": "PeriodIndex.dayofyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.dayofyear.html#pandas.PeriodIndex.dayofyear",
    "PeriodIndex.day_of_year": "PeriodIndex.day_of_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.day_of_year.html#pandas.PeriodIndex.day_of_year",
    "PeriodIndex.days_in_month": "PeriodIndex.days_in_month\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.days_in_month.html#pandas.PeriodIndex.days_in_month",
    "PeriodIndex.daysinmonth": "PeriodIndex.daysinmonth\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.daysinmonth.html#pandas.PeriodIndex.daysinmonth",
    "PeriodIndex.end_time": "PeriodIndex.end_time\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.end_time.html#pandas.PeriodIndex.end_time",
    "PeriodIndex.freq": "PeriodIndex.freq\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.freq.html#pandas.PeriodIndex.freq",
    "PeriodIndex.freqstr": "PeriodIndex.freqstr\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.freqstr.html#pandas.PeriodIndex.freqstr",
    "PeriodIndex.hour": "PeriodIndex.hour\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.hour.html#pandas.PeriodIndex.hour",
    "PeriodIndex.is_leap_year": "PeriodIndex.is_leap_year\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.is_leap_year.html#pandas.PeriodIndex.is_leap_year",
    "PeriodIndex.minute": "PeriodIndex.minute\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.minute.html#pandas.PeriodIndex.minute",
    "PeriodIndex.month": "PeriodIndex.month\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.month.html#pandas.PeriodIndex.month",
    "PeriodIndex.quarter": "PeriodIndex.quarter\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.quarter.html#pandas.PeriodIndex.quarter",
    "PeriodIndex.qyear": "PeriodIndex.qyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.qyear.html#pandas.PeriodIndex.qyear",
    "PeriodIndex.second": "PeriodIndex.second\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.second.html#pandas.PeriodIndex.second",
    "PeriodIndex.start_time": "PeriodIndex.start_time\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.start_time.html#pandas.PeriodIndex.start_time",
    "PeriodIndex.week": "PeriodIndex.week\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.week.html#pandas.PeriodIndex.week",
    "PeriodIndex.weekday": "PeriodIndex.weekday\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.weekday.html#pandas.PeriodIndex.weekday",
    "PeriodIndex.weekofyear": "PeriodIndex.weekofyear\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.weekofyear.html#pandas.PeriodIndex.weekofyear",
    "PeriodIndex.year": "PeriodIndex.year\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.year.html#pandas.PeriodIndex.year",
    "PeriodIndex.asfreq": "PeriodIndex.asfreq(freq=None,how='E')\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.asfreq.html#pandas.PeriodIndex.asfreq",
    "PeriodIndex.strftime": "PeriodIndex.strftime(*args,**kwargs)\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime",
    "PeriodIndex.to_timestamp": "PeriodIndex.to_timestamp(freq=None,how='start')\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp",
    "methodPeriodIndex.from_fields": "methodPeriodIndex.from_fields(*,year=None,quarter=None,month=None,day=None,hour=None,minute=None,second=None,freq=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields",
    "methodPeriodIndex.from_ordinals": "methodPeriodIndex.from_ordinals(ordinals,*,freq,name=None)\nhttps://pandas.pydata.org/docs/reference/api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals"
}