# This file was generated by Nuitka

# Stubs included by default
import time
import os
import subprocess
from typing import Dict, List
from path_tools import run_request_path, runner_path
import json
from tools.database import lite_client
import requests
import sys
from concurrent.futures import ThreadPoolExecutor
from datetime import datetime

processes: Dict[str, subprocess.Popen]
request_runs: list
def __run_process__(data: dict) -> typing.Any:
    ...
def run(data: dict) -> typing.Any:
    ...
def get_logs(data: dict) -> typing.Any:
    ...
def stream_logs(data: dict) -> typing.Any:
    ...
def __run_process2__(data: dict) -> typing.Any:
    ...
def is_key_valid(access_key: typing.Any) -> typing.Any:
    ...
def run_request(data: dict) -> typing.Any:
    ...
def terminate_by_project_id(item: typing.Any, project_id: typing.Any) -> typing.Any:
    ...
def terminate_request(data: dict) -> typing.Any:
    ...
def terminate_run(data: dict) -> typing.Any:
    ...

__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import subprocess
import time
import sys
import os
import path_tools
import json
import datetime
import tools
import tools.database
import concurrent
import concurrent.futures
import concurrent.futures.ThreadPoolExecutor
import typing
import requests