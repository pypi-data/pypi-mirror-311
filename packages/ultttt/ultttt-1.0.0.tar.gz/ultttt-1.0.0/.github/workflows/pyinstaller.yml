name: PyInstaller
on:
  push:
    branches: ["main"]
    paths-ignore:
      - README.md
      - LICENSE
      - .gitignore
      - "*.pdf"
      - tests/**
      - .github/**
      - "!.github/workflows/pyinstaller.yml"
  workflow_call:
  workflow_dispatch:
jobs:
  version:
    outputs:
      version: ${{ steps.version.outputs.result }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: version
        uses: mikefarah/yq@master
        with:
          cmd: yq '.project.version' 'pyproject.toml'
  pyinstaller:
    needs: version
    strategy:
      fail-fast: false
      matrix:
        include:
          # https://packaging.python.org/en/latest/specifications/platform-compatibility-tags/#platform-tag
          # target=$(python -c 'import sysconfig; print(sysconfig.get_platform().replace("-", "_").replace(".", "_"))')
          - { os: ubuntu-latest, target: linux_x86_64 }
          - { os: macos-latest, target: macosx_11_0_arm64 }
          - { os: macos-13, target: macosx_10_9_x86_64 }
          - { os: windows-latest, target: win_amd64 }
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      - run: uv run poe build-exe
      - env:
          version: ${{ needs.version.outputs.version }}
          target: ${{ matrix.target }}
        run: |
          mkdir stage
          mv dist/ultttt stage/ultttt-$target-$version
      - uses: actions/upload-artifact@v4
        with:
          name: ultttt-${{ matrix.target }}
          path: stage
