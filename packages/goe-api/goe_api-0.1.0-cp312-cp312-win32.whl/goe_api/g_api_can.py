# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _g_api_can
else:
    import _g_api_can

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def trialprint(numberOfItems):
    return _g_api_can.trialprint(numberOfItems)
class G_Can_Data_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    U8 = property(_g_api_can.G_Can_Data_t_U8_get, _g_api_can.G_Can_Data_t_U8_set)
    U16 = property(_g_api_can.G_Can_Data_t_U16_get, _g_api_can.G_Can_Data_t_U16_set)
    U32 = property(_g_api_can.G_Can_Data_t_U32_get, _g_api_can.G_Can_Data_t_U32_set)
    U64 = property(_g_api_can.G_Can_Data_t_U64_get, _g_api_can.G_Can_Data_t_U64_set)

    def __init__(self):
        _g_api_can.G_Can_Data_t_swiginit(self, _g_api_can.new_G_Can_Data_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Data_t

# Register G_Can_Data_t in _g_api_can:
_g_api_can.G_Can_Data_t_swigregister(G_Can_Data_t)

G_CAN__FD_MODE__NO_FD = _g_api_can.G_CAN__FD_MODE__NO_FD
G_CAN__FD_MODE__FD = _g_api_can.G_CAN__FD_MODE__FD
G_CAN__FD_MODE__TX_FD = _g_api_can.G_CAN__FD_MODE__TX_FD
G_CAN__FD_MODE__TX_FD_BRS = _g_api_can.G_CAN__FD_MODE__TX_FD_BRS
G_CAN__FD_MODE__TX_NO_FD = _g_api_can.G_CAN__FD_MODE__TX_NO_FD
G_CAN__FD_MODE__UNKNOWN = _g_api_can.G_CAN__FD_MODE__UNKNOWN
G_CAN__TX_BRS__GLOBAL__NONE = _g_api_can.G_CAN__TX_BRS__GLOBAL__NONE
G_CAN__TX_BRS__GLOBAL__ALL = _g_api_can.G_CAN__TX_BRS__GLOBAL__ALL
G_CAN__TX_BRS__GLOBAL__SPECIFIC = _g_api_can.G_CAN__TX_BRS__GLOBAL__SPECIFIC
G_CAN__TX_BRS__GLOBAL__UNKNOWN = _g_api_can.G_CAN__TX_BRS__GLOBAL__UNKNOWN
G_CAN__TX_BRS__INIT_VALUE__DISABLED = _g_api_can.G_CAN__TX_BRS__INIT_VALUE__DISABLED
G_CAN__TX_BRS__INIT_VALUE__ENABLED = _g_api_can.G_CAN__TX_BRS__INIT_VALUE__ENABLED
G_CAN__TX_BRS__INIT_VALUE__UNKNOWN = _g_api_can.G_CAN__TX_BRS__INIT_VALUE__UNKNOWN
G_CAN__TX_ESI__GLOBAL__DEPENDS_ON_ERROR_PASSIVE_FLAG = _g_api_can.G_CAN__TX_ESI__GLOBAL__DEPENDS_ON_ERROR_PASSIVE_FLAG
G_CAN__TX_ESI__GLOBAL__IS_SET = _g_api_can.G_CAN__TX_ESI__GLOBAL__IS_SET
G_CAN__TX_ESI__GLOBAL__DEPENDS_ON_ERROR_PASSIVE_FLAG_AND_ESI_BIT = _g_api_can.G_CAN__TX_ESI__GLOBAL__DEPENDS_ON_ERROR_PASSIVE_FLAG_AND_ESI_BIT
G_CAN__TX_ESI__GLOBAL__UNKNOWN = _g_api_can.G_CAN__TX_ESI__GLOBAL__UNKNOWN
G_CAN__TX_ESI__INIT_VALUE__ERROR_ACTIVE = _g_api_can.G_CAN__TX_ESI__INIT_VALUE__ERROR_ACTIVE
G_CAN__TX_ESI__INIT_VALUE__ERROR_PASSIVE = _g_api_can.G_CAN__TX_ESI__INIT_VALUE__ERROR_PASSIVE
G_CAN__TX_ESI__INIT_VALUE__UNKNOWN = _g_api_can.G_CAN__TX_ESI__INIT_VALUE__UNKNOWN
G_CAN__FD_FRAME_FORMAT_SPEC__ISO11898_1 = _g_api_can.G_CAN__FD_FRAME_FORMAT_SPEC__ISO11898_1
G_CAN__FD_FRAME_FORMAT_SPEC__BOSCH_CAN_FD_SPEC_1_0 = _g_api_can.G_CAN__FD_FRAME_FORMAT_SPEC__BOSCH_CAN_FD_SPEC_1_0
G_CAN__FD_FRAME_FORMAT_SPEC__UNKNOWN = _g_api_can.G_CAN__FD_FRAME_FORMAT_SPEC__UNKNOWN
G_CAN__CYCLIC_MSGS__PROPERTY_ID__MSG_FLAG__BRS = _g_api_can.G_CAN__CYCLIC_MSGS__PROPERTY_ID__MSG_FLAG__BRS
G_CAN__CYCLIC_MSGS__PROPERTY_ID__MSG_FLAG__ESI = _g_api_can.G_CAN__CYCLIC_MSGS__PROPERTY_ID__MSG_FLAG__ESI
G_CAN__CYCLIC_MSGS__PROPERTY_ID__UNKNOWN = _g_api_can.G_CAN__CYCLIC_MSGS__PROPERTY_ID__UNKNOWN
G_CAN__TRANSCEIVER_MODE__NORMAL = _g_api_can.G_CAN__TRANSCEIVER_MODE__NORMAL
G_CAN__TRANSCEIVER_MODE__SLEEP = _g_api_can.G_CAN__TRANSCEIVER_MODE__SLEEP
G_CAN__TRANSCEIVER_MODE__WAKE_UP = _g_api_can.G_CAN__TRANSCEIVER_MODE__WAKE_UP
G_CAN__TRANSCEIVER_MODE__HIGH_SPEED = _g_api_can.G_CAN__TRANSCEIVER_MODE__HIGH_SPEED
G_CAN__TRANSCEIVER_MODE__SINGLE_WIRE_ON_CAN_HIGH = _g_api_can.G_CAN__TRANSCEIVER_MODE__SINGLE_WIRE_ON_CAN_HIGH
G_CAN__TRANSCEIVER_MODE__SINGLE_WIRE_ON_CAN_LOW = _g_api_can.G_CAN__TRANSCEIVER_MODE__SINGLE_WIRE_ON_CAN_LOW
G_CAN__EVENT_TYPE__TRANSMITTED_MESSAGE = _g_api_can.G_CAN__EVENT_TYPE__TRANSMITTED_MESSAGE
G_CAN__EVENT_TYPE__RECEIVED_MESSAGE = _g_api_can.G_CAN__EVENT_TYPE__RECEIVED_MESSAGE
G_CAN__EVENT_TYPE__ERROR_FRAME = _g_api_can.G_CAN__EVENT_TYPE__ERROR_FRAME
G_CAN__EVENT_TYPE__NM_SLEEP_ACKNOWLEDGE = _g_api_can.G_CAN__EVENT_TYPE__NM_SLEEP_ACKNOWLEDGE
G_CAN__EVENT_TYPE__RECEIVED_MESSAGES = _g_api_can.G_CAN__EVENT_TYPE__RECEIVED_MESSAGES
G_CAN__EVENT_TYPE__UNKNOWN = _g_api_can.G_CAN__EVENT_TYPE__UNKNOWN
G_CAN__ACTION_TYPE__SEND_MESSAGE = _g_api_can.G_CAN__ACTION_TYPE__SEND_MESSAGE
G_CAN__ACTION_TYPE__START_PREPARED_MESSAGES = _g_api_can.G_CAN__ACTION_TYPE__START_PREPARED_MESSAGES
G_CAN__ACTION_TYPE__UNKNOWN = _g_api_can.G_CAN__ACTION_TYPE__UNKNOWN

def G_Can_InitInterface(portHandle, idMode, cmdFlags):
    return _g_api_can.G_Can_InitInterface(portHandle, idMode, cmdFlags)
G_CAN__NODE__PROPERTY_ID__BAUD_RATE = _g_api_can.G_CAN__NODE__PROPERTY_ID__BAUD_RATE
G_CAN__NODE__PROPERTY_ID__BUS_IDLE_TIME__MS = _g_api_can.G_CAN__NODE__PROPERTY_ID__BUS_IDLE_TIME__MS
G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_INPUT__EN = _g_api_can.G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_INPUT__EN
G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_INPUT__STB_N = _g_api_can.G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_INPUT__STB_N
G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_INPUT__WAKE_N = _g_api_can.G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_INPUT__WAKE_N
G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_OUTPUT__ERR_N = _g_api_can.G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_OUTPUT__ERR_N
G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_OUTPUT__INH = _g_api_can.G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_OUTPUT__INH
G_CAN__NODE__PROPERTY_ID__DISABLE_SOFTWARE_TX_PATH = _g_api_can.G_CAN__NODE__PROPERTY_ID__DISABLE_SOFTWARE_TX_PATH
G_CAN__NODE__PROPERTY_ID__DISABLE_NO_ACK_PAUSES = _g_api_can.G_CAN__NODE__PROPERTY_ID__DISABLE_NO_ACK_PAUSES
G_CAN__NODE__PROPERTY_ID__DISABLE_BUS_OFF_WAITING = _g_api_can.G_CAN__NODE__PROPERTY_ID__DISABLE_BUS_OFF_WAITING
G_CAN__NODE__PROPERTY_ID__ENABLE_BUS_TERMINATION = _g_api_can.G_CAN__NODE__PROPERTY_ID__ENABLE_BUS_TERMINATION
G_CAN__NODE__PROPERTY_ID__ENABLE_INTERNAL_VBAT = _g_api_can.G_CAN__NODE__PROPERTY_ID__ENABLE_INTERNAL_VBAT
G_CAN__NODE__PROPERTY_ID__ENABLE_TRANSCEIVER_WAKE_UP_AFTER_BUS_OFF = _g_api_can.G_CAN__NODE__PROPERTY_ID__ENABLE_TRANSCEIVER_WAKE_UP_AFTER_BUS_OFF
G_CAN__NODE__PROPERTY_ID__BUS_OFF_COUNTER = _g_api_can.G_CAN__NODE__PROPERTY_ID__BUS_OFF_COUNTER
G_CAN__NODE__PROPERTY_ID__FD_MODE = _g_api_can.G_CAN__NODE__PROPERTY_ID__FD_MODE
G_CAN__NODE__PROPERTY_ID__FD__TX_BRS__GLOBAL = _g_api_can.G_CAN__NODE__PROPERTY_ID__FD__TX_BRS__GLOBAL
G_CAN__NODE__PROPERTY_ID__FD__TX_BRS__INIT_VALUE = _g_api_can.G_CAN__NODE__PROPERTY_ID__FD__TX_BRS__INIT_VALUE
G_CAN__NODE__PROPERTY_ID__FD__TX_ESI__GLOBAL = _g_api_can.G_CAN__NODE__PROPERTY_ID__FD__TX_ESI__GLOBAL
G_CAN__NODE__PROPERTY_ID__FD__TX_ESI__INIT_VALUE = _g_api_can.G_CAN__NODE__PROPERTY_ID__FD__TX_ESI__INIT_VALUE
G_CAN__NODE__PROPERTY_ID__FD__NON_ISO = _g_api_can.G_CAN__NODE__PROPERTY_ID__FD__NON_ISO
G_CAN__NODE__PROPERTY_ID__FD__SUPPORTED = _g_api_can.G_CAN__NODE__PROPERTY_ID__FD__SUPPORTED
G_CAN__NODE__PROPERTY_ID__BAUD_RATE_FD = _g_api_can.G_CAN__NODE__PROPERTY_ID__BAUD_RATE_FD
G_CAN__NODE__PROPERTY_ID__BIT_TIMING__TSEG1__MIN = _g_api_can.G_CAN__NODE__PROPERTY_ID__BIT_TIMING__TSEG1__MIN
G_CAN__NODE__PROPERTY_ID__BIT_TIMING__TSEG1__MAX = _g_api_can.G_CAN__NODE__PROPERTY_ID__BIT_TIMING__TSEG1__MAX
G_CAN__NODE__PROPERTY_ID__BIT_TIMING__TSEG2__MIN = _g_api_can.G_CAN__NODE__PROPERTY_ID__BIT_TIMING__TSEG2__MIN
G_CAN__NODE__PROPERTY_ID__BIT_TIMING__TSEG2__MAX = _g_api_can.G_CAN__NODE__PROPERTY_ID__BIT_TIMING__TSEG2__MAX
G_CAN__NODE__PROPERTY_ID__BIT_TIMING__SJW__MIN = _g_api_can.G_CAN__NODE__PROPERTY_ID__BIT_TIMING__SJW__MIN
G_CAN__NODE__PROPERTY_ID__BIT_TIMING__SJW__MAX = _g_api_can.G_CAN__NODE__PROPERTY_ID__BIT_TIMING__SJW__MAX
G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_MODE = _g_api_can.G_CAN__NODE__PROPERTY_ID__TRANSCEIVER_MODE
G_CAN__NODE__PROPERTY_ID__BUS_ACTIVITY__THRESHOLD_IN_US = _g_api_can.G_CAN__NODE__PROPERTY_ID__BUS_ACTIVITY__THRESHOLD_IN_US
G_CAN__NODE__PROPERTY_ID__BUS_ACTIVITY__STATE = _g_api_can.G_CAN__NODE__PROPERTY_ID__BUS_ACTIVITY__STATE
G_CAN__NODE__PROPERTY_ID__UNKNOWN = _g_api_can.G_CAN__NODE__PROPERTY_ID__UNKNOWN

def G_Can_Node_CalculateBaudrateRegisterValue(portHandle, baudrate, samplePoint, numberOfTimeQuants, tSeg1, tSeg2, sjw):
    return _g_api_can.G_Can_Node_CalculateBaudrateRegisterValue(portHandle, baudrate, samplePoint, numberOfTimeQuants, tSeg1, tSeg2, sjw)

def G_Can_Node_SetBaudrateRegisterAndTransceiverType(portHandle, baudrateRegisterValue, transceiverType):
    return _g_api_can.G_Can_Node_SetBaudrateRegisterAndTransceiverType(portHandle, baudrateRegisterValue, transceiverType)
class G_Can_Node_Baudrate_Set_ExtendedParam_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SamplePoint_Min = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_SamplePoint_Min_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_SamplePoint_Min_set)
    SamplePoint_Max = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_SamplePoint_Max_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_SamplePoint_Max_set)
    NumberOfTimeQuanta_Min = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_NumberOfTimeQuanta_Min_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_NumberOfTimeQuanta_Min_set)
    NumberOfTimeQuanta_Max = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_NumberOfTimeQuanta_Max_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_NumberOfTimeQuanta_Max_set)
    TSeg1_Min = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_TSeg1_Min_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_TSeg1_Min_set)
    TSeg1_Max = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_TSeg1_Max_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_TSeg1_Max_set)
    TSeg2_Min = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_TSeg2_Min_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_TSeg2_Min_set)
    TSeg2_Max = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_TSeg2_Max_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_TSeg2_Max_set)
    Sjw_Min = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_Sjw_Min_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_Sjw_Min_set)
    Sjw_Max = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_Sjw_Max_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_Sjw_Max_set)
    reserved1 = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_reserved1_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_reserved2_get, _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_swiginit(self, _g_api_can.new_G_Can_Node_Baudrate_Set_ExtendedParam_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_Baudrate_Set_ExtendedParam_t

# Register G_Can_Node_Baudrate_Set_ExtendedParam_t in _g_api_can:
_g_api_can.G_Can_Node_Baudrate_Set_ExtendedParam_t_swigregister(G_Can_Node_Baudrate_Set_ExtendedParam_t)

class G_Can_Node_Baudrate_ActualValues_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Baudrate = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_Baudrate_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_Baudrate_set)
    CanControllerClock = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_CanControllerClock_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_CanControllerClock_set)
    SamplePoint = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_SamplePoint_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_SamplePoint_set)
    NumberOfTimeQuanta = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_NumberOfTimeQuanta_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_NumberOfTimeQuanta_set)
    TSeg1 = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_TSeg1_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_TSeg1_set)
    TSeg2 = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_TSeg2_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_TSeg2_set)
    Sjw = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_Sjw_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_Sjw_set)
    reserved1 = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_reserved1_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_reserved2_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Node_Baudrate_ActualValues_t_reserved3_get, _g_api_can.G_Can_Node_Baudrate_ActualValues_t_reserved3_set)

    def __init__(self):
        _g_api_can.G_Can_Node_Baudrate_ActualValues_t_swiginit(self, _g_api_can.new_G_Can_Node_Baudrate_ActualValues_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_Baudrate_ActualValues_t

# Register G_Can_Node_Baudrate_ActualValues_t in _g_api_can:
_g_api_can.G_Can_Node_Baudrate_ActualValues_t_swigregister(G_Can_Node_Baudrate_ActualValues_t)


def G_Can_Node_Baudrate_Set(portHandle, baudrate, extendedParam):
    return _g_api_can.G_Can_Node_Baudrate_Set(portHandle, baudrate, extendedParam)

def G_Can_Node_Baudrate_Get(portHandle):
    return _g_api_can.G_Can_Node_Baudrate_Get(portHandle)
class G_Can_Node_BaudrateFd_Set_Cmd_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_Flags_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_Flags_set)
    BaudRate = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_BaudRate_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_BaudRate_set)
    SamplePoint_Min = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_SamplePoint_Min_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_SamplePoint_Min_set)
    SamplePoint_Max = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_SamplePoint_Max_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_SamplePoint_Max_set)
    NumberOfTimeQuanta_Min = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_NumberOfTimeQuanta_Min_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_NumberOfTimeQuanta_Min_set)
    NumberOfTimeQuanta_Max = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_NumberOfTimeQuanta_Max_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_NumberOfTimeQuanta_Max_set)
    TSeg1_Min = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TSeg1_Min_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TSeg1_Min_set)
    TSeg1_Max = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TSeg1_Max_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TSeg1_Max_set)
    TSeg2_Min = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TSeg2_Min_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TSeg2_Min_set)
    TSeg2_Max = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TSeg2_Max_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TSeg2_Max_set)
    Sjw_Min = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_Sjw_Min_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_Sjw_Min_set)
    Sjw_Max = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_Sjw_Max_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_Sjw_Max_set)
    reserved1 = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_reserved1_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_reserved2_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_reserved2_set)
    TdcOffset = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TdcOffset_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_TdcOffset_set)

    def __init__(self):
        _g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_swiginit(self, _g_api_can.new_G_Can_Node_BaudrateFd_Set_Cmd_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_BaudrateFd_Set_Cmd_t

# Register G_Can_Node_BaudrateFd_Set_Cmd_t in _g_api_can:
_g_api_can.G_Can_Node_BaudrateFd_Set_Cmd_t_swigregister(G_Can_Node_BaudrateFd_Set_Cmd_t)

class G_Can_Node_BaudrateFd_Set_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_Flags_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_Flags_set)
    BaudRate = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_BaudRate_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_BaudRate_set)
    CanControllerClock = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_CanControllerClock_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_CanControllerClock_set)
    SamplePoint = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_SamplePoint_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_SamplePoint_set)
    NumberOfTimeQuanta = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_NumberOfTimeQuanta_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_NumberOfTimeQuanta_set)
    TSeg1 = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_TSeg1_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_TSeg1_set)
    TSeg2 = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_TSeg2_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_TSeg2_set)
    Sjw = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_Sjw_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_Sjw_set)
    reserved1 = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_reserved1_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_reserved2_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_reserved3_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_reserved3_set)
    TdcOffset = property(_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_TdcOffset_get, _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_TdcOffset_set)

    def __init__(self):
        _g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Node_BaudrateFd_Set_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_BaudrateFd_Set_Rsp_t

# Register G_Can_Node_BaudrateFd_Set_Rsp_t in _g_api_can:
_g_api_can.G_Can_Node_BaudrateFd_Set_Rsp_t_swigregister(G_Can_Node_BaudrateFd_Set_Rsp_t)


def G_Can_Node_BaudrateFd_Set(portHandle, cmd):
    return _g_api_can.G_Can_Node_BaudrateFd_Set(portHandle, cmd)
class G_Can_Node_BaudrateFd_Get_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_Flags_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_Flags_set)
    Baudrate = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_Baudrate_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_Baudrate_set)
    CanControllerClock = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_CanControllerClock_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_CanControllerClock_set)
    SamplePoint = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_SamplePoint_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_SamplePoint_set)
    NumberOfTimeQuanta = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_NumberOfTimeQuanta_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_NumberOfTimeQuanta_set)
    TSeg1 = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_TSeg1_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_TSeg1_set)
    TSeg2 = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_TSeg2_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_TSeg2_set)
    Sjw = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_Sjw_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_Sjw_set)
    reserved1 = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_reserved1_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_reserved2_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_reserved3_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_reserved3_set)
    TdcOffset = property(_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_TdcOffset_get, _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_TdcOffset_set)

    def __init__(self):
        _g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Node_BaudrateFd_Get_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_BaudrateFd_Get_Rsp_t

# Register G_Can_Node_BaudrateFd_Get_Rsp_t in _g_api_can:
_g_api_can.G_Can_Node_BaudrateFd_Get_Rsp_t_swigregister(G_Can_Node_BaudrateFd_Get_Rsp_t)


def G_Can_Node_BaudrateFd_Get(portHandle, cmdFlags):
    return _g_api_can.G_Can_Node_BaudrateFd_Get(portHandle, cmdFlags)

def G_Can_Node_ErrorFrameCounter_Get(portHandle):
    return _g_api_can.G_Can_Node_ErrorFrameCounter_Get(portHandle)

def G_Can_Node_ErrorFrameCounter_Reset(portHandle):
    return _g_api_can.G_Can_Node_ErrorFrameCounter_Reset(portHandle)
class G_Can_Node_GetState_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RxErrorCounter = property(_g_api_can.G_Can_Node_GetState_Rsp_t_RxErrorCounter_get, _g_api_can.G_Can_Node_GetState_Rsp_t_RxErrorCounter_set)
    TxErrorCounter = property(_g_api_can.G_Can_Node_GetState_Rsp_t_TxErrorCounter_get, _g_api_can.G_Can_Node_GetState_Rsp_t_TxErrorCounter_set)
    ErrorWarningLevel = property(_g_api_can.G_Can_Node_GetState_Rsp_t_ErrorWarningLevel_get, _g_api_can.G_Can_Node_GetState_Rsp_t_ErrorWarningLevel_set)
    InitState = property(_g_api_can.G_Can_Node_GetState_Rsp_t_InitState_get, _g_api_can.G_Can_Node_GetState_Rsp_t_InitState_set)
    Flags = property(_g_api_can.G_Can_Node_GetState_Rsp_t_Flags_get, _g_api_can.G_Can_Node_GetState_Rsp_t_Flags_set)
    TransceiverPin_Enable = property(_g_api_can.G_Can_Node_GetState_Rsp_t_TransceiverPin_Enable_get, _g_api_can.G_Can_Node_GetState_Rsp_t_TransceiverPin_Enable_set)
    TransceiverPin_NotStandby = property(_g_api_can.G_Can_Node_GetState_Rsp_t_TransceiverPin_NotStandby_get, _g_api_can.G_Can_Node_GetState_Rsp_t_TransceiverPin_NotStandby_set)
    TransceiverPin_NotWake = property(_g_api_can.G_Can_Node_GetState_Rsp_t_TransceiverPin_NotWake_get, _g_api_can.G_Can_Node_GetState_Rsp_t_TransceiverPin_NotWake_set)
    TransceiverPin_NotError = property(_g_api_can.G_Can_Node_GetState_Rsp_t_TransceiverPin_NotError_get, _g_api_can.G_Can_Node_GetState_Rsp_t_TransceiverPin_NotError_set)

    def __init__(self):
        _g_api_can.G_Can_Node_GetState_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Node_GetState_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_GetState_Rsp_t

# Register G_Can_Node_GetState_Rsp_t in _g_api_can:
_g_api_can.G_Can_Node_GetState_Rsp_t_swigregister(G_Can_Node_GetState_Rsp_t)


def G_Can_Node_GetState(portHandle, mode):
    return _g_api_can.G_Can_Node_GetState(portHandle, mode)

def G_Can_Node_Transceiver_SetMode(portHandle, mode):
    return _g_api_can.G_Can_Node_Transceiver_SetMode(portHandle, mode)

def G_Can_Node_TxPath_Control(portHandle, mode):
    return _g_api_can.G_Can_Node_TxPath_Control(portHandle, mode)

def G_Can_Node_BusTermination_Enable(portHandle):
    return _g_api_can.G_Can_Node_BusTermination_Enable(portHandle)

def G_Can_Node_BusTermination_Disable(portHandle):
    return _g_api_can.G_Can_Node_BusTermination_Disable(portHandle)

def G_Can_Node_InternalVBat_Enable(portHandle):
    return _g_api_can.G_Can_Node_InternalVBat_Enable(portHandle)

def G_Can_Node_InternalVBat_Disable(portHandle):
    return _g_api_can.G_Can_Node_InternalVBat_Disable(portHandle)

def G_Can_Node_BusIdleTime_Get(portHandle):
    return _g_api_can.G_Can_Node_BusIdleTime_Get(portHandle)
class G_Can_Node_FdState_Get_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_Flags_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_Flags_set)
    FdMode = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_FdMode_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_FdMode_set)
    TxBrs_Global = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_TxBrs_Global_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_TxBrs_Global_set)
    TxBrs_InitValue = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_TxBrs_InitValue_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_TxBrs_InitValue_set)
    TxEsi_Global = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_TxEsi_Global_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_TxEsi_Global_set)
    TxEsi_InitValue = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_TxEsi_InitValue_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_TxEsi_InitValue_set)
    FdFrameFormatSpec = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_FdFrameFormatSpec_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_FdFrameFormatSpec_set)
    reserved1 = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_reserved1_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_reserved2_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_reserved2_set)
    BaudRateFd = property(_g_api_can.G_Can_Node_FdState_Get_Rsp_t_BaudRateFd_get, _g_api_can.G_Can_Node_FdState_Get_Rsp_t_BaudRateFd_set)

    def __init__(self):
        _g_api_can.G_Can_Node_FdState_Get_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Node_FdState_Get_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_FdState_Get_Rsp_t

# Register G_Can_Node_FdState_Get_Rsp_t in _g_api_can:
_g_api_can.G_Can_Node_FdState_Get_Rsp_t_swigregister(G_Can_Node_FdState_Get_Rsp_t)


def G_Can_Node_FdState_Get(portHandle, cmdFlags):
    return _g_api_can.G_Can_Node_FdState_Get(portHandle, cmdFlags)
class G_Can_Node_FdState_Set_Cmd_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_Flags_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_Flags_set)
    TxBrs_Global = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_TxBrs_Global_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_TxBrs_Global_set)
    TxBrs_InitValue = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_TxBrs_InitValue_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_TxBrs_InitValue_set)
    TxEsi_Global = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_TxEsi_Global_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_TxEsi_Global_set)
    TxEsi_InitValue = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_TxEsi_InitValue_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_TxEsi_InitValue_set)
    FdFrameFormatSpec = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_FdFrameFormatSpec_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_FdFrameFormatSpec_set)
    reserved1 = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_reserved1_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_reserved2_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_reserved3_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_reserved3_set)
    BaudRateFd = property(_g_api_can.G_Can_Node_FdState_Set_Cmd_t_BaudRateFd_get, _g_api_can.G_Can_Node_FdState_Set_Cmd_t_BaudRateFd_set)

    def __init__(self):
        _g_api_can.G_Can_Node_FdState_Set_Cmd_t_swiginit(self, _g_api_can.new_G_Can_Node_FdState_Set_Cmd_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_FdState_Set_Cmd_t

# Register G_Can_Node_FdState_Set_Cmd_t in _g_api_can:
_g_api_can.G_Can_Node_FdState_Set_Cmd_t_swigregister(G_Can_Node_FdState_Set_Cmd_t)


def G_Can_Node_FdState_Set(portHandle, cmd):
    return _g_api_can.G_Can_Node_FdState_Set(portHandle, cmd)
class G_Can_Node_Property_SetById_Cmd_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PropertyId = property(_g_api_can.G_Can_Node_Property_SetById_Cmd_t_PropertyId_get, _g_api_can.G_Can_Node_Property_SetById_Cmd_t_PropertyId_set)
    reserved1 = property(_g_api_can.G_Can_Node_Property_SetById_Cmd_t_reserved1_get, _g_api_can.G_Can_Node_Property_SetById_Cmd_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_Property_SetById_Cmd_t_reserved2_get, _g_api_can.G_Can_Node_Property_SetById_Cmd_t_reserved2_set)
    Value = property(_g_api_can.G_Can_Node_Property_SetById_Cmd_t_Value_get, _g_api_can.G_Can_Node_Property_SetById_Cmd_t_Value_set)

    def __init__(self):
        _g_api_can.G_Can_Node_Property_SetById_Cmd_t_swiginit(self, _g_api_can.new_G_Can_Node_Property_SetById_Cmd_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_Property_SetById_Cmd_t

# Register G_Can_Node_Property_SetById_Cmd_t in _g_api_can:
_g_api_can.G_Can_Node_Property_SetById_Cmd_t_swigregister(G_Can_Node_Property_SetById_Cmd_t)


def G_Can_Node_Property_SetById(portHandle, cmd):
    return _g_api_can.G_Can_Node_Property_SetById(portHandle, cmd)
class G_Can_Node_Property_GetById_Cmd_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PropertyId = property(_g_api_can.G_Can_Node_Property_GetById_Cmd_t_PropertyId_get, _g_api_can.G_Can_Node_Property_GetById_Cmd_t_PropertyId_set)
    reserved1 = property(_g_api_can.G_Can_Node_Property_GetById_Cmd_t_reserved1_get, _g_api_can.G_Can_Node_Property_GetById_Cmd_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_Property_GetById_Cmd_t_reserved2_get, _g_api_can.G_Can_Node_Property_GetById_Cmd_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Node_Property_GetById_Cmd_t_swiginit(self, _g_api_can.new_G_Can_Node_Property_GetById_Cmd_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_Property_GetById_Cmd_t

# Register G_Can_Node_Property_GetById_Cmd_t in _g_api_can:
_g_api_can.G_Can_Node_Property_GetById_Cmd_t_swigregister(G_Can_Node_Property_GetById_Cmd_t)

class G_Can_Node_Property_GetById_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PropertyId = property(_g_api_can.G_Can_Node_Property_GetById_Rsp_t_PropertyId_get, _g_api_can.G_Can_Node_Property_GetById_Rsp_t_PropertyId_set)
    reserved1 = property(_g_api_can.G_Can_Node_Property_GetById_Rsp_t_reserved1_get, _g_api_can.G_Can_Node_Property_GetById_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Node_Property_GetById_Rsp_t_reserved2_get, _g_api_can.G_Can_Node_Property_GetById_Rsp_t_reserved2_set)
    Value = property(_g_api_can.G_Can_Node_Property_GetById_Rsp_t_Value_get, _g_api_can.G_Can_Node_Property_GetById_Rsp_t_Value_set)

    def __init__(self):
        _g_api_can.G_Can_Node_Property_GetById_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Node_Property_GetById_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Node_Property_GetById_Rsp_t

# Register G_Can_Node_Property_GetById_Rsp_t in _g_api_can:
_g_api_can.G_Can_Node_Property_GetById_Rsp_t_swigregister(G_Can_Node_Property_GetById_Rsp_t)


def G_Can_Node_Property_GetById(portHandle, cmd):
    return _g_api_can.G_Can_Node_Property_GetById(portHandle, cmd)

def G_Can_TxFifo_GetState(portHandle):
    return _g_api_can.G_Can_TxFifo_GetState(portHandle)

def G_Can_TxFifo_GetState_Async_AddCallback(portHandle, callback):
    return _g_api_can.G_Can_TxFifo_GetState_Async_AddCallback(portHandle, callback)

def G_Can_TxFifo_GetState_Async_RemoveCallback(portHandle):
    return _g_api_can.G_Can_TxFifo_GetState_Async_RemoveCallback(portHandle)

def G_Can_TxFifo_GetState_Async(portHandle):
    return _g_api_can.G_Can_TxFifo_GetState_Async(portHandle)

def G_Can_TxFifo_Reset(portHandle):
    return _g_api_can.G_Can_TxFifo_Reset(portHandle)

def G_Can_TxFifo_QueueMsg(portHandle, id, data, dlc):
    return _g_api_can.G_Can_TxFifo_QueueMsg(portHandle, id, data, dlc)
class G_Can_TxFifo_MsgItem_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_TxFifo_MsgItem_t_Id_get, _g_api_can.G_Can_TxFifo_MsgItem_t_Id_set)
    Dlc = property(_g_api_can.G_Can_TxFifo_MsgItem_t_Dlc_get, _g_api_can.G_Can_TxFifo_MsgItem_t_Dlc_set)
    reserved1 = property(_g_api_can.G_Can_TxFifo_MsgItem_t_reserved1_get, _g_api_can.G_Can_TxFifo_MsgItem_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_TxFifo_MsgItem_t_reserved2_get, _g_api_can.G_Can_TxFifo_MsgItem_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_TxFifo_MsgItem_t_reserved3_get, _g_api_can.G_Can_TxFifo_MsgItem_t_reserved3_set)
    Data = property(_g_api_can.G_Can_TxFifo_MsgItem_t_Data_get, _g_api_can.G_Can_TxFifo_MsgItem_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_TxFifo_MsgItem_t_swiginit(self, _g_api_can.new_G_Can_TxFifo_MsgItem_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_TxFifo_MsgItem_t

# Register G_Can_TxFifo_MsgItem_t in _g_api_can:
_g_api_can.G_Can_TxFifo_MsgItem_t_swigregister(G_Can_TxFifo_MsgItem_t)


def G_Can_TxFifo_QueueMsgs(portHandle, timeout, numberOfItems):
    return _g_api_can.G_Can_TxFifo_QueueMsgs(portHandle, timeout, numberOfItems)
class G_Can_TxFifo_MsgItem2_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_TxFifo_MsgItem2_t_Id_get, _g_api_can.G_Can_TxFifo_MsgItem2_t_Id_set)
    Dlc = property(_g_api_can.G_Can_TxFifo_MsgItem2_t_Dlc_get, _g_api_can.G_Can_TxFifo_MsgItem2_t_Dlc_set)
    Flags = property(_g_api_can.G_Can_TxFifo_MsgItem2_t_Flags_get, _g_api_can.G_Can_TxFifo_MsgItem2_t_Flags_set)
    MsgFlags = property(_g_api_can.G_Can_TxFifo_MsgItem2_t_MsgFlags_get, _g_api_can.G_Can_TxFifo_MsgItem2_t_MsgFlags_set)
    reserved3 = property(_g_api_can.G_Can_TxFifo_MsgItem2_t_reserved3_get, _g_api_can.G_Can_TxFifo_MsgItem2_t_reserved3_set)
    Data = property(_g_api_can.G_Can_TxFifo_MsgItem2_t_Data_get, _g_api_can.G_Can_TxFifo_MsgItem2_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_TxFifo_MsgItem2_t_swiginit(self, _g_api_can.new_G_Can_TxFifo_MsgItem2_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_TxFifo_MsgItem2_t

# Register G_Can_TxFifo_MsgItem2_t in _g_api_can:
_g_api_can.G_Can_TxFifo_MsgItem2_t_swigregister(G_Can_TxFifo_MsgItem2_t)


def G_Can_TxFifo_QueueMsgs2(portHandle, cmdFlags, timeout, numberOfItems):
    return _g_api_can.G_Can_TxFifo_QueueMsgs2(portHandle, cmdFlags, timeout, numberOfItems)

def G_Can_CyclicMsgs_DefineMsg(portHandle, id, cycleTime, sendState, group, msgCount, data, dlc):
    return _g_api_can.G_Can_CyclicMsgs_DefineMsg(portHandle, id, cycleTime, sendState, group, msgCount, data, dlc)

def G_Can_CyclicMsgs_DeleteMsg(portHandle, id):
    return _g_api_can.G_Can_CyclicMsgs_DeleteMsg(portHandle, id)

def G_Can_CyclicMsgs_SetMsgBreakCount(portHandle, id, breakCount):
    return _g_api_can.G_Can_CyclicMsgs_SetMsgBreakCount(portHandle, id, breakCount)

def G_Can_CyclicMsgs_SetMsgBreakTime(portHandle, id, breakTime):
    return _g_api_can.G_Can_CyclicMsgs_SetMsgBreakTime(portHandle, id, breakTime)

def G_Can_CyclicMsgs_SetCalculationBreakCount(portHandle, id, signal, mode, breakCount):
    return _g_api_can.G_Can_CyclicMsgs_SetCalculationBreakCount(portHandle, id, signal, mode, breakCount)

def G_Can_CyclicMsgs_DefineDisturbance(portHandle, id, dlc, count, mask, data):
    return _g_api_can.G_Can_CyclicMsgs_DefineDisturbance(portHandle, id, dlc, count, mask, data)
class G_Can_CyclicMsgs_ChangeMsg_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Id_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Id_set)
    Flags = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Flags_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Flags_set)
    SendState = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_SendState_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_SendState_set)
    Group = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Group_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Group_set)
    MsgCount = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_MsgCount_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_MsgCount_set)
    Dlc = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Dlc_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Dlc_set)
    Data = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_get)
    CycleTime = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_get)
    ExtendedMaskAndData = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_get)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_ChangeMsg_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_ChangeMsg_Parameters_t

# Register G_Can_CyclicMsgs_ChangeMsg_Parameters_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_swigregister(G_Can_CyclicMsgs_ChangeMsg_Parameters_t)

class G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Length = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_Length_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_Length_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_reserved1_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_reserved2_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_reserved3_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_reserved3_set)
    Mask = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_Mask_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_Mask_set)
    Data = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_Data_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_Data_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData

# Register G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData_swigregister(G_Can_CyclicMsgs_ChangeMsg_Parameters_t_ExtendedMaskAndData)

class G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_Flags_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_Flags_set)
    CycleTime = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_CycleTime_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_CycleTime_set)
    MinimumDelay = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_MinimumDelay_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_MinimumDelay_set)
    NumberOfMsgsBeforeRestore = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_NumberOfMsgsBeforeRestore_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_NumberOfMsgsBeforeRestore_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_reserved1_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_reserved2_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime

# Register G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime_swigregister(G_Can_CyclicMsgs_ChangeMsg_Parameters_t_CycleTime)

class G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_Flags_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_Flags_set)
    Mask = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_Mask_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_Mask_set)
    Data = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_Data_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_Data_set)
    MinimumDelay = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_MinimumDelay_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_MinimumDelay_set)
    NumberOfMsgsBeforeRestore = property(_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_NumberOfMsgsBeforeRestore_get, _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_NumberOfMsgsBeforeRestore_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data

# Register G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data_swigregister(G_Can_CyclicMsgs_ChangeMsg_Parameters_t_Data)


def G_Can_CyclicMsgs_ChangeMsg(portHandle, changeMsgParameters):
    return _g_api_can.G_Can_CyclicMsgs_ChangeMsg(portHandle, changeMsgParameters)

def G_Can_CyclicMsgs_ChangeMsgData(portHandle, id, mask, dlc, data, changeMode, minimumDelay):
    return _g_api_can.G_Can_CyclicMsgs_ChangeMsgData(portHandle, id, mask, dlc, data, changeMode, minimumDelay)

def G_Can_CyclicMsgs_ChangeCycleTime(portHandle, id, cycleTime):
    return _g_api_can.G_Can_CyclicMsgs_ChangeCycleTime(portHandle, id, cycleTime)

def G_Can_CyclicMsgs_ChangeMsgDataAndMsgCount(portHandle, id, msgCount, mask, dlc, data, changeMode, minimumDelay):
    return _g_api_can.G_Can_CyclicMsgs_ChangeMsgDataAndMsgCount(portHandle, id, msgCount, mask, dlc, data, changeMode, minimumDelay)

def G_Can_CyclicMsgs_ChangeGroupNumber(portHandle, id, group):
    return _g_api_can.G_Can_CyclicMsgs_ChangeGroupNumber(portHandle, id, group)

def G_Can_CyclicMsgs_StartMsg(portHandle, id):
    return _g_api_can.G_Can_CyclicMsgs_StartMsg(portHandle, id)

def G_Can_CyclicMsgs_StopMsg(portHandle, id):
    return _g_api_can.G_Can_CyclicMsgs_StopMsg(portHandle, id)
class G_Can_CyclicMsgs_GetMsgState_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Id_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Id_set)
    CycleTime = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_CycleTime_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_CycleTime_set)
    Group = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Group_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Group_set)
    Mode = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Mode_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Mode_set)
    MsgCount = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_MsgCount_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_MsgCount_set)
    Dlc = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Dlc_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Dlc_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_reserved1_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_reserved2_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_reserved2_set)
    Data = property(_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Data_get, _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_GetMsgState_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_GetMsgState_Rsp_t

# Register G_Can_CyclicMsgs_GetMsgState_Rsp_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_GetMsgState_Rsp_t_swigregister(G_Can_CyclicMsgs_GetMsgState_Rsp_t)


def G_Can_CyclicMsgs_GetMsgState(portHandle, id):
    return _g_api_can.G_Can_CyclicMsgs_GetMsgState(portHandle, id)

def G_Can_CyclicMsgs_StartGroup(portHandle, group):
    return _g_api_can.G_Can_CyclicMsgs_StartGroup(portHandle, group)

def G_Can_CyclicMsgs_StopGroup(portHandle, group):
    return _g_api_can.G_Can_CyclicMsgs_StopGroup(portHandle, group)

def G_Can_CyclicMsgs_MultiplexBytes_Define(portHandle, id, updateRate, numberOfIndices, mask, data):
    return _g_api_can.G_Can_CyclicMsgs_MultiplexBytes_Define(portHandle, id, updateRate, numberOfIndices, mask, data)

def G_Can_CyclicMsgs_MultiplexBytes_Stop(portHandle, id, mask, data):
    return _g_api_can.G_Can_CyclicMsgs_MultiplexBytes_Stop(portHandle, id, mask, data)
class G_Can_CyclicMsgs_Ramp_Define_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Id_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Id_set)
    Signal = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Signal_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Signal_set)
    Mode = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Mode_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Mode_set)
    Direction = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Direction_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Direction_set)
    MinValue = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_MinValue_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_MinValue_set)
    MaxValue = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_MaxValue_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_MaxValue_set)
    UpdateRate = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_UpdateRate_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_UpdateRate_set)
    Increment = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Increment_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_Increment_set)
    RampSum = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_RampSum_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_RampSum_set)
    NumberOfFlanks = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_NumberOfFlanks_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_NumberOfFlanks_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_reserved1_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_reserved2_get, _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Ramp_Define_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Ramp_Define_Parameters_t

# Register G_Can_CyclicMsgs_Ramp_Define_Parameters_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Ramp_Define_Parameters_t_swigregister(G_Can_CyclicMsgs_Ramp_Define_Parameters_t)


def G_Can_CyclicMsgs_Ramp_Define(portHandle, parameters):
    return _g_api_can.G_Can_CyclicMsgs_Ramp_Define(portHandle, parameters)

def G_Can_CyclicMsgs_Ramp_Delete(portHandle, id, signal):
    return _g_api_can.G_Can_CyclicMsgs_Ramp_Delete(portHandle, id, signal)
class G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t_Id_get, _g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t_Id_set)
    Signal = property(_g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t_Signal_get, _g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t_Signal_set)
    Mode = property(_g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t_Mode_get, _g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t_Mode_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t

# Register G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t_swigregister(G_Can_CyclicMsgs_Ramp_ChangeMode_Ramps_t)


def G_Can_CyclicMsgs_Ramp_ChangeMode(portHandle, numberOfRamps, ramps):
    return _g_api_can.G_Can_CyclicMsgs_Ramp_ChangeMode(portHandle, numberOfRamps, ramps)

def G_Can_CyclicMsgs_Ramp_GetState(portHandle, id, signal, rampState, incRampState, rampSum, incRampFlanks):
    return _g_api_can.G_Can_CyclicMsgs_Ramp_GetState(portHandle, id, signal, rampState, incRampState, rampSum, incRampFlanks)
class G_Can_CyclicMsgs_Ramp_SyncRamp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_Id_get, _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_Id_set)
    Signal = property(_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_Signal_get, _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_Signal_set)
    Mode = property(_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_Mode_get, _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_Mode_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_reserved1_get, _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_reserved2_get, _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_reserved3_get, _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_reserved3_set)
    MinValue = property(_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_MinValue_get, _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_MinValue_set)
    MaxValue = property(_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_MaxValue_get, _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_MaxValue_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Ramp_SyncRamp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Ramp_SyncRamp_t

# Register G_Can_CyclicMsgs_Ramp_SyncRamp_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Ramp_SyncRamp_t_swigregister(G_Can_CyclicMsgs_Ramp_SyncRamp_t)

class G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_Id_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_Id_set)
    Signal = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_Signal_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_Signal_set)
    MinValue = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_MinValue_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_MinValue_set)
    MaxValue = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_MaxValue_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_MaxValue_set)
    CycleTime = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_CycleTime_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_CycleTime_set)
    NumberOfFlanks = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_NumberOfFlanks_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_NumberOfFlanks_set)
    Direction = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_Direction_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_Direction_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_reserved1_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_reserved2_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_reserved3_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_reserved3_set)
    SyncRamp = property(_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_SyncRamp_get, _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_SyncRamp_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t

# Register G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t_swigregister(G_Can_CyclicMsgs_Ramp_DefineIncRamp_Parameters_t)


def G_Can_CyclicMsgs_Ramp_DefineIncRamp(portHandle, parameters):
    return _g_api_can.G_Can_CyclicMsgs_Ramp_DefineIncRamp(portHandle, parameters)

def G_Can_CyclicMsgs_Ramp_ResetRampSum(portHandle, id, signal):
    return _g_api_can.G_Can_CyclicMsgs_Ramp_ResetRampSum(portHandle, id, signal)

def G_Can_CyclicMsgs_Parity_Define(portHandle, id, mode, signal, mask):
    return _g_api_can.G_Can_CyclicMsgs_Parity_Define(portHandle, id, mode, signal, mask)

def G_Can_CyclicMsgs_Parity_Delete(portHandle, id, signal):
    return _g_api_can.G_Can_CyclicMsgs_Parity_Delete(portHandle, id, signal)

def G_Can_CyclicMsgs_Checksum_Define(portHandle, mode, id, signal, mask):
    return _g_api_can.G_Can_CyclicMsgs_Checksum_Define(portHandle, mode, id, signal, mask)

def G_Can_CyclicMsgs_Checksum_Define_XorWithUserBytes(portHandle, id, signal, mask, numberOfBytes, bytes):
    return _g_api_can.G_Can_CyclicMsgs_Checksum_Define_XorWithUserBytes(portHandle, id, signal, mask, numberOfBytes, bytes)
class G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Order = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_Order_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_Order_set)
    NumberOfUserBytesBefore = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_NumberOfUserBytesBefore_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_NumberOfUserBytesBefore_set)
    NumberOfUserBytesAfter = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_NumberOfUserBytesAfter_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_NumberOfUserBytesAfter_set)
    reserved = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_reserved_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_reserved_set)
    Polynomial = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_Polynomial_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_Polynomial_set)
    InitialValue = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_InitialValue_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_InitialValue_set)
    FinalXorValue = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_FinalXorValue_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_FinalXorValue_set)
    UserBytesBefore = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_UserBytesBefore_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_UserBytesBefore_set)
    UserBytesAfter = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_UserBytesAfter_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_UserBytesAfter_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t

# Register G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t_swigregister(G_Can_CyclicMsgs_Checksum_Define_GeneralCrc_Parameters_t)


def G_Can_CyclicMsgs_Checksum_Define_GeneralCrcWithUserBytes(portHandle, id, signal, mask, parameters):
    return _g_api_can.G_Can_CyclicMsgs_Checksum_Define_GeneralCrcWithUserBytes(portHandle, id, signal, mask, parameters)
class G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Order = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_Order_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_Order_set)
    DataArray_Size = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_DataArray_Size_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_DataArray_Size_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_reserved1_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_reserved2_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_reserved2_set)
    Polynomial = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_Polynomial_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_Polynomial_set)
    InitialValue = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_InitialValue_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_InitialValue_set)
    FinalXorValue = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_FinalXorValue_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_FinalXorValue_set)
    DataArray_IndexSignal = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_DataArray_IndexSignal_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_DataArray_IndexSignal_set)
    DataArray = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_DataArray_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_DataArray_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t

# Register G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t_swigregister(G_Can_CyclicMsgs_Checksum_Define_Custom12_Parameters_t)


def G_Can_CyclicMsgs_Checksum_Define_Custom12(portHandle, id, signal, mask, parameters):
    return _g_api_can.G_Can_CyclicMsgs_Checksum_Define_Custom12(portHandle, id, signal, mask, parameters)
class G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InputSignal = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_InputSignal_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_InputSignal_set)
    InitialValue = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_InitialValue_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_InitialValue_set)
    FinalXorValue = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_FinalXorValue_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_FinalXorValue_set)
    InputSignalShiftLeft = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_InputSignalShiftLeft_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_InputSignalShiftLeft_set)
    reserved = property(_g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_reserved_get, _g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_reserved_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t

# Register G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t_swigregister(G_Can_CyclicMsgs_Checksum_Define_AddBytes_Parameters_t)


def G_Can_CyclicMsgs_Checksum_Define_AddBytes(portHandle, id, signal, mask, parameters):
    return _g_api_can.G_Can_CyclicMsgs_Checksum_Define_AddBytes(portHandle, id, signal, mask, parameters)

def G_Can_CyclicMsgs_Checksum_Delete(portHandle, id, signal):
    return _g_api_can.G_Can_CyclicMsgs_Checksum_Delete(portHandle, id, signal)
class G_Can_CyclicMsgs_Property_SetById_Cmd_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CanId = property(_g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_CanId_get, _g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_CanId_set)
    PropertyId = property(_g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_PropertyId_get, _g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_PropertyId_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_reserved1_get, _g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_reserved2_get, _g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_reserved2_set)
    PropertyValue = property(_g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_PropertyValue_get, _g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_PropertyValue_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Property_SetById_Cmd_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Property_SetById_Cmd_t

# Register G_Can_CyclicMsgs_Property_SetById_Cmd_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Property_SetById_Cmd_t_swigregister(G_Can_CyclicMsgs_Property_SetById_Cmd_t)


def G_Can_CyclicMsgs_Property_SetById(portHandle, cmd):
    return _g_api_can.G_Can_CyclicMsgs_Property_SetById(portHandle, cmd)
class G_Can_CyclicMsgs_Property_GetById_Cmd_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CanId = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_CanId_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_CanId_set)
    PropertyId = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_PropertyId_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_PropertyId_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_reserved1_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_reserved2_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Property_GetById_Cmd_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Property_GetById_Cmd_t

# Register G_Can_CyclicMsgs_Property_GetById_Cmd_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Property_GetById_Cmd_t_swigregister(G_Can_CyclicMsgs_Property_GetById_Cmd_t)

class G_Can_CyclicMsgs_Property_GetById_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CanId = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_CanId_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_CanId_set)
    PropertyId = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_PropertyId_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_PropertyId_set)
    reserved1 = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_reserved1_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_reserved2_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_reserved2_set)
    PropertyValue = property(_g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_PropertyValue_get, _g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_PropertyValue_set)

    def __init__(self):
        _g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_swiginit(self, _g_api_can.new_G_Can_CyclicMsgs_Property_GetById_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CyclicMsgs_Property_GetById_Rsp_t

# Register G_Can_CyclicMsgs_Property_GetById_Rsp_t in _g_api_can:
_g_api_can.G_Can_CyclicMsgs_Property_GetById_Rsp_t_swigregister(G_Can_CyclicMsgs_Property_GetById_Rsp_t)


def G_Can_CyclicMsgs_Property_GetById(portHandle, cmd):
    return _g_api_can.G_Can_CyclicMsgs_Property_GetById(portHandle, cmd)

def G_Can_Monitor_DefineFilter(portHandle, mode, startId, endId):
    return _g_api_can.G_Can_Monitor_DefineFilter(portHandle, mode, startId, endId)

def G_Can_Monitor_BufferMode_Start(portHandle, mode, bufferSize):
    return _g_api_can.G_Can_Monitor_BufferMode_Start(portHandle, mode, bufferSize)

def G_Can_Monitor_BufferMode_Start2(portHandle, cmdFlags, numberOfItems):
    return _g_api_can.G_Can_Monitor_BufferMode_Start2(portHandle, cmdFlags, numberOfItems)

def G_Can_Monitor_BufferMode_Stop(portHandle):
    return _g_api_can.G_Can_Monitor_BufferMode_Stop(portHandle)
class G_Can_Monitor_BufferItem_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Timestamp = property(_g_api_can.G_Can_Monitor_BufferItem_t_Timestamp_get, _g_api_can.G_Can_Monitor_BufferItem_t_Timestamp_set)
    Id = property(_g_api_can.G_Can_Monitor_BufferItem_t_Id_get, _g_api_can.G_Can_Monitor_BufferItem_t_Id_set)
    Flags = property(_g_api_can.G_Can_Monitor_BufferItem_t_Flags_get, _g_api_can.G_Can_Monitor_BufferItem_t_Flags_set)
    Dlc = property(_g_api_can.G_Can_Monitor_BufferItem_t_Dlc_get, _g_api_can.G_Can_Monitor_BufferItem_t_Dlc_set)
    DataLength = property(_g_api_can.G_Can_Monitor_BufferItem_t_DataLength_get, _g_api_can.G_Can_Monitor_BufferItem_t_DataLength_set)
    Data = property(_g_api_can.G_Can_Monitor_BufferItem_t_Data_get, _g_api_can.G_Can_Monitor_BufferItem_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Monitor_BufferItem_t_swiginit(self, _g_api_can.new_G_Can_Monitor_BufferItem_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Monitor_BufferItem_t

# Register G_Can_Monitor_BufferItem_t in _g_api_can:
_g_api_can.G_Can_Monitor_BufferItem_t_swigregister(G_Can_Monitor_BufferItem_t)


def G_Can_Monitor_BufferMode_GetItems(portHandle, bufferSize, numberOfItems):
    return _g_api_can.G_Can_Monitor_BufferMode_GetItems(portHandle, bufferSize, numberOfItems)
class G_Can_Monitor_BufferItem_Large_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Timestamp = property(_g_api_can.G_Can_Monitor_BufferItem_Large_t_Timestamp_get, _g_api_can.G_Can_Monitor_BufferItem_Large_t_Timestamp_set)
    Id = property(_g_api_can.G_Can_Monitor_BufferItem_Large_t_Id_get, _g_api_can.G_Can_Monitor_BufferItem_Large_t_Id_set)
    Flags = property(_g_api_can.G_Can_Monitor_BufferItem_Large_t_Flags_get, _g_api_can.G_Can_Monitor_BufferItem_Large_t_Flags_set)
    reserved = property(_g_api_can.G_Can_Monitor_BufferItem_Large_t_reserved_get, _g_api_can.G_Can_Monitor_BufferItem_Large_t_reserved_set)
    Dlc = property(_g_api_can.G_Can_Monitor_BufferItem_Large_t_Dlc_get, _g_api_can.G_Can_Monitor_BufferItem_Large_t_Dlc_set)
    DataLength = property(_g_api_can.G_Can_Monitor_BufferItem_Large_t_DataLength_get, _g_api_can.G_Can_Monitor_BufferItem_Large_t_DataLength_set)
    Data = property(_g_api_can.G_Can_Monitor_BufferItem_Large_t_Data_get, _g_api_can.G_Can_Monitor_BufferItem_Large_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Monitor_BufferItem_Large_t_swiginit(self, _g_api_can.new_G_Can_Monitor_BufferItem_Large_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Monitor_BufferItem_Large_t

# Register G_Can_Monitor_BufferItem_Large_t in _g_api_can:
_g_api_can.G_Can_Monitor_BufferItem_Large_t_swigregister(G_Can_Monitor_BufferItem_Large_t)


def G_Can_Monitor_BufferMode_GetItems_Large(portHandle, rspFlags, numberOfItems):
    return _g_api_can.G_Can_Monitor_BufferMode_GetItems_Large(portHandle, rspFlags, numberOfItems)

def G_Can_Monitor_BufferMode_Async_Start(portHandle, mode, callback):
    return _g_api_can.G_Can_Monitor_BufferMode_Async_Start(portHandle, mode, callback)

def G_Can_Monitor_BufferMode_Async_Stop(portHandle):
    return _g_api_can.G_Can_Monitor_BufferMode_Async_Stop(portHandle)

def G_Can_Monitor_BufferMode_EnableEvent(portHandle, eventHandle):
    return _g_api_can.G_Can_Monitor_BufferMode_EnableEvent(portHandle, eventHandle)

def G_Can_Monitor_BufferMode_DisableEvent(portHandle):
    return _g_api_can.G_Can_Monitor_BufferMode_DisableEvent(portHandle)

def G_Can_Monitor_ListMode_Start(portHandle):
    return _g_api_can.G_Can_Monitor_ListMode_Start(portHandle)

def G_Can_Monitor_ListMode_Stop(portHandle):
    return _g_api_can.G_Can_Monitor_ListMode_Stop(portHandle)

def G_Can_Monitor_ListMode_GetItem(portHandle, id, timestamp, msgCount, rspFlags, dlc, data):
    return _g_api_can.G_Can_Monitor_ListMode_GetItem(portHandle, id, timestamp, msgCount, rspFlags, dlc, data)

def G_Can_Monitor_ListMode_GetItem_Async_AddCallback(portHandle, callback):
    return _g_api_can.G_Can_Monitor_ListMode_GetItem_Async_AddCallback(portHandle, callback)

def G_Can_Monitor_ListMode_GetItem_Async_RemoveCallback(portHandle):
    return _g_api_can.G_Can_Monitor_ListMode_GetItem_Async_RemoveCallback(portHandle)

def G_Can_Monitor_ListMode_GetItem_Async(portHandle, id):
    return _g_api_can.G_Can_Monitor_ListMode_GetItem_Async(portHandle, id)

def G_Can_Monitor_WriteUserEvent(portHandle, userEvent, length, data):
    return _g_api_can.G_Can_Monitor_WriteUserEvent(portHandle, userEvent, length, data)

def G_Can_Monitor_MonitorTime_Get(portHandle, rspFlags, startTime, currentTime):
    return _g_api_can.G_Can_Monitor_MonitorTime_Get(portHandle, rspFlags, startTime, currentTime)

def G_Can_Tp_GetChannel(portHandle, channel):
    return _g_api_can.G_Can_Tp_GetChannel(portHandle, channel)

def G_Can_Tp_GetChannel_Async_AddCallback(portHandle, callback):
    return _g_api_can.G_Can_Tp_GetChannel_Async_AddCallback(portHandle, callback)

def G_Can_Tp_GetChannel_Async_RemoveCallback(portHandle):
    return _g_api_can.G_Can_Tp_GetChannel_Async_RemoveCallback(portHandle)

def G_Can_Tp_GetChannel_Async(portHandle):
    return _g_api_can.G_Can_Tp_GetChannel_Async(portHandle)

def G_Can_Tp_FreeChannel(portHandle, channel):
    return _g_api_can.G_Can_Tp_FreeChannel(portHandle, channel)
class G_Can_Tp_Config_GmLan_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    USDT = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_get)
    UUDT = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_UUDT_get)

    def __init__(self):
        _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Tp_Config_GmLan_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tp_Config_GmLan_Parameters_t

# Register G_Can_Tp_Config_GmLan_Parameters_t in _g_api_can:
_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_swigregister(G_Can_Tp_Config_GmLan_Parameters_t)

class G_Can_Tp_Config_GmLan_Parameters_t_UUDT(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ResponseId = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_UUDT_ResponseId_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_UUDT_ResponseId_set)

    def __init__(self):
        _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_UUDT_swiginit(self, _g_api_can.new_G_Can_Tp_Config_GmLan_Parameters_t_UUDT())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tp_Config_GmLan_Parameters_t_UUDT

# Register G_Can_Tp_Config_GmLan_Parameters_t_UUDT in _g_api_can:
_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_UUDT_swigregister(G_Can_Tp_Config_GmLan_Parameters_t_UUDT)

class G_Can_Tp_Config_GmLan_Parameters_t_USDT(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PhysicalSourceAddress = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalSourceAddress_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalSourceAddress_set)
    PhysicalTargetAddress = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalTargetAddress_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalTargetAddress_set)
    FunctionalSourceAddress = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_FunctionalSourceAddress_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_FunctionalSourceAddress_set)
    FunctionalTargetAddress = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_FunctionalTargetAddress_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_FunctionalTargetAddress_set)
    PhysicalRequestId = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalRequestId_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalRequestId_set)
    PhysicalResponseId = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalResponseId_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalResponseId_set)
    AllNodeFunctionalRequestId = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_AllNodeFunctionalRequestId_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_AllNodeFunctionalRequestId_set)
    PhysicalAddressingFormat = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalAddressingFormat_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_PhysicalAddressingFormat_set)
    FunctionalAddressingFormat = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_FunctionalAddressingFormat_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_FunctionalAddressingFormat_set)
    BlockSize = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_BlockSize_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_BlockSize_set)
    SeparationTime = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_SeparationTime_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_SeparationTime_set)
    Flags = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_Flags_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_Flags_set)
    OwnSeparationTime = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_OwnSeparationTime_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_OwnSeparationTime_set)
    reserved1 = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_reserved1_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_reserved2_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_reserved3_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_reserved3_set)
    TimeoutAs = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_TimeoutAs_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_TimeoutAs_set)
    TimeoutAr = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_TimeoutAr_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_TimeoutAr_set)
    TimeoutBs = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_TimeoutBs_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_TimeoutBs_set)
    TimeoutCr = property(_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_TimeoutCr_get, _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_TimeoutCr_set)

    def __init__(self):
        _g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_swiginit(self, _g_api_can.new_G_Can_Tp_Config_GmLan_Parameters_t_USDT())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tp_Config_GmLan_Parameters_t_USDT

# Register G_Can_Tp_Config_GmLan_Parameters_t_USDT in _g_api_can:
_g_api_can.G_Can_Tp_Config_GmLan_Parameters_t_USDT_swigregister(G_Can_Tp_Config_GmLan_Parameters_t_USDT)


def G_Can_Tp_Config_GmLan(portHandle, channel, gmLanParameters):
    return _g_api_can.G_Can_Tp_Config_GmLan(portHandle, channel, gmLanParameters)
class G_Can_Tp_Config_IsoTp_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PhysicalSourceAddress = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalSourceAddress_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalSourceAddress_set)
    PhysicalTargetAddress = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalTargetAddress_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalTargetAddress_set)
    FunctionalSourceAddress = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalSourceAddress_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalSourceAddress_set)
    FunctionalTargetAddress = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalTargetAddress_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalTargetAddress_set)
    PhysicalSourceId = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalSourceId_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalSourceId_set)
    PhysicalTargetId = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalTargetId_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalTargetId_set)
    FunctionalSourceId = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalSourceId_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalSourceId_set)
    FunctionalTargetId = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalTargetId_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalTargetId_set)
    PhysicalAddressingFormat = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalAddressingFormat_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalAddressingFormat_set)
    FunctionalAddressingFormat = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalAddressingFormat_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalAddressingFormat_set)
    BlockSize = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_BlockSize_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_BlockSize_set)
    SeparationTime = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_SeparationTime_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_SeparationTime_set)
    Flags = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_Flags_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_Flags_set)
    OwnSeparationTime = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_OwnSeparationTime_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_OwnSeparationTime_set)
    reserved1 = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_reserved1_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_reserved2_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_reserved3_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_reserved3_set)
    TimeoutAs = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeoutAs_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeoutAs_set)
    TimeoutAr = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeoutAr_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeoutAr_set)
    TimeoutBs = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeoutBs_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeoutBs_set)
    TimeoutCr = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeoutCr_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeoutCr_set)
    TimeBrBetweenFfAndFc = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeBrBetweenFfAndFc_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeBrBetweenFfAndFc_set)
    TimeBrBetweenCfAndFc = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeBrBetweenCfAndFc_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_TimeBrBetweenCfAndFc_set)
    PaddingByte = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PaddingByte_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PaddingByte_set)
    PhysicalTxDl = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalTxDl_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_PhysicalTxDl_set)
    FunctionalTxDl = property(_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalTxDl_get, _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_FunctionalTxDl_set)

    def __init__(self):
        _g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Tp_Config_IsoTp_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tp_Config_IsoTp_Parameters_t

# Register G_Can_Tp_Config_IsoTp_Parameters_t in _g_api_can:
_g_api_can.G_Can_Tp_Config_IsoTp_Parameters_t_swigregister(G_Can_Tp_Config_IsoTp_Parameters_t)


def G_Can_Tp_Config_IsoTp(portHandle, channel, isoTpParameters):
    return _g_api_can.G_Can_Tp_Config_IsoTp(portHandle, channel, isoTpParameters)
class G_Can_Tp_Config_J1939_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SourceAddress = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_SourceAddress_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_SourceAddress_set)
    DestinationAddress = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_DestinationAddress_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_DestinationAddress_set)
    reserved1 = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_reserved1_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_reserved2_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_reserved2_set)
    TxTimeout = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TxTimeout_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TxTimeout_set)
    RxTimeout = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_RxTimeout_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_RxTimeout_set)
    DelayTime = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_DelayTime_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_DelayTime_set)
    TimeoutTr = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutTr_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutTr_set)
    TimeoutTh = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutTh_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutTh_set)
    TimeoutT1 = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutT1_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutT1_set)
    TimeoutT2 = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutT2_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutT2_set)
    TimeoutT3 = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutT3_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutT3_set)
    TimeoutT4 = property(_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutT4_get, _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_TimeoutT4_set)

    def __init__(self):
        _g_api_can.G_Can_Tp_Config_J1939_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Tp_Config_J1939_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tp_Config_J1939_Parameters_t

# Register G_Can_Tp_Config_J1939_Parameters_t in _g_api_can:
_g_api_can.G_Can_Tp_Config_J1939_Parameters_t_swigregister(G_Can_Tp_Config_J1939_Parameters_t)


def G_Can_Tp_Config_J1939(portHandle, channel, j1939Parameters):
    return _g_api_can.G_Can_Tp_Config_J1939(portHandle, channel, j1939Parameters)
class G_Can_Tp_Config_Tp_1_6_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SourceAddress = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_SourceAddress_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_SourceAddress_set)
    TargetAddress = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TargetAddress_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TargetAddress_set)
    BlockSize = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_BlockSize_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_BlockSize_set)
    reserved = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_reserved_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_reserved_set)
    SourceSetupId = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_SourceSetupId_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_SourceSetupId_set)
    TargetSetupId = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TargetSetupId_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TargetSetupId_set)
    SourceChannelId = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_SourceChannelId_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_SourceChannelId_set)
    TargetChannelId = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TargetChannelId_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TargetChannelId_set)
    TimeoutT1 = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TimeoutT1_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TimeoutT1_set)
    TimeoutT2 = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TimeoutT2_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TimeoutT2_set)
    TimeoutT3 = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TimeoutT3_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TimeoutT3_set)
    TimeoutT4 = property(_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TimeoutT4_get, _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_TimeoutT4_set)

    def __init__(self):
        _g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Tp_Config_Tp_1_6_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tp_Config_Tp_1_6_Parameters_t

# Register G_Can_Tp_Config_Tp_1_6_Parameters_t in _g_api_can:
_g_api_can.G_Can_Tp_Config_Tp_1_6_Parameters_t_swigregister(G_Can_Tp_Config_Tp_1_6_Parameters_t)


def G_Can_Tp_Config_Tp_1_6(portHandle, channel, tp_1_6Parameters):
    return _g_api_can.G_Can_Tp_Config_Tp_1_6(portHandle, channel, tp_1_6Parameters)
class G_Can_Tp_Config_Tp_2_0_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SourceAddress = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_SourceAddress_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_SourceAddress_set)
    TargetAddress = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TargetAddress_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TargetAddress_set)
    BlockSize = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_BlockSize_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_BlockSize_set)
    ApplicationType = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_ApplicationType_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_ApplicationType_set)
    SourceSetupId = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_SourceSetupId_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_SourceSetupId_set)
    TargetSetupId = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TargetSetupId_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TargetSetupId_set)
    SourceChannelId = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_SourceChannelId_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_SourceChannelId_set)
    TargetChannelId = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TargetChannelId_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TargetChannelId_set)
    TimeoutT1 = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TimeoutT1_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TimeoutT1_set)
    TimeoutT3 = property(_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TimeoutT3_get, _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_TimeoutT3_set)

    def __init__(self):
        _g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Tp_Config_Tp_2_0_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tp_Config_Tp_2_0_Parameters_t

# Register G_Can_Tp_Config_Tp_2_0_Parameters_t in _g_api_can:
_g_api_can.G_Can_Tp_Config_Tp_2_0_Parameters_t_swigregister(G_Can_Tp_Config_Tp_2_0_Parameters_t)


def G_Can_Tp_Config_Tp_2_0(portHandle, channel, tp_2_0Parameters):
    return _g_api_can.G_Can_Tp_Config_Tp_2_0(portHandle, channel, tp_2_0Parameters)
G_CAN__TP__ISO_15765__ADDRESSING_FORMAT__NORMAL = _g_api_can.G_CAN__TP__ISO_15765__ADDRESSING_FORMAT__NORMAL
G_CAN__TP__ISO_15765__ADDRESSING_FORMAT__EXTENDED = _g_api_can.G_CAN__TP__ISO_15765__ADDRESSING_FORMAT__EXTENDED
G_CAN__TP__ISO_15765__ADDRESSING_FORMAT__MIXED = _g_api_can.G_CAN__TP__ISO_15765__ADDRESSING_FORMAT__MIXED
G_CAN__TP__ISO_15765__ADDRESSING_FORMAT__UNKNOWN_LAST = _g_api_can.G_CAN__TP__ISO_15765__ADDRESSING_FORMAT__UNKNOWN_LAST
class G_Can_Tp_Config_Iso15765_Cmd_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_Flags_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_Flags_set)
    LocalAddress_Physical = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_LocalAddress_Physical_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_LocalAddress_Physical_set)
    RemoteAddress_Physical = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_RemoteAddress_Physical_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_RemoteAddress_Physical_set)
    LocalAddress_Functional = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_LocalAddress_Functional_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_LocalAddress_Functional_set)
    RemoteAddress_Functional = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_RemoteAddress_Functional_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_RemoteAddress_Functional_set)
    LocalCanId_Physical = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_LocalCanId_Physical_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_LocalCanId_Physical_set)
    RemoteCanId_Physical = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_RemoteCanId_Physical_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_RemoteCanId_Physical_set)
    LocalCanId_Functional = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_LocalCanId_Functional_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_LocalCanId_Functional_set)
    RemoteCanId_Functional = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_RemoteCanId_Functional_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_RemoteCanId_Functional_set)
    AddressingFormat_Physical = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_AddressingFormat_Physical_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_AddressingFormat_Physical_set)
    AddressingFormat_Functional = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_AddressingFormat_Functional_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_AddressingFormat_Functional_set)
    BS = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_BS_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_BS_set)
    STmin = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_STmin_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_STmin_set)
    TimeoutAs = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeoutAs_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeoutAs_set)
    TimeoutAr = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeoutAr_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeoutAr_set)
    TimeoutBs = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeoutBs_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeoutBs_set)
    TimeoutCr = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeoutCr_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeoutCr_set)
    TimeBrBetweenFfAndFc = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeBrBetweenFfAndFc_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeBrBetweenFfAndFc_set)
    TimeBrBetweenCfAndFc = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeBrBetweenCfAndFc_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeBrBetweenCfAndFc_set)
    TimeCs = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeCs_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TimeCs_set)
    PaddingByte = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_PaddingByte_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_PaddingByte_set)
    TxDl_Physical = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TxDl_Physical_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TxDl_Physical_set)
    TxDl_Functional = property(_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TxDl_Functional_get, _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_TxDl_Functional_set)

    def __init__(self):
        _g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_swiginit(self, _g_api_can.new_G_Can_Tp_Config_Iso15765_Cmd_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tp_Config_Iso15765_Cmd_t

# Register G_Can_Tp_Config_Iso15765_Cmd_t in _g_api_can:
_g_api_can.G_Can_Tp_Config_Iso15765_Cmd_t_swigregister(G_Can_Tp_Config_Iso15765_Cmd_t)


def G_Can_Tp_Config_Iso15765(portHandle, channel, cmd):
    return _g_api_can.G_Can_Tp_Config_Iso15765(portHandle, channel, cmd)

def G_Can_Tp_Config_Off(portHandle, channel):
    return _g_api_can.G_Can_Tp_Config_Off(portHandle, channel)

def G_Can_Tp_Broadcast_StartTransmission(portHandle, channel, mode, data, dataLength):
    return _g_api_can.G_Can_Tp_Broadcast_StartTransmission(portHandle, channel, mode, data, dataLength)

def G_Can_Tp_Broadcast_StopTransmission(portHandle, channel):
    return _g_api_can.G_Can_Tp_Broadcast_StopTransmission(portHandle, channel)

def G_Can_Tp_Broadcast_GetData(portHandle, channel, responseData):
    return _g_api_can.G_Can_Tp_Broadcast_GetData(portHandle, channel, responseData)

def G_Can_Tp_Broadcast_GetData_Async_AddCallback(portHandle, channel, callback):
    return _g_api_can.G_Can_Tp_Broadcast_GetData_Async_AddCallback(portHandle, channel, callback)

def G_Can_Tp_Broadcast_GetData_Async_RemoveCallback(portHandle, channel):
    return _g_api_can.G_Can_Tp_Broadcast_GetData_Async_RemoveCallback(portHandle, channel)

def G_Can_Tp_Broadcast_GetData_Async(portHandle, channel):
    return _g_api_can.G_Can_Tp_Broadcast_GetData_Async(portHandle, channel)

def G_Can_Tp_SetMonitorFilter(portHandle, channel, mode):
    return _g_api_can.G_Can_Tp_SetMonitorFilter(portHandle, channel, mode)

def G_Can_Diag_GetState(portHandle, channel, cmdFlags):
    return _g_api_can.G_Can_Diag_GetState(portHandle, channel, cmdFlags)

def G_Can_Diag_GetState_Async_AddCallback(portHandle, channel, callback):
    return _g_api_can.G_Can_Diag_GetState_Async_AddCallback(portHandle, channel, callback)

def G_Can_Diag_GetState_Async_RemoveCallback(portHandle, channel):
    return _g_api_can.G_Can_Diag_GetState_Async_RemoveCallback(portHandle, channel)

def G_Can_Diag_GetState_Async(portHandle, channel, cmdFlags):
    return _g_api_can.G_Can_Diag_GetState_Async(portHandle, channel, cmdFlags)
class G_Can_Diag_Config_GmLan_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    P2max = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_P2max_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_P2max_set)
    P3max = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_P3max_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_P3max_set)
    Repetitions = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_Repetitions_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_Repetitions_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_reserved1_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_reserved2_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_reserved2_set)
    TesterPresent = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_get)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Diag_Config_GmLan_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_GmLan_Parameters_t

# Register G_Can_Diag_Config_GmLan_Parameters_t in _g_api_can:
_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_swigregister(G_Can_Diag_Config_GmLan_Parameters_t)

class G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_Mode_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_Mode_set)
    ResponseMode = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_ResponseMode_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_ResponseMode_set)
    CycleTime = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_CycleTime_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_CycleTime_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_reserved1_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_reserved2_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_reserved3_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_reserved3_set)
    DataLength = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_DataLength_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_DataLength_set)
    Data = property(_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_Data_get, _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_swiginit(self, _g_api_can.new_G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent

# Register G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent in _g_api_can:
_g_api_can.G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent_swigregister(G_Can_Diag_Config_GmLan_Parameters_t_TesterPresent)


def G_Can_Diag_Config_GmLan(portHandle, channel, mode, globalTimeout, cmdFlags, gmLanParameters):
    return _g_api_can.G_Can_Diag_Config_GmLan(portHandle, channel, mode, globalTimeout, cmdFlags, gmLanParameters)
class G_Can_Diag_Config_J1939_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    T1Timeout = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_T1Timeout_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_T1Timeout_set)
    T2Timeout = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_T2Timeout_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_T2Timeout_set)
    Repetitions = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_Repetitions_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_Repetitions_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_reserved1_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_reserved2_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_reserved2_set)
    TesterPresent = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_get)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Diag_Config_J1939_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_J1939_Parameters_t

# Register G_Can_Diag_Config_J1939_Parameters_t in _g_api_can:
_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_swigregister(G_Can_Diag_Config_J1939_Parameters_t)

class G_Can_Diag_Config_J1939_Parameters_t_TesterPresent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_Mode_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_Mode_set)
    ResponseMode = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_ResponseMode_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_ResponseMode_set)
    DataLength = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_DataLength_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_DataLength_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_reserved1_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_reserved1_set)
    CycleTime = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_CycleTime_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_CycleTime_set)
    Data = property(_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_Data_get, _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_swiginit(self, _g_api_can.new_G_Can_Diag_Config_J1939_Parameters_t_TesterPresent())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_J1939_Parameters_t_TesterPresent

# Register G_Can_Diag_Config_J1939_Parameters_t_TesterPresent in _g_api_can:
_g_api_can.G_Can_Diag_Config_J1939_Parameters_t_TesterPresent_swigregister(G_Can_Diag_Config_J1939_Parameters_t_TesterPresent)


def G_Can_Diag_Config_J1939(portHandle, channel, mode, globalTimeout, cmdFlags, j1939Parameters):
    return _g_api_can.G_Can_Diag_Config_J1939(portHandle, channel, mode, globalTimeout, cmdFlags, j1939Parameters)
class G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    P2max = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_P2max_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_P2max_set)
    P3max = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_P3max_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_P3max_set)
    Repetitions = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_Repetitions_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_Repetitions_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_reserved1_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_reserved2_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_reserved2_set)
    TesterPresent = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_get)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t

# Register G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t in _g_api_can:
_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_swigregister(G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t)

class G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_Mode_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_Mode_set)
    ResponseMode = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_ResponseMode_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_ResponseMode_set)
    CycleTime = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_CycleTime_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_CycleTime_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_reserved1_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_reserved2_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_reserved3_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_reserved3_set)
    DataLength = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_DataLength_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_DataLength_set)
    Data = property(_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_Data_get, _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_swiginit(self, _g_api_can.new_G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent

# Register G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent in _g_api_can:
_g_api_can.G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent_swigregister(G_Can_Diag_Config_Kw2000_IsoTp_Parameters_t_TesterPresent)


def G_Can_Diag_Config_Kw2000_IsoTp(portHandle, channel, mode, globalTimeout, cmdFlags, kw2000_IsoTpParameters):
    return _g_api_can.G_Can_Diag_Config_Kw2000_IsoTp(portHandle, channel, mode, globalTimeout, cmdFlags, kw2000_IsoTpParameters)
class G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    P2max = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_P2max_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_P2max_set)
    Repetitions = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_Repetitions_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_Repetitions_set)
    AddressWord = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_AddressWord_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_AddressWord_set)
    TargetAddress = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_TargetAddress_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_TargetAddress_set)
    SourceAddress = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_SourceAddress_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_SourceAddress_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_reserved1_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_reserved1_set)
    TesterPresentCycle = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_TesterPresentCycle_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_TesterPresentCycle_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_reserved2_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_reserved3_get, _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_reserved3_set)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t

# Register G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t in _g_api_can:
_g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t_swigregister(G_Can_Diag_Config_Kw2000_Tp_1_6_Parameters_t)


def G_Can_Diag_Config_Kw2000_Tp_1_6(portHandle, channel, mode, globalTimeout, cmdFlags, kw2000_Tp_1_6Parameters):
    return _g_api_can.G_Can_Diag_Config_Kw2000_Tp_1_6(portHandle, channel, mode, globalTimeout, cmdFlags, kw2000_Tp_1_6Parameters)

def G_Can_Diag_Config_Kw2000_Tp_2_0(portHandle, channel, mode, globalTimeout, cmdFlags, p2max, repetitions):
    return _g_api_can.G_Can_Diag_Config_Kw2000_Tp_2_0(portHandle, channel, mode, globalTimeout, cmdFlags, p2max, repetitions)
class G_Can_Diag_Config_Uds_IsoTp_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    P2max = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_P2max_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_P2max_set)
    P3max = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_P3max_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_P3max_set)
    Repetitions = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_Repetitions_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_Repetitions_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_reserved1_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_reserved2_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_reserved2_set)
    TesterPresent = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_get)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Diag_Config_Uds_IsoTp_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_Uds_IsoTp_Parameters_t

# Register G_Can_Diag_Config_Uds_IsoTp_Parameters_t in _g_api_can:
_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_swigregister(G_Can_Diag_Config_Uds_IsoTp_Parameters_t)

class G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_Mode_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_Mode_set)
    ResponseMode = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_ResponseMode_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_ResponseMode_set)
    CycleTime = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_CycleTime_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_CycleTime_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_reserved1_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_reserved2_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_reserved3_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_reserved3_set)
    DataLength = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_DataLength_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_DataLength_set)
    Data = property(_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_Data_get, _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_swiginit(self, _g_api_can.new_G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent

# Register G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent in _g_api_can:
_g_api_can.G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent_swigregister(G_Can_Diag_Config_Uds_IsoTp_Parameters_t_TesterPresent)


def G_Can_Diag_Config_Uds_IsoTp(portHandle, channel, mode, globalTimeout, cmdFlags, uds_IsoTpParameters):
    return _g_api_can.G_Can_Diag_Config_Uds_IsoTp(portHandle, channel, mode, globalTimeout, cmdFlags, uds_IsoTpParameters)
class G_Can_Diag_Config_Uds_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ResponseTimeout = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_ResponseTimeout_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_ResponseTimeout_set)
    ResponseTimeout_78 = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_ResponseTimeout_78_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_ResponseTimeout_78_set)
    Repetitions = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_Repetitions_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_Repetitions_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_reserved1_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_reserved2_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_reserved2_set)
    TesterPresent = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_get)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Diag_Config_Uds_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_Uds_Parameters_t

# Register G_Can_Diag_Config_Uds_Parameters_t in _g_api_can:
_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_swigregister(G_Can_Diag_Config_Uds_Parameters_t)

class G_Can_Diag_Config_Uds_Parameters_t_TesterPresent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_Mode_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_Mode_set)
    ResponseMode = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_ResponseMode_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_ResponseMode_set)
    CycleTime = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_CycleTime_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_CycleTime_set)
    reserved1 = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_reserved1_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_reserved2_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_reserved3_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_reserved3_set)
    DataLength = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_DataLength_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_DataLength_set)
    Data = property(_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_Data_get, _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_swiginit(self, _g_api_can.new_G_Can_Diag_Config_Uds_Parameters_t_TesterPresent())
    __swig_destroy__ = _g_api_can.delete_G_Can_Diag_Config_Uds_Parameters_t_TesterPresent

# Register G_Can_Diag_Config_Uds_Parameters_t_TesterPresent in _g_api_can:
_g_api_can.G_Can_Diag_Config_Uds_Parameters_t_TesterPresent_swigregister(G_Can_Diag_Config_Uds_Parameters_t_TesterPresent)


def G_Can_Diag_Config_Uds(portHandle, channel, mode, globalTimeout, cmdFlags, uds_Parameters):
    return _g_api_can.G_Can_Diag_Config_Uds(portHandle, channel, mode, globalTimeout, cmdFlags, uds_Parameters)

def G_Can_Diag_Config_Off(portHandle, channel):
    return _g_api_can.G_Can_Diag_Config_Off(portHandle, channel)

def G_Can_Nm_Config_Off(portHandle):
    return _g_api_can.G_Can_Nm_Config_Off(portHandle)
class G_Can_Nm_Config_Osek_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CmdFlags = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_CmdFlags_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_CmdFlags_set)
    Type = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Type_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Type_set)
    Dlc = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Dlc_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Dlc_set)
    DestinationByteOffset = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_DestinationByteOffset_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_DestinationByteOffset_set)
    reserved = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_reserved_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_reserved_set)
    Range = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_get)
    ProtocolBits = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_get)
    RingStableBit = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_get)
    Times = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_get)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Osek_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Osek_Parameters_t

# Register G_Can_Nm_Config_Osek_Parameters_t in _g_api_can:
_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_swigregister(G_Can_Nm_Config_Osek_Parameters_t)

class G_Can_Nm_Config_Osek_Parameters_t_Times(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Typ = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_Typ_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_Typ_set)
    Max = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_Max_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_Max_set)
    Error = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_Error_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_Error_set)
    WaitBusSleep = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_WaitBusSleep_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_WaitBusSleep_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Osek_Parameters_t_Times())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Osek_Parameters_t_Times

# Register G_Can_Nm_Config_Osek_Parameters_t_Times in _g_api_can:
_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Times_swigregister(G_Can_Nm_Config_Osek_Parameters_t_Times)

class G_Can_Nm_Config_Osek_Parameters_t_RingStableBit(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RingStableMask = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_RingStableMask_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_RingStableMask_set)
    RingStableCodeTrue = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_RingStableCodeTrue_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_RingStableCodeTrue_set)
    RingStableCodeFalse = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_RingStableCodeFalse_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_RingStableCodeFalse_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Osek_Parameters_t_RingStableBit())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Osek_Parameters_t_RingStableBit

# Register G_Can_Nm_Config_Osek_Parameters_t_RingStableBit in _g_api_can:
_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_RingStableBit_swigregister(G_Can_Nm_Config_Osek_Parameters_t_RingStableBit)

class G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MessageTypeMask = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_MessageTypeMask_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_MessageTypeMask_set)
    AliveCode = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_AliveCode_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_AliveCode_set)
    RingCode = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_RingCode_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_RingCode_set)
    LimpHomeCode = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_LimpHomeCode_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_LimpHomeCode_set)
    SleepIndMask = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepIndMask_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepIndMask_set)
    SleepIndCodeTrue = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepIndCodeTrue_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepIndCodeTrue_set)
    SleepIndCodeFalse = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepIndCodeFalse_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepIndCodeFalse_set)
    SleepAckMask = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepAckMask_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepAckMask_set)
    SleepAckCodeTrue = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepAckCodeTrue_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepAckCodeTrue_set)
    SleepAckCodeFalse = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepAckCodeFalse_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_SleepAckCodeFalse_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits

# Register G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits in _g_api_can:
_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits_swigregister(G_Can_Nm_Config_Osek_Parameters_t_ProtocolBits)

class G_Can_Nm_Config_Osek_Parameters_t_Range(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    IdBase = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_IdBase_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_IdBase_set)
    IdMask = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_IdMask_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_IdMask_set)
    NumberOfNodes = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_NumberOfNodes_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_NumberOfNodes_set)
    reserved1 = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_reserved1_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_reserved2_get, _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Osek_Parameters_t_Range())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Osek_Parameters_t_Range

# Register G_Can_Nm_Config_Osek_Parameters_t_Range in _g_api_can:
_g_api_can.G_Can_Nm_Config_Osek_Parameters_t_Range_swigregister(G_Can_Nm_Config_Osek_Parameters_t_Range)


def G_Can_Nm_Config_Osek(portHandle, parameters):
    return _g_api_can.G_Can_Nm_Config_Osek(portHandle, parameters)
class G_Can_Nm_Config_Autosar_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Type = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Type_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Type_set)
    reserved1 = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_reserved1_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_reserved2_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_reserved2_set)
    CmdFlags = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_CmdFlags_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_CmdFlags_set)
    Times = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_get)
    Range = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_get)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Autosar_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Autosar_Parameters_t

# Register G_Can_Nm_Config_Autosar_Parameters_t in _g_api_can:
_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_swigregister(G_Can_Nm_Config_Autosar_Parameters_t)

class G_Can_Nm_Config_Autosar_Parameters_t_Range(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    IdBase = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_IdBase_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_IdBase_set)
    NumberOfNodes = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_NumberOfNodes_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_NumberOfNodes_set)
    reserved1 = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_reserved1_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_reserved2_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Autosar_Parameters_t_Range())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Autosar_Parameters_t_Range

# Register G_Can_Nm_Config_Autosar_Parameters_t_Range in _g_api_can:
_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Range_swigregister(G_Can_Nm_Config_Autosar_Parameters_t_Range)

class G_Can_Nm_Config_Autosar_Parameters_t_Times(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    NmTimeout = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_NmTimeout_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_NmTimeout_set)
    WaitBusSleep = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_WaitBusSleep_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_WaitBusSleep_set)
    MsgCycle = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_MsgCycle_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_MsgCycle_set)
    RepeatMsg = property(_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_RepeatMsg_get, _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_RepeatMsg_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Autosar_Parameters_t_Times())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Autosar_Parameters_t_Times

# Register G_Can_Nm_Config_Autosar_Parameters_t_Times in _g_api_can:
_g_api_can.G_Can_Nm_Config_Autosar_Parameters_t_Times_swigregister(G_Can_Nm_Config_Autosar_Parameters_t_Times)


def G_Can_Nm_Config_Autosar(portHandle, parameters):
    return _g_api_can.G_Can_Nm_Config_Autosar(portHandle, parameters)
class G_Can_Nm_Config_Autosar_Global_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CmdFlags = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_CmdFlags_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_CmdFlags_set)
    Times = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_get)
    PduNidPosition = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduNidPosition_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduNidPosition_set)
    PduCbvPosition = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduCbvPosition_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduCbvPosition_set)
    PduStatePosition = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduStatePosition_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduStatePosition_set)
    PduLength = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduLength_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduLength_set)
    PduData = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduData_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_PduData_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Autosar_Global_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Autosar_Global_Parameters_t

# Register G_Can_Nm_Config_Autosar_Global_Parameters_t in _g_api_can:
_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_swigregister(G_Can_Nm_Config_Autosar_Global_Parameters_t)

class G_Can_Nm_Config_Autosar_Global_Parameters_t_Times(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    NmTimeout = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_NmTimeout_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_NmTimeout_set)
    WaitBusSleep = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_WaitBusSleep_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_WaitBusSleep_set)
    MsgCycle = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_MsgCycle_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_MsgCycle_set)
    RepeatMsg = property(_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_RepeatMsg_get, _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_RepeatMsg_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Autosar_Global_Parameters_t_Times())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Autosar_Global_Parameters_t_Times

# Register G_Can_Nm_Config_Autosar_Global_Parameters_t_Times in _g_api_can:
_g_api_can.G_Can_Nm_Config_Autosar_Global_Parameters_t_Times_swigregister(G_Can_Nm_Config_Autosar_Global_Parameters_t_Times)


def G_Can_Nm_Config_Autosar_Global(portHandle, parameters):
    return _g_api_can.G_Can_Nm_Config_Autosar_Global(portHandle, parameters)
class G_Can_Nm_Config_Autosar_Node_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CmdFlags = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_CmdFlags_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_CmdFlags_set)
    NodeId = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_NodeId_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_NodeId_set)
    PduLength = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduLength_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduLength_set)
    NumberOfImmediateNmTransmissions = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_NumberOfImmediateNmTransmissions_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_NumberOfImmediateNmTransmissions_set)
    reserved2 = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_reserved2_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_reserved2_set)
    MsgCycleOffset = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_MsgCycleOffset_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_MsgCycleOffset_set)
    MsgReducedTime = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_MsgReducedTime_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_MsgReducedTime_set)
    PduData = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData_get)
    ImmediateNmCycleTime = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_ImmediateNmCycleTime_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_ImmediateNmCycleTime_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Autosar_Node_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Autosar_Node_Parameters_t

# Register G_Can_Nm_Config_Autosar_Node_Parameters_t in _g_api_can:
_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_swigregister(G_Can_Nm_Config_Autosar_Node_Parameters_t)

class G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mask = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData_Mask_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData_Mask_set)
    Data = property(_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData_Data_get, _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData_swiginit(self, _g_api_can.new_G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData())
    __swig_destroy__ = _g_api_can.delete_G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData

# Register G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData in _g_api_can:
_g_api_can.G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData_swigregister(G_Can_Nm_Config_Autosar_Node_Parameters_t_PduData)


def G_Can_Nm_Config_Autosar_Node(portHandle, parameters):
    return _g_api_can.G_Can_Nm_Config_Autosar_Node(portHandle, parameters)

def G_Can_Nm_Autosar_Node_GetState(portHandle, nodeId):
    return _g_api_can.G_Can_Nm_Autosar_Node_GetState(portHandle, nodeId)

def G_Can_Nm_Autosar_RepeatMessageRequest(portHandle, nodeId):
    return _g_api_can.G_Can_Nm_Autosar_RepeatMessageRequest(portHandle, nodeId)

def G_Can_Nm_Autosar_RequestBusSynchronization(portHandle, nodeId):
    return _g_api_can.G_Can_Nm_Autosar_RequestBusSynchronization(portHandle, nodeId)

def G_Can_Nm_Config_SetData(portHandle, mask, data):
    return _g_api_can.G_Can_Nm_Config_SetData(portHandle, mask, data)

def G_Can_Nm_Nodes_Start(portHandle, numberOfNodes):
    return _g_api_can.G_Can_Nm_Nodes_Start(portHandle, numberOfNodes)

def G_Can_Nm_Nodes_Stop(portHandle, numberOfNodes):
    return _g_api_can.G_Can_Nm_Nodes_Stop(portHandle, numberOfNodes)

def G_Can_Nm_Group_Start(portHandle, group):
    return _g_api_can.G_Can_Nm_Group_Start(portHandle, group)

def G_Can_Nm_Group_Stop(portHandle, group):
    return _g_api_can.G_Can_Nm_Group_Stop(portHandle, group)

def G_Can_Nm_Nodes_GoToMode_Awake(portHandle, numberOfNodes):
    return _g_api_can.G_Can_Nm_Nodes_GoToMode_Awake(portHandle, numberOfNodes)

def G_Can_Nm_Nodes_GoToMode_BusSleep(portHandle, numberOfNodes):
    return _g_api_can.G_Can_Nm_Nodes_GoToMode_BusSleep(portHandle, numberOfNodes)

def G_Can_Nm_Group_GoToMode_Awake(portHandle, group):
    return _g_api_can.G_Can_Nm_Group_GoToMode_Awake(portHandle, group)

def G_Can_Nm_Group_GoToMode_BusSleep(portHandle, group):
    return _g_api_can.G_Can_Nm_Group_GoToMode_BusSleep(portHandle, group)

def G_Can_Nm_Nodes_ChangeGroup(portHandle, group, numberOfNodes):
    return _g_api_can.G_Can_Nm_Nodes_ChangeGroup(portHandle, group, numberOfNodes)
class G_Can_Tar_TxItem_Simple_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Delay = property(_g_api_can.G_Can_Tar_TxItem_Simple_t_Delay_get, _g_api_can.G_Can_Tar_TxItem_Simple_t_Delay_set)
    Flags = property(_g_api_can.G_Can_Tar_TxItem_Simple_t_Flags_get, _g_api_can.G_Can_Tar_TxItem_Simple_t_Flags_set)
    Dlc = property(_g_api_can.G_Can_Tar_TxItem_Simple_t_Dlc_get, _g_api_can.G_Can_Tar_TxItem_Simple_t_Dlc_set)
    Data = property(_g_api_can.G_Can_Tar_TxItem_Simple_t_Data_get, _g_api_can.G_Can_Tar_TxItem_Simple_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Tar_TxItem_Simple_t_swiginit(self, _g_api_can.new_G_Can_Tar_TxItem_Simple_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tar_TxItem_Simple_t

# Register G_Can_Tar_TxItem_Simple_t in _g_api_can:
_g_api_can.G_Can_Tar_TxItem_Simple_t_swigregister(G_Can_Tar_TxItem_Simple_t)

class G_Can_Tar_TxItem_Simple2_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Delay = property(_g_api_can.G_Can_Tar_TxItem_Simple2_t_Delay_get, _g_api_can.G_Can_Tar_TxItem_Simple2_t_Delay_set)
    Flags = property(_g_api_can.G_Can_Tar_TxItem_Simple2_t_Flags_get, _g_api_can.G_Can_Tar_TxItem_Simple2_t_Flags_set)
    Dlc = property(_g_api_can.G_Can_Tar_TxItem_Simple2_t_Dlc_get, _g_api_can.G_Can_Tar_TxItem_Simple2_t_Dlc_set)
    reserved1 = property(_g_api_can.G_Can_Tar_TxItem_Simple2_t_reserved1_get, _g_api_can.G_Can_Tar_TxItem_Simple2_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Tar_TxItem_Simple2_t_reserved2_get, _g_api_can.G_Can_Tar_TxItem_Simple2_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Tar_TxItem_Simple2_t_reserved3_get, _g_api_can.G_Can_Tar_TxItem_Simple2_t_reserved3_set)
    reserved4 = property(_g_api_can.G_Can_Tar_TxItem_Simple2_t_reserved4_get, _g_api_can.G_Can_Tar_TxItem_Simple2_t_reserved4_set)
    Data = property(_g_api_can.G_Can_Tar_TxItem_Simple2_t_Data_get, _g_api_can.G_Can_Tar_TxItem_Simple2_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Tar_TxItem_Simple2_t_swiginit(self, _g_api_can.new_G_Can_Tar_TxItem_Simple2_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tar_TxItem_Simple2_t

# Register G_Can_Tar_TxItem_Simple2_t in _g_api_can:
_g_api_can.G_Can_Tar_TxItem_Simple2_t_swigregister(G_Can_Tar_TxItem_Simple2_t)

class G_Can_Tar_TxItem_Standard_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_Tar_TxItem_Standard_t_Id_get, _g_api_can.G_Can_Tar_TxItem_Standard_t_Id_set)
    Delay = property(_g_api_can.G_Can_Tar_TxItem_Standard_t_Delay_get, _g_api_can.G_Can_Tar_TxItem_Standard_t_Delay_set)
    Flags = property(_g_api_can.G_Can_Tar_TxItem_Standard_t_Flags_get, _g_api_can.G_Can_Tar_TxItem_Standard_t_Flags_set)
    Dlc = property(_g_api_can.G_Can_Tar_TxItem_Standard_t_Dlc_get, _g_api_can.G_Can_Tar_TxItem_Standard_t_Dlc_set)
    Data = property(_g_api_can.G_Can_Tar_TxItem_Standard_t_Data_get, _g_api_can.G_Can_Tar_TxItem_Standard_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Tar_TxItem_Standard_t_swiginit(self, _g_api_can.new_G_Can_Tar_TxItem_Standard_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tar_TxItem_Standard_t

# Register G_Can_Tar_TxItem_Standard_t in _g_api_can:
_g_api_can.G_Can_Tar_TxItem_Standard_t_swigregister(G_Can_Tar_TxItem_Standard_t)

class G_Can_Tar_TxItem_Standard2_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Id = property(_g_api_can.G_Can_Tar_TxItem_Standard2_t_Id_get, _g_api_can.G_Can_Tar_TxItem_Standard2_t_Id_set)
    Delay = property(_g_api_can.G_Can_Tar_TxItem_Standard2_t_Delay_get, _g_api_can.G_Can_Tar_TxItem_Standard2_t_Delay_set)
    Flags = property(_g_api_can.G_Can_Tar_TxItem_Standard2_t_Flags_get, _g_api_can.G_Can_Tar_TxItem_Standard2_t_Flags_set)
    Dlc = property(_g_api_can.G_Can_Tar_TxItem_Standard2_t_Dlc_get, _g_api_can.G_Can_Tar_TxItem_Standard2_t_Dlc_set)
    Data = property(_g_api_can.G_Can_Tar_TxItem_Standard2_t_Data_get, _g_api_can.G_Can_Tar_TxItem_Standard2_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Tar_TxItem_Standard2_t_swiginit(self, _g_api_can.new_G_Can_Tar_TxItem_Standard2_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Tar_TxItem_Standard2_t

# Register G_Can_Tar_TxItem_Standard2_t in _g_api_can:
_g_api_can.G_Can_Tar_TxItem_Standard2_t_swigregister(G_Can_Tar_TxItem_Standard2_t)


def G_Can_Tar_Config_Simple(portHandle, channel, rxId, txId):
    return _g_api_can.G_Can_Tar_Config_Simple(portHandle, channel, rxId, txId)

def G_Can_Tar_Config_Standard(portHandle, channel, rxId, rxIdMask, rxDlc, rxDlcMask, rxData, rxDataMask):
    return _g_api_can.G_Can_Tar_Config_Standard(portHandle, channel, rxId, rxIdMask, rxDlc, rxDlcMask, rxData, rxDataMask)

def G_Can_Tar_Config_Off(portHandle, channel):
    return _g_api_can.G_Can_Tar_Config_Off(portHandle, channel)

def G_Can_Tar_AddTxItems_Simple(portHandle, channel, numberOfItems, items):
    return _g_api_can.G_Can_Tar_AddTxItems_Simple(portHandle, channel, numberOfItems, items)

def G_Can_Tar_AddTxItems_Simple2(portHandle, channel, numberOfItems, items):
    return _g_api_can.G_Can_Tar_AddTxItems_Simple2(portHandle, channel, numberOfItems, items)

def G_Can_Tar_AddTxItems_Standard(portHandle, channel, numberOfItems, items):
    return _g_api_can.G_Can_Tar_AddTxItems_Standard(portHandle, channel, numberOfItems, items)

def G_Can_Tar_AddTxItems_Standard2(portHandle, channel, numberOfItems, items):
    return _g_api_can.G_Can_Tar_AddTxItems_Standard2(portHandle, channel, numberOfItems, items)

def G_Can_Tar_GetState(portHandle, channel, type, rspFlags, numberOfTxItems, currentTxItem):
    return _g_api_can.G_Can_Tar_GetState(portHandle, channel, type, rspFlags, numberOfTxItems, currentTxItem)

def G_Can_Tar_Start(portHandle, channel, mode):
    return _g_api_can.G_Can_Tar_Start(portHandle, channel, mode)

def G_Can_Tar_Stop(portHandle, channel):
    return _g_api_can.G_Can_Tar_Stop(portHandle, channel)

def G_Can_Ccp_Reset(portHandle, channel):
    return _g_api_can.G_Can_Ccp_Reset(portHandle, channel)
class G_Can_Ccp_Init_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CmdFlags = property(_g_api_can.G_Can_Ccp_Init_Parameters_t_CmdFlags_get, _g_api_can.G_Can_Ccp_Init_Parameters_t_CmdFlags_set)
    CroId = property(_g_api_can.G_Can_Ccp_Init_Parameters_t_CroId_get, _g_api_can.G_Can_Ccp_Init_Parameters_t_CroId_set)
    DtoId = property(_g_api_can.G_Can_Ccp_Init_Parameters_t_DtoId_get, _g_api_can.G_Can_Ccp_Init_Parameters_t_DtoId_set)
    TxTimeout = property(_g_api_can.G_Can_Ccp_Init_Parameters_t_TxTimeout_get, _g_api_can.G_Can_Ccp_Init_Parameters_t_TxTimeout_set)
    ResponseFifoDepth = property(_g_api_can.G_Can_Ccp_Init_Parameters_t_ResponseFifoDepth_get, _g_api_can.G_Can_Ccp_Init_Parameters_t_ResponseFifoDepth_set)
    DaqMessageFifoDepth = property(_g_api_can.G_Can_Ccp_Init_Parameters_t_DaqMessageFifoDepth_get, _g_api_can.G_Can_Ccp_Init_Parameters_t_DaqMessageFifoDepth_set)
    EventMessageFifoDepth = property(_g_api_can.G_Can_Ccp_Init_Parameters_t_EventMessageFifoDepth_get, _g_api_can.G_Can_Ccp_Init_Parameters_t_EventMessageFifoDepth_set)
    StationAddress = property(_g_api_can.G_Can_Ccp_Init_Parameters_t_StationAddress_get, _g_api_can.G_Can_Ccp_Init_Parameters_t_StationAddress_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Init_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Init_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Init_Parameters_t

# Register G_Can_Ccp_Init_Parameters_t in _g_api_can:
_g_api_can.G_Can_Ccp_Init_Parameters_t_swigregister(G_Can_Ccp_Init_Parameters_t)


def G_Can_Ccp_Init(portHandle, channel, parameters):
    return _g_api_can.G_Can_Ccp_Init(portHandle, channel, parameters)
class G_Can_Ccp_Command_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CmdFlags = property(_g_api_can.G_Can_Ccp_Command_Parameters_t_CmdFlags_get, _g_api_can.G_Can_Ccp_Command_Parameters_t_CmdFlags_set)
    AckTimeout = property(_g_api_can.G_Can_Ccp_Command_Parameters_t_AckTimeout_get, _g_api_can.G_Can_Ccp_Command_Parameters_t_AckTimeout_set)
    NumberOfRetries = property(_g_api_can.G_Can_Ccp_Command_Parameters_t_NumberOfRetries_get, _g_api_can.G_Can_Ccp_Command_Parameters_t_NumberOfRetries_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_Parameters_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_Parameters_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_Parameters_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_Command_Parameters_t_reserved3_get, _g_api_can.G_Can_Ccp_Command_Parameters_t_reserved3_set)
    Data = property(_g_api_can.G_Can_Ccp_Command_Parameters_t_Data_get, _g_api_can.G_Can_Ccp_Command_Parameters_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_Parameters_t

# Register G_Can_Ccp_Command_Parameters_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_Parameters_t_swigregister(G_Can_Ccp_Command_Parameters_t)


def G_Can_Ccp_Command(portHandle, channel, parameters):
    return _g_api_can.G_Can_Ccp_Command(portHandle, channel, parameters)
class G_Can_Ccp_GetCommandState_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_Flags_get, _g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_Flags_set)
    CcpError = property(_g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_CcpError_get, _g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_CcpError_set)
    NumberOfRetries = property(_g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_NumberOfRetries_get, _g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_NumberOfRetries_set)
    RetryCounter = property(_g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_RetryCounter_get, _g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_RetryCounter_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_GetCommandState_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_GetCommandState_Rsp_t

# Register G_Can_Ccp_GetCommandState_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_GetCommandState_Rsp_t_swigregister(G_Can_Ccp_GetCommandState_Rsp_t)


def G_Can_Ccp_GetCommandState(portHandle, channel, rsp):
    return _g_api_can.G_Can_Ccp_GetCommandState(portHandle, channel, rsp)
class G_Can_Ccp_GetResponse_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_Ccp_GetResponse_Rsp_t_Flags_get, _g_api_can.G_Can_Ccp_GetResponse_Rsp_t_Flags_set)
    CcpError = property(_g_api_can.G_Can_Ccp_GetResponse_Rsp_t_CcpError_get, _g_api_can.G_Can_Ccp_GetResponse_Rsp_t_CcpError_set)
    Dlc = property(_g_api_can.G_Can_Ccp_GetResponse_Rsp_t_Dlc_get, _g_api_can.G_Can_Ccp_GetResponse_Rsp_t_Dlc_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_GetResponse_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_GetResponse_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_GetResponse_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_GetResponse_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_GetResponse_Rsp_t_reserved3_get, _g_api_can.G_Can_Ccp_GetResponse_Rsp_t_reserved3_set)
    Data = property(_g_api_can.G_Can_Ccp_GetResponse_Rsp_t_Data_get, _g_api_can.G_Can_Ccp_GetResponse_Rsp_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_GetResponse_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_GetResponse_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_GetResponse_Rsp_t

# Register G_Can_Ccp_GetResponse_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_GetResponse_Rsp_t_swigregister(G_Can_Ccp_GetResponse_Rsp_t)


def G_Can_Ccp_GetResponse(portHandle, channel):
    return _g_api_can.G_Can_Ccp_GetResponse(portHandle, channel)
class G_Can_Ccp_EventMessage_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Dlc = property(_g_api_can.G_Can_Ccp_EventMessage_t_Dlc_get, _g_api_can.G_Can_Ccp_EventMessage_t_Dlc_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_EventMessage_t_reserved1_get, _g_api_can.G_Can_Ccp_EventMessage_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_EventMessage_t_reserved2_get, _g_api_can.G_Can_Ccp_EventMessage_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_EventMessage_t_reserved3_get, _g_api_can.G_Can_Ccp_EventMessage_t_reserved3_set)
    Data = property(_g_api_can.G_Can_Ccp_EventMessage_t_Data_get, _g_api_can.G_Can_Ccp_EventMessage_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_EventMessage_t_swiginit(self, _g_api_can.new_G_Can_Ccp_EventMessage_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_EventMessage_t

# Register G_Can_Ccp_EventMessage_t in _g_api_can:
_g_api_can.G_Can_Ccp_EventMessage_t_swigregister(G_Can_Ccp_EventMessage_t)


def G_Can_Ccp_GetEventMessages(portHandle, channel, rspFlags):
    return _g_api_can.G_Can_Ccp_GetEventMessages(portHandle, channel, rspFlags)
class G_Can_Ccp_DaqMessage_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Dlc = property(_g_api_can.G_Can_Ccp_DaqMessage_t_Dlc_get, _g_api_can.G_Can_Ccp_DaqMessage_t_Dlc_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_DaqMessage_t_reserved1_get, _g_api_can.G_Can_Ccp_DaqMessage_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_DaqMessage_t_reserved2_get, _g_api_can.G_Can_Ccp_DaqMessage_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_DaqMessage_t_reserved3_get, _g_api_can.G_Can_Ccp_DaqMessage_t_reserved3_set)
    Data = property(_g_api_can.G_Can_Ccp_DaqMessage_t_Data_get, _g_api_can.G_Can_Ccp_DaqMessage_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_DaqMessage_t_swiginit(self, _g_api_can.new_G_Can_Ccp_DaqMessage_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_DaqMessage_t

# Register G_Can_Ccp_DaqMessage_t in _g_api_can:
_g_api_can.G_Can_Ccp_DaqMessage_t_swigregister(G_Can_Ccp_DaqMessage_t)


def G_Can_Ccp_GetDaqMessages(portHandle, channel, rspFlags):
    return _g_api_can.G_Can_Ccp_GetDaqMessages(portHandle, channel, rspFlags)

def G_Can_Ccp_CommandWithResponse(portHandle, channel, parameters):
    return _g_api_can.G_Can_Ccp_CommandWithResponse(portHandle, channel, parameters)

def G_Can_Ccp_GetCcpErrorDescription():
    return _g_api_can.G_Can_Ccp_GetCcpErrorDescription()

def G_Can_Ccp_Command_Connect(portHandle, channel, stationAddress):
    return _g_api_can.G_Can_Ccp_Command_Connect(portHandle, channel, stationAddress)
class G_Can_Ccp_Command_ExchangeId_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Length = property(_g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_Length_get, _g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_Length_set)
    DataTypeQualifier = property(_g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_DataTypeQualifier_get, _g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_DataTypeQualifier_set)
    ResourceAvailabilityFlags = property(_g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_ResourceAvailabilityFlags_get, _g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_ResourceAvailabilityFlags_set)
    ResourceProtectionFlags = property(_g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_ResourceProtectionFlags_get, _g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_ResourceProtectionFlags_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_ExchangeId_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_ExchangeId_Rsp_t

# Register G_Can_Ccp_Command_ExchangeId_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_ExchangeId_Rsp_t_swigregister(G_Can_Ccp_Command_ExchangeId_Rsp_t)


def G_Can_Ccp_Command_ExchangeId(portHandle, channel, masterDeviceId):
    return _g_api_can.G_Can_Ccp_Command_ExchangeId(portHandle, channel, masterDeviceId)
class G_Can_Ccp_Command_GetSeed_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProtectionStatus = property(_g_api_can.G_Can_Ccp_Command_GetSeed_Rsp_t_ProtectionStatus_get, _g_api_can.G_Can_Ccp_Command_GetSeed_Rsp_t_ProtectionStatus_set)
    SeedData = property(_g_api_can.G_Can_Ccp_Command_GetSeed_Rsp_t_SeedData_get, _g_api_can.G_Can_Ccp_Command_GetSeed_Rsp_t_SeedData_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_GetSeed_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_GetSeed_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_GetSeed_Rsp_t

# Register G_Can_Ccp_Command_GetSeed_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_GetSeed_Rsp_t_swigregister(G_Can_Ccp_Command_GetSeed_Rsp_t)


def G_Can_Ccp_Command_GetSeed(portHandle, channel, function):
    return _g_api_can.G_Can_Ccp_Command_GetSeed(portHandle, channel, function)

def G_Can_Ccp_Command_Unlock(portHandle, channel, key):
    return _g_api_can.G_Can_Ccp_Command_Unlock(portHandle, channel, key)

def G_Can_Ccp_Command_SetMta(portHandle, channel, mtaNumber, addressExtension, address):
    return _g_api_can.G_Can_Ccp_Command_SetMta(portHandle, channel, mtaNumber, addressExtension, address)
class G_Can_Ccp_Command_Download_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MTA0Extension = property(_g_api_can.G_Can_Ccp_Command_Download_Rsp_t_MTA0Extension_get, _g_api_can.G_Can_Ccp_Command_Download_Rsp_t_MTA0Extension_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_Download_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_Download_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_Download_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_Download_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_Command_Download_Rsp_t_reserved3_get, _g_api_can.G_Can_Ccp_Command_Download_Rsp_t_reserved3_set)
    MTA0Address = property(_g_api_can.G_Can_Ccp_Command_Download_Rsp_t_MTA0Address_get, _g_api_can.G_Can_Ccp_Command_Download_Rsp_t_MTA0Address_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_Download_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_Download_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_Download_Rsp_t

# Register G_Can_Ccp_Command_Download_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_Download_Rsp_t_swigregister(G_Can_Ccp_Command_Download_Rsp_t)


def G_Can_Ccp_Command_Download(portHandle, channel, dataSize, data, rsp):
    return _g_api_can.G_Can_Ccp_Command_Download(portHandle, channel, dataSize, data, rsp)
class G_Can_Ccp_Command_Download6_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MTA0Extension = property(_g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_MTA0Extension_get, _g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_MTA0Extension_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_reserved3_get, _g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_reserved3_set)
    MTA0Address = property(_g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_MTA0Address_get, _g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_MTA0Address_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_Download6_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_Download6_Rsp_t

# Register G_Can_Ccp_Command_Download6_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_Download6_Rsp_t_swigregister(G_Can_Ccp_Command_Download6_Rsp_t)


def G_Can_Ccp_Command_Download6(portHandle, channel, data, rsp):
    return _g_api_can.G_Can_Ccp_Command_Download6(portHandle, channel, data, rsp)

def G_Can_Ccp_Command_Upload(portHandle, channel, size, data):
    return _g_api_can.G_Can_Ccp_Command_Upload(portHandle, channel, size, data)

def G_Can_Ccp_Command_ShortUp(portHandle, channel, size, addressExtension, address, data):
    return _g_api_can.G_Can_Ccp_Command_ShortUp(portHandle, channel, size, addressExtension, address, data)

def G_Can_Ccp_Command_SelectCalPage(portHandle, channel):
    return _g_api_can.G_Can_Ccp_Command_SelectCalPage(portHandle, channel)
class G_Can_Ccp_Command_GetDaqSize_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DaqListSize = property(_g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_DaqListSize_get, _g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_DaqListSize_set)
    FirstPid = property(_g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_FirstPid_get, _g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_FirstPid_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_GetDaqSize_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_GetDaqSize_Rsp_t

# Register G_Can_Ccp_Command_GetDaqSize_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_GetDaqSize_Rsp_t_swigregister(G_Can_Ccp_Command_GetDaqSize_Rsp_t)


def G_Can_Ccp_Command_GetDaqSize(portHandle, channel, daqListNumber, dtoId, rsp):
    return _g_api_can.G_Can_Ccp_Command_GetDaqSize(portHandle, channel, daqListNumber, dtoId, rsp)

def G_Can_Ccp_Command_SetDaqPtr(portHandle, channel, daqListNumber, odtNumber, elementNumber):
    return _g_api_can.G_Can_Ccp_Command_SetDaqPtr(portHandle, channel, daqListNumber, odtNumber, elementNumber)

def G_Can_Ccp_Command_WriteDaq(portHandle, channel, sizeOfDaqElement, addressExtension, address):
    return _g_api_can.G_Can_Ccp_Command_WriteDaq(portHandle, channel, sizeOfDaqElement, addressExtension, address)

def G_Can_Ccp_Command_StartStop(portHandle, channel, mode, daqListNumber, lastOdtNumber, eventChannelNumber, transmissionRatePrescaler):
    return _g_api_can.G_Can_Ccp_Command_StartStop(portHandle, channel, mode, daqListNumber, lastOdtNumber, eventChannelNumber, transmissionRatePrescaler)

def G_Can_Ccp_Command_Disconnect(portHandle, channel, mode, stationAddress):
    return _g_api_can.G_Can_Ccp_Command_Disconnect(portHandle, channel, mode, stationAddress)

def G_Can_Ccp_Command_SetSessionStatus(portHandle, channel, statusFlags):
    return _g_api_can.G_Can_Ccp_Command_SetSessionStatus(portHandle, channel, statusFlags)
class G_Can_Ccp_Command_GetSessionStatus_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    StatusFlags = property(_g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_StatusFlags_get, _g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_StatusFlags_set)
    StatusInfoQualifier = property(_g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_StatusInfoQualifier_get, _g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_StatusInfoQualifier_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_reserved2_set)
    StatusInfo = property(_g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_StatusInfo_get, _g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_StatusInfo_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_reserved3_get, _g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_reserved3_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_GetSessionStatus_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_GetSessionStatus_Rsp_t

# Register G_Can_Ccp_Command_GetSessionStatus_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_GetSessionStatus_Rsp_t_swigregister(G_Can_Ccp_Command_GetSessionStatus_Rsp_t)


def G_Can_Ccp_Command_GetSessionStatus(portHandle, channel, rsp):
    return _g_api_can.G_Can_Ccp_Command_GetSessionStatus(portHandle, channel, rsp)
class G_Can_Ccp_Command_BuildChksum_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Size = property(_g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_Size_get, _g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_Size_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_reserved3_get, _g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_reserved3_set)
    Data = property(_g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_Data_get, _g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_BuildChksum_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_BuildChksum_Rsp_t

# Register G_Can_Ccp_Command_BuildChksum_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_BuildChksum_Rsp_t_swigregister(G_Can_Ccp_Command_BuildChksum_Rsp_t)


def G_Can_Ccp_Command_BuildChksum(portHandle, channel, size, rsp):
    return _g_api_can.G_Can_Ccp_Command_BuildChksum(portHandle, channel, size, rsp)

def G_Can_Ccp_Command_ClearMemory(portHandle, channel, size):
    return _g_api_can.G_Can_Ccp_Command_ClearMemory(portHandle, channel, size)
class G_Can_Ccp_Command_Program_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MTA0Extension = property(_g_api_can.G_Can_Ccp_Command_Program_Rsp_t_MTA0Extension_get, _g_api_can.G_Can_Ccp_Command_Program_Rsp_t_MTA0Extension_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_Program_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_Program_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_Program_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_Program_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_Command_Program_Rsp_t_reserved3_get, _g_api_can.G_Can_Ccp_Command_Program_Rsp_t_reserved3_set)
    MTA0Address = property(_g_api_can.G_Can_Ccp_Command_Program_Rsp_t_MTA0Address_get, _g_api_can.G_Can_Ccp_Command_Program_Rsp_t_MTA0Address_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_Program_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_Program_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_Program_Rsp_t

# Register G_Can_Ccp_Command_Program_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_Program_Rsp_t_swigregister(G_Can_Ccp_Command_Program_Rsp_t)


def G_Can_Ccp_Command_Program(portHandle, channel, size, data, rsp):
    return _g_api_can.G_Can_Ccp_Command_Program(portHandle, channel, size, data, rsp)
class G_Can_Ccp_Command_Program6_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MTA0Extension = property(_g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_MTA0Extension_get, _g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_MTA0Extension_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_reserved3_get, _g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_reserved3_set)
    MTA0Address = property(_g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_MTA0Address_get, _g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_MTA0Address_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_Program6_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_Program6_Rsp_t

# Register G_Can_Ccp_Command_Program6_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_Program6_Rsp_t_swigregister(G_Can_Ccp_Command_Program6_Rsp_t)


def G_Can_Ccp_Command_Program6(portHandle, channel, data, rsp):
    return _g_api_can.G_Can_Ccp_Command_Program6(portHandle, channel, data, rsp)

def G_Can_Ccp_Command_Move(portHandle, channel, size):
    return _g_api_can.G_Can_Ccp_Command_Move(portHandle, channel, size)
class G_Can_Ccp_Command_DiagService_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Length = property(_g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_Length_get, _g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_Length_set)
    DataType = property(_g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_DataType_get, _g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_DataType_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_DiagService_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_DiagService_Rsp_t

# Register G_Can_Ccp_Command_DiagService_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_DiagService_Rsp_t_swigregister(G_Can_Ccp_Command_DiagService_Rsp_t)


def G_Can_Ccp_Command_DiagService(portHandle, channel, serviceNumber, parameters, rsp):
    return _g_api_can.G_Can_Ccp_Command_DiagService(portHandle, channel, serviceNumber, parameters, rsp)
class G_Can_Ccp_Command_ActionService_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Length = property(_g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_Length_get, _g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_Length_set)
    DataType = property(_g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_DataType_get, _g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_DataType_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_ActionService_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_ActionService_Rsp_t

# Register G_Can_Ccp_Command_ActionService_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_ActionService_Rsp_t_swigregister(G_Can_Ccp_Command_ActionService_Rsp_t)


def G_Can_Ccp_Command_ActionService(portHandle, channel, serviceNumber, parameters, rsp):
    return _g_api_can.G_Can_Ccp_Command_ActionService(portHandle, channel, serviceNumber, parameters, rsp)

def G_Can_Ccp_Command_Test(portHandle, channel, stationAddress):
    return _g_api_can.G_Can_Ccp_Command_Test(portHandle, channel, stationAddress)

def G_Can_Ccp_Command_StartStopAll(portHandle, channel, mode):
    return _g_api_can.G_Can_Ccp_Command_StartStopAll(portHandle, channel, mode)
class G_Can_Ccp_Command_GetActiveCalPage_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddressExtension = property(_g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_AddressExtension_get, _g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_AddressExtension_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_reserved3_get, _g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_reserved3_set)
    Address = property(_g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_Address_get, _g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_Address_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_GetActiveCalPage_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_GetActiveCalPage_Rsp_t

# Register G_Can_Ccp_Command_GetActiveCalPage_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_GetActiveCalPage_Rsp_t_swigregister(G_Can_Ccp_Command_GetActiveCalPage_Rsp_t)


def G_Can_Ccp_Command_GetActiveCalPage(portHandle, channel, rsp):
    return _g_api_can.G_Can_Ccp_Command_GetActiveCalPage(portHandle, channel, rsp)
class G_Can_Ccp_Command_GetCcpVersion_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MainVersion = property(_g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_MainVersion_get, _g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_MainVersion_set)
    ReleaseVersion = property(_g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_ReleaseVersion_get, _g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_ReleaseVersion_set)
    reserved1 = property(_g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_reserved1_get, _g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_reserved2_get, _g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_swiginit(self, _g_api_can.new_G_Can_Ccp_Command_GetCcpVersion_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Ccp_Command_GetCcpVersion_Rsp_t

# Register G_Can_Ccp_Command_GetCcpVersion_Rsp_t in _g_api_can:
_g_api_can.G_Can_Ccp_Command_GetCcpVersion_Rsp_t_swigregister(G_Can_Ccp_Command_GetCcpVersion_Rsp_t)


def G_Can_Ccp_Command_GetCcpVersion(portHandle, channel, desiredMainVersion, desiredReleaseVersion, rsp):
    return _g_api_can.G_Can_Ccp_Command_GetCcpVersion(portHandle, channel, desiredMainVersion, desiredReleaseVersion, rsp)

def G_Can_Trigger_InputMode_Set_SendMsgGroup(portHandle, cmdFlags, group, inputLevelSelection):
    return _g_api_can.G_Can_Trigger_InputMode_Set_SendMsgGroup(portHandle, cmdFlags, group, inputLevelSelection)

def G_Can_Trigger_InputMode_Set_WriteEvent(portHandle, cmdFlags, inputEdgeSelection):
    return _g_api_can.G_Can_Trigger_InputMode_Set_WriteEvent(portHandle, cmdFlags, inputEdgeSelection)

def G_Can_Trigger_InputMode_Reset(portHandle):
    return _g_api_can.G_Can_Trigger_InputMode_Reset(portHandle)
class G_Can_Trigger_OutputMode_Set_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CmdFlags = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_CmdFlags_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_CmdFlags_set)
    Mode = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Mode_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Mode_set)
    TriggerAction = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_TriggerAction_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_TriggerAction_set)
    Type = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Type_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Type_set)
    reserved = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_reserved_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_reserved_set)
    Id = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_get)
    Data = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_get)

    def __init__(self):
        _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Trigger_OutputMode_Set_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Trigger_OutputMode_Set_Parameters_t

# Register G_Can_Trigger_OutputMode_Set_Parameters_t in _g_api_can:
_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_swigregister(G_Can_Trigger_OutputMode_Set_Parameters_t)

class G_Can_Trigger_OutputMode_Set_Parameters_t_Data(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RxData = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_RxData_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_RxData_set)
    RxDataMask = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_RxDataMask_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_RxDataMask_set)
    TxData = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_TxData_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_TxData_set)
    TxDataMask = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_TxDataMask_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_TxDataMask_set)

    def __init__(self):
        _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_swiginit(self, _g_api_can.new_G_Can_Trigger_OutputMode_Set_Parameters_t_Data())
    __swig_destroy__ = _g_api_can.delete_G_Can_Trigger_OutputMode_Set_Parameters_t_Data

# Register G_Can_Trigger_OutputMode_Set_Parameters_t_Data in _g_api_can:
_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Data_swigregister(G_Can_Trigger_OutputMode_Set_Parameters_t_Data)

class G_Can_Trigger_OutputMode_Set_Parameters_t_Id(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RxId = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_RxId_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_RxId_set)
    RxIdMask = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_RxIdMask_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_RxIdMask_set)
    TxId = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_TxId_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_TxId_set)
    TxIdMask = property(_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_TxIdMask_get, _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_TxIdMask_set)

    def __init__(self):
        _g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_swiginit(self, _g_api_can.new_G_Can_Trigger_OutputMode_Set_Parameters_t_Id())
    __swig_destroy__ = _g_api_can.delete_G_Can_Trigger_OutputMode_Set_Parameters_t_Id

# Register G_Can_Trigger_OutputMode_Set_Parameters_t_Id in _g_api_can:
_g_api_can.G_Can_Trigger_OutputMode_Set_Parameters_t_Id_swigregister(G_Can_Trigger_OutputMode_Set_Parameters_t_Id)


def G_Can_Trigger_OutputMode_Set(portHandle, parameters):
    return _g_api_can.G_Can_Trigger_OutputMode_Set(portHandle, parameters)
class G_Can_Trigger_InputState_Get_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_Mode_get, _g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_Mode_set)
    reserved1 = property(_g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_reserved1_get, _g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_reserved2_get, _g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_reserved3_get, _g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_reserved3_set)

    def __init__(self):
        _g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Trigger_InputState_Get_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Trigger_InputState_Get_Parameters_t

# Register G_Can_Trigger_InputState_Get_Parameters_t in _g_api_can:
_g_api_can.G_Can_Trigger_InputState_Get_Parameters_t_swigregister(G_Can_Trigger_InputState_Get_Parameters_t)

class G_Can_Trigger_InputState_Get_Response_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Trigger_InputState_Get_Response_t_Mode_get, _g_api_can.G_Can_Trigger_InputState_Get_Response_t_Mode_set)
    Level = property(_g_api_can.G_Can_Trigger_InputState_Get_Response_t_Level_get, _g_api_can.G_Can_Trigger_InputState_Get_Response_t_Level_set)
    reserved1 = property(_g_api_can.G_Can_Trigger_InputState_Get_Response_t_reserved1_get, _g_api_can.G_Can_Trigger_InputState_Get_Response_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Trigger_InputState_Get_Response_t_reserved2_get, _g_api_can.G_Can_Trigger_InputState_Get_Response_t_reserved2_set)
    EventCounter = property(_g_api_can.G_Can_Trigger_InputState_Get_Response_t_EventCounter_get, _g_api_can.G_Can_Trigger_InputState_Get_Response_t_EventCounter_set)

    def __init__(self):
        _g_api_can.G_Can_Trigger_InputState_Get_Response_t_swiginit(self, _g_api_can.new_G_Can_Trigger_InputState_Get_Response_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Trigger_InputState_Get_Response_t

# Register G_Can_Trigger_InputState_Get_Response_t in _g_api_can:
_g_api_can.G_Can_Trigger_InputState_Get_Response_t_swigregister(G_Can_Trigger_InputState_Get_Response_t)


def G_Can_Trigger_InputState_Get(portHandle, parameters, response):
    return _g_api_can.G_Can_Trigger_InputState_Get(portHandle, parameters, response)
class G_Can_Trigger_OutputState_Get_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_Mode_get, _g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_Mode_set)
    reserved1 = property(_g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_reserved1_get, _g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_reserved2_get, _g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_reserved3_get, _g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_reserved3_set)

    def __init__(self):
        _g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_swiginit(self, _g_api_can.new_G_Can_Trigger_OutputState_Get_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Trigger_OutputState_Get_Parameters_t

# Register G_Can_Trigger_OutputState_Get_Parameters_t in _g_api_can:
_g_api_can.G_Can_Trigger_OutputState_Get_Parameters_t_swigregister(G_Can_Trigger_OutputState_Get_Parameters_t)

class G_Can_Trigger_OutputState_Get_Response_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_g_api_can.G_Can_Trigger_OutputState_Get_Response_t_Mode_get, _g_api_can.G_Can_Trigger_OutputState_Get_Response_t_Mode_set)
    Level = property(_g_api_can.G_Can_Trigger_OutputState_Get_Response_t_Level_get, _g_api_can.G_Can_Trigger_OutputState_Get_Response_t_Level_set)
    reserved1 = property(_g_api_can.G_Can_Trigger_OutputState_Get_Response_t_reserved1_get, _g_api_can.G_Can_Trigger_OutputState_Get_Response_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_Trigger_OutputState_Get_Response_t_reserved2_get, _g_api_can.G_Can_Trigger_OutputState_Get_Response_t_reserved2_set)
    RxEventCounter = property(_g_api_can.G_Can_Trigger_OutputState_Get_Response_t_RxEventCounter_get, _g_api_can.G_Can_Trigger_OutputState_Get_Response_t_RxEventCounter_set)
    TxEventCounter = property(_g_api_can.G_Can_Trigger_OutputState_Get_Response_t_TxEventCounter_get, _g_api_can.G_Can_Trigger_OutputState_Get_Response_t_TxEventCounter_set)

    def __init__(self):
        _g_api_can.G_Can_Trigger_OutputState_Get_Response_t_swiginit(self, _g_api_can.new_G_Can_Trigger_OutputState_Get_Response_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_Trigger_OutputState_Get_Response_t

# Register G_Can_Trigger_OutputState_Get_Response_t in _g_api_can:
_g_api_can.G_Can_Trigger_OutputState_Get_Response_t_swigregister(G_Can_Trigger_OutputState_Get_Response_t)


def G_Can_Trigger_OutputState_Get(portHandle, parameters, response):
    return _g_api_can.G_Can_Trigger_OutputState_Get(portHandle, parameters, response)

def G_Can_Trigger_Input_Property_SetById(portHandle, id, value):
    return _g_api_can.G_Can_Trigger_Input_Property_SetById(portHandle, id, value)

def G_Can_Trigger_Input_Property_GetById(portHandle, id, value):
    return _g_api_can.G_Can_Trigger_Input_Property_GetById(portHandle, id, value)

def G_Can_Trigger_Output_Property_SetById(portHandle, id, value):
    return _g_api_can.G_Can_Trigger_Output_Property_SetById(portHandle, id, value)

def G_Can_Trigger_Output_Property_GetById(portHandle, id, value):
    return _g_api_can.G_Can_Trigger_Output_Property_GetById(portHandle, id, value)
class G_Can_CmdGateway_Slave_Enable_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_Flags_get, _g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_Flags_set)
    BaseAddress = property(_g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_BaseAddress_get, _g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_BaseAddress_set)
    IdOffset = property(_g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_IdOffset_get, _g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_IdOffset_set)
    reserved1 = property(_g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_reserved1_get, _g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_reserved2_get, _g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_reserved2_set)
    reserved3 = property(_g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_reserved3_get, _g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_reserved3_set)

    def __init__(self):
        _g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_swiginit(self, _g_api_can.new_G_Can_CmdGateway_Slave_Enable_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CmdGateway_Slave_Enable_Parameters_t

# Register G_Can_CmdGateway_Slave_Enable_Parameters_t in _g_api_can:
_g_api_can.G_Can_CmdGateway_Slave_Enable_Parameters_t_swigregister(G_Can_CmdGateway_Slave_Enable_Parameters_t)


def G_Can_CmdGateway_Slave_Enable(portHandle, parameters):
    return _g_api_can.G_Can_CmdGateway_Slave_Enable(portHandle, parameters)

def G_Can_CmdGateway_Slave_Disable(portHandle):
    return _g_api_can.G_Can_CmdGateway_Slave_Disable(portHandle)
class G_Can_CmdGateway_Master_Enable_Parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_Flags_get, _g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_Flags_set)
    BaudRate = property(_g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_BaudRate_get, _g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_BaudRate_set)
    BaseAddress = property(_g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_BaseAddress_get, _g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_BaseAddress_set)
    SlaveIdOffset = property(_g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_SlaveIdOffset_get, _g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_SlaveIdOffset_set)
    TargetControllerNumber = property(_g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_TargetControllerNumber_get, _g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_TargetControllerNumber_set)
    reserved1 = property(_g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_reserved1_get, _g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_reserved2_get, _g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_reserved2_set)

    def __init__(self):
        _g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_swiginit(self, _g_api_can.new_G_Can_CmdGateway_Master_Enable_Parameters_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_CmdGateway_Master_Enable_Parameters_t

# Register G_Can_CmdGateway_Master_Enable_Parameters_t in _g_api_can:
_g_api_can.G_Can_CmdGateway_Master_Enable_Parameters_t_swigregister(G_Can_CmdGateway_Master_Enable_Parameters_t)


def G_Can_CmdGateway_Master_Enable(portHandle, parameters):
    return _g_api_can.G_Can_CmdGateway_Master_Enable(portHandle, parameters)

def G_Can_CmdGateway_Master_Disable(portHandle):
    return _g_api_can.G_Can_CmdGateway_Master_Disable(portHandle)
G_CAN__UART_GATEWAY__UART_INSTANCE_TYPE__LVDS_CONTROL_CHANNEL = _g_api_can.G_CAN__UART_GATEWAY__UART_INSTANCE_TYPE__LVDS_CONTROL_CHANNEL
G_CAN__UART_GATEWAY__UART_INSTANCE_TYPE__UNKNOWN = _g_api_can.G_CAN__UART_GATEWAY__UART_INSTANCE_TYPE__UNKNOWN
G_CAN__UART_GATEWAY__UART_PARITY__NONE = _g_api_can.G_CAN__UART_GATEWAY__UART_PARITY__NONE
G_CAN__UART_GATEWAY__UART_PARITY__EVEN = _g_api_can.G_CAN__UART_GATEWAY__UART_PARITY__EVEN
G_CAN__UART_GATEWAY__UART_PARITY__ODD = _g_api_can.G_CAN__UART_GATEWAY__UART_PARITY__ODD
G_CAN__UART_GATEWAY__UART_PARITY__UNKNOWN = _g_api_can.G_CAN__UART_GATEWAY__UART_PARITY__UNKNOWN

def G_Can_UartGateway_Reset(portHandle):
    return _g_api_can.G_Can_UartGateway_Reset(portHandle)
class G_Can_UartGateway_Init_Cmd_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_UartGateway_Init_Cmd_t_Flags_get, _g_api_can.G_Can_UartGateway_Init_Cmd_t_Flags_set)
    MaxRetries = property(_g_api_can.G_Can_UartGateway_Init_Cmd_t_MaxRetries_get, _g_api_can.G_Can_UartGateway_Init_Cmd_t_MaxRetries_set)
    AckTimeout = property(_g_api_can.G_Can_UartGateway_Init_Cmd_t_AckTimeout_get, _g_api_can.G_Can_UartGateway_Init_Cmd_t_AckTimeout_set)
    UartInstanceType = property(_g_api_can.G_Can_UartGateway_Init_Cmd_t_UartInstanceType_get, _g_api_can.G_Can_UartGateway_Init_Cmd_t_UartInstanceType_set)
    UartInstanceId = property(_g_api_can.G_Can_UartGateway_Init_Cmd_t_UartInstanceId_get, _g_api_can.G_Can_UartGateway_Init_Cmd_t_UartInstanceId_set)
    UartParity = property(_g_api_can.G_Can_UartGateway_Init_Cmd_t_UartParity_get, _g_api_can.G_Can_UartGateway_Init_Cmd_t_UartParity_set)
    reserved = property(_g_api_can.G_Can_UartGateway_Init_Cmd_t_reserved_get, _g_api_can.G_Can_UartGateway_Init_Cmd_t_reserved_set)
    UartBaudRate = property(_g_api_can.G_Can_UartGateway_Init_Cmd_t_UartBaudRate_get, _g_api_can.G_Can_UartGateway_Init_Cmd_t_UartBaudRate_set)

    def __init__(self):
        _g_api_can.G_Can_UartGateway_Init_Cmd_t_swiginit(self, _g_api_can.new_G_Can_UartGateway_Init_Cmd_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_UartGateway_Init_Cmd_t

# Register G_Can_UartGateway_Init_Cmd_t in _g_api_can:
_g_api_can.G_Can_UartGateway_Init_Cmd_t_swigregister(G_Can_UartGateway_Init_Cmd_t)

class G_Can_UartGateway_Init_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UartBaudRate_Desired = property(_g_api_can.G_Can_UartGateway_Init_Rsp_t_UartBaudRate_Desired_get, _g_api_can.G_Can_UartGateway_Init_Rsp_t_UartBaudRate_Desired_set)
    UartBaudRate_Actual = property(_g_api_can.G_Can_UartGateway_Init_Rsp_t_UartBaudRate_Actual_get, _g_api_can.G_Can_UartGateway_Init_Rsp_t_UartBaudRate_Actual_set)

    def __init__(self):
        _g_api_can.G_Can_UartGateway_Init_Rsp_t_swiginit(self, _g_api_can.new_G_Can_UartGateway_Init_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_UartGateway_Init_Rsp_t

# Register G_Can_UartGateway_Init_Rsp_t in _g_api_can:
_g_api_can.G_Can_UartGateway_Init_Rsp_t_swigregister(G_Can_UartGateway_Init_Rsp_t)


def G_Can_UartGateway_Init(portHandle, cmd, rsp):
    return _g_api_can.G_Can_UartGateway_Init(portHandle, cmd, rsp)
class G_Can_TxTrace_Msg_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Delay = property(_g_api_can.G_Can_TxTrace_Msg_t_Delay_get, _g_api_can.G_Can_TxTrace_Msg_t_Delay_set)
    Id = property(_g_api_can.G_Can_TxTrace_Msg_t_Id_get, _g_api_can.G_Can_TxTrace_Msg_t_Id_set)
    Dlc = property(_g_api_can.G_Can_TxTrace_Msg_t_Dlc_get, _g_api_can.G_Can_TxTrace_Msg_t_Dlc_set)
    MsgFlags = property(_g_api_can.G_Can_TxTrace_Msg_t_MsgFlags_get, _g_api_can.G_Can_TxTrace_Msg_t_MsgFlags_set)
    reserved1 = property(_g_api_can.G_Can_TxTrace_Msg_t_reserved1_get, _g_api_can.G_Can_TxTrace_Msg_t_reserved1_set)
    reserved2 = property(_g_api_can.G_Can_TxTrace_Msg_t_reserved2_get, _g_api_can.G_Can_TxTrace_Msg_t_reserved2_set)
    Data = property(_g_api_can.G_Can_TxTrace_Msg_t_Data_get, _g_api_can.G_Can_TxTrace_Msg_t_Data_set)

    def __init__(self):
        _g_api_can.G_Can_TxTrace_Msg_t_swiginit(self, _g_api_can.new_G_Can_TxTrace_Msg_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_TxTrace_Msg_t

# Register G_Can_TxTrace_Msg_t in _g_api_can:
_g_api_can.G_Can_TxTrace_Msg_t_swigregister(G_Can_TxTrace_Msg_t)

G_CAN__TX_TRACE__PROPERTY_ID__REPETITIONS__NUMBER = _g_api_can.G_CAN__TX_TRACE__PROPERTY_ID__REPETITIONS__NUMBER
G_CAN__TX_TRACE__PROPERTY_ID__REPETITIONS__COUNTER = _g_api_can.G_CAN__TX_TRACE__PROPERTY_ID__REPETITIONS__COUNTER
G_CAN__TX_TRACE__PROPERTY_ID__UNKNOWN = _g_api_can.G_CAN__TX_TRACE__PROPERTY_ID__UNKNOWN

def G_Can_TxTrace_Allocate(portHandle, traceHandle):
    return _g_api_can.G_Can_TxTrace_Allocate(portHandle, traceHandle)

def G_Can_TxTrace_Free(portHandle, traceHandle):
    return _g_api_can.G_Can_TxTrace_Free(portHandle, traceHandle)

def G_Can_TxTrace_Download(portHandle, traceHandle, numberOfMessages, cmdFlags, msg):
    return _g_api_can.G_Can_TxTrace_Download(portHandle, traceHandle, numberOfMessages, cmdFlags, msg)

def G_Can_TxTrace_Play(portHandle, traceHandle, cmdFlags):
    return _g_api_can.G_Can_TxTrace_Play(portHandle, traceHandle, cmdFlags)
class G_Can_TxTrace_GetState_Rsp_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Flags = property(_g_api_can.G_Can_TxTrace_GetState_Rsp_t_Flags_get, _g_api_can.G_Can_TxTrace_GetState_Rsp_t_Flags_set)
    NumberOfMessages = property(_g_api_can.G_Can_TxTrace_GetState_Rsp_t_NumberOfMessages_get, _g_api_can.G_Can_TxTrace_GetState_Rsp_t_NumberOfMessages_set)
    CurrentMessage = property(_g_api_can.G_Can_TxTrace_GetState_Rsp_t_CurrentMessage_get, _g_api_can.G_Can_TxTrace_GetState_Rsp_t_CurrentMessage_set)

    def __init__(self):
        _g_api_can.G_Can_TxTrace_GetState_Rsp_t_swiginit(self, _g_api_can.new_G_Can_TxTrace_GetState_Rsp_t())
    __swig_destroy__ = _g_api_can.delete_G_Can_TxTrace_GetState_Rsp_t

# Register G_Can_TxTrace_GetState_Rsp_t in _g_api_can:
_g_api_can.G_Can_TxTrace_GetState_Rsp_t_swigregister(G_Can_TxTrace_GetState_Rsp_t)


def G_Can_TxTrace_GetState(portHandle, traceHandle, rsp):
    return _g_api_can.G_Can_TxTrace_GetState(portHandle, traceHandle, rsp)

def G_Can_TxTrace_Property_SetById(portHandle, traceHandle, propertyId, value):
    return _g_api_can.G_Can_TxTrace_Property_SetById(portHandle, traceHandle, propertyId, value)

def G_Can_TxTrace_Property_GetById(portHandle, traceHandle, propertyId, value):
    return _g_api_can.G_Can_TxTrace_Property_GetById(portHandle, traceHandle, propertyId, value)


