
def t5():
    """
import numpy as np
from scipy.stats import multivariate_normal, norm

Для нормального случайного вектора (X,Y)∼N(−8;16;49;1;0,8)
 найдите вероятность P((X−3)(Y−7)<0)
.


mu = np.array([-8, 16]) #первая и вторая переменная в векторе
cov = np.array([[49, 0.8*7*1],[0.8*7*1, 1]])  # [третья переменная, последняя * корень из 3 и корень из 4], [4 переменная умножить на корень из 3 и корень из 4, 4 переменная]
W = multivariate_normal(mu, cov)

Pa = W.cdf([3, np.inf])  # P(X < 3 и Y > 7)
Pb = W.cdf([np.inf, 7])  # P(X > 3 и Y < 7)

c = Pa + Pb
print(c)


Для нормального случайного вектора (X,Y)∼N(−4;4;64;81;−0,31)
 найдите вероятность P((X−8)(X−10)(Y−1)<0)
.

mu = np.array([-4, 4])  # первая и вторая переменная в векторе
cov = np.array([[64, -0.31*8*9], [-0.31*8*9, 81]])    # [третья переменная, последняя * корень из 3 и корень из 4], [4 переменная умножить на корень из 3 и корень из 4, 4 переменная]


W = multivariate_normal(mu, cov)
X = norm(-4, 8)  # #первая переменная в векторе плюс третья в корне
Y = norm(4, 9)   # вторая переменная в векторе плюс 4 в корне

# первый и третий коэффициенты в вероятности
Pa = W.cdf([4, 1])  # вероятность того, что X < 4 и Y < 1

# второй кф - первый кф в  - второй, третий кф - первый, третий кф в вероятности
Pb = X.cdf(10) - X.cdf(8) - (W.cdf([10, 1]) - W.cdf([8, 1]))  # вероятность для X в интервале (8, 10) и Y < 1
# третий кф - второй, третий
Pc = Y.cdf(1) - W.cdf([10, 1])  # вероятность для X > 10 и Y < 1
c = Pa + Pb + Pc
print(c)
"""