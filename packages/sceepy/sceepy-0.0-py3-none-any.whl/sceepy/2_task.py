
def t2():
    """

Несимметричная игральная кость подбрасывается до тех пор, пока не выпадут
цифры 1 и 2. Пусть X — число сделанных при этом бросков.
Даны вероятности появления цифр в одном броске:P(1)=0,13 и 	P(2)=0,17.
Требуется найти: 1) $	ext{E}(X)$; 2) дисперсию $X$, если известно, что из 1 и 2 сначала выпала цифра 2


a = 0.13  # Вероятность выпадения 1
b = 0.17  # Вероятность выпадения 2

# Математические ожидания для каждого этапа
ex1 = 1 / (a + b)  # Этап 1: до появления хотя бы 1 или 2
ex2 = 1 / a + 1 / b - 2 / (a + b)  # Этап 2: после первого появления (1 или 2)

var_x_i = (1-(a+b)) / (a+b)**2
p_1_only = a
var_x_p1_only = (1-p_1_only) / (p_1_only**2)
var_x = var_x_i + var_x_p1_only
total_ex = ex1 + ex2


print(total_ex, var_x, "1 прототип")


Несимметричная игральная кость подбрасывается до тех пор, пока не выпадут
цифры 2,  3 и 4. Пусть X — число сделанных при этом бросков.
Даны вероятности появления цифр в одном броске: $	ext{P}(1)=0,17$, $	ext{P}(2)=0,11$ и $	ext{P}(3)=0,13$.
Требуется найти: 1) E = (X); 2) дисперсию X, если известно, что из 2, 3 и 4
сначала выпала цифра 2, затем  — 3.


# Данные вероятности
p1 = 0.17  # Вероятность выпадения 1
p2 = 0.11  # Вероятность выпадения 2
p3 = 0.13  # Вероятность выпадения 3

# Вероятность того, что выпадет хотя бы 1, 2 или 3
p_y = p1 + p2 + p3

# Математическое ожидание для первого этапа
E_Y = 1 / p_y

# Условные вероятности для второго этапа
p_H1 = p1 / p_y
p_H2 = p2 / p_y
p_H3 = p3 / p_y

# Математические ожидания для второго этапа
H1 = p2 + p3
H2 = p1 + p3
H3 = p1 + p2
E_Z = p_H1 / H1 + p_H2 / H2 + p_H3 / H3

# Вычисление переходных вероятностей для этапа 2
P_H12 = p1 * p2 / (p2 + p3) / p_y
P_H13 = p1 * p3 / (p3 + p2) / p_y
P_H21 = p2 * p1 / (p1 + p3) / p_y
P_H23 = p2 * p3 / (p3 + p1) / p_y
P_H31 = p3 * p1 / (p1 + p2) / p_y
P_H32 = p3 * p2 / (p2 + p1) / p_y

# Математическое ожидание для третьего этапа
E_W = P_H12 / p3 + P_H13 / p2 + P_H21 / p3 + P_H23 / p1 + P_H31 / p2 + P_H32 / p1

# Общее математическое ожидание
E_total = E_W + E_Z + E_Y
print(f"E(X) = {E_total:.4f} 2 прототип")

# Дисперсия
var = (1 - p_y) / (p_y**2) + (1 - H1) / (H1**2) + (1 - p3) / (p3**2)
print(f"Var(X) = {var:.4f} 2 прототип")
"""