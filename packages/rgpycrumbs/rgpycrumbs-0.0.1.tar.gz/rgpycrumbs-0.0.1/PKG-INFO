Metadata-Version: 2.3
Name: rgpycrumbs
Version: 0.0.1
Summary: Input file generators for computational chemistry
Project-URL: Documentation, https://github.com/HaoZeke/rgpycrumbs#readme
Project-URL: Issues, https://github.com/HaoZeke/rgpycrumbs/issues
Project-URL: Source, https://github.com/HaoZeke/rgpycrumbs
Author-email: Rohit Goswami <rog32@hi.is>
License: MIT
Keywords: parsers,plots
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: Implementation :: CPython
Requires-Python: >=3.10
Requires-Dist: jinja2>=3.1.2
Requires-Dist: numpy>=1.26.2
Requires-Dist: pint>=0.22
Requires-Dist: tomli>=2.0.1
Provides-Extra: cli
Requires-Dist: click>=8.1.7; extra == 'cli'
Provides-Extra: doc
Requires-Dist: mdit-py-plugins>=0.3.4; extra == 'doc'
Requires-Dist: myst-nb>=1; extra == 'doc'
Requires-Dist: myst-parser>=2; extra == 'doc'
Requires-Dist: sphinx-autodoc2>=0.5; extra == 'doc'
Requires-Dist: sphinx-copybutton>=0.5.2; extra == 'doc'
Requires-Dist: sphinx-library>=1.1.2; extra == 'doc'
Requires-Dist: sphinx-sitemap>=2.5.1; extra == 'doc'
Requires-Dist: sphinx-togglebutton>=0.3.2; extra == 'doc'
Requires-Dist: sphinx>=7.2.6; extra == 'doc'
Requires-Dist: sphinxcontrib-apidoc>=0.4; extra == 'doc'
Provides-Extra: plotter
Requires-Dist: cmcrameri>=1.9; extra == 'plotter'
Requires-Dist: matplotlib>=3.9.2; extra == 'plotter'
Description-Content-Type: text/markdown


# Table of Contents

-   [About](#orgd7704b6)
-   [License](#org98dc3f2)



<a id="orgd7704b6"></a>

# About

![img](branding/logo/pycrumbs_logo.webp)

[![Hatch project](https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg)](https://github.com/pypa/hatch)

A **pure-python** module of helpful scripts / CLIs I have written mostly for quick
and dirty parsing / plotting of optimization methods. Loosely grouped. Not
optimal at all.

Most of these rely heavily on optional dependencies, with the exception of the
`_aux` helpers (pure Python).


<a id="org98dc3f2"></a>

# License

MIT. However, this is an academic resource, so **please cite** as much as possible
via:

-   The Zenodo DOI for general use.
-   The `wailord` paper for ORCA usage

