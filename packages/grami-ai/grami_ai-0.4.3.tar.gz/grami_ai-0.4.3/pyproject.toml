[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "grami-ai"
version = "0.4.3"
description = "A dynamic and flexible AI agent framework for building intelligent, multi-modal AI agents"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = [
    "ai",
    "agent",
    "llm",
    "machine-learning",
    "artificial-intelligence",
    "generative-ai"
]

authors = [
    {name = "YAFATEK Solutions / GRAMI Team", email = "support@yafatek.dev"}
]

maintainers = [
    {name = "YAFATEK Solutions", email = "support@yafatek.dev"}
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

dependencies = [
    "google-generativeai>=0.3.1",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "asyncio>=3.4.3",
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "python-dotenv",  # Add python-dotenv for .env file support
    "redis>=5.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.1",
    "mypy>=1.3.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "flake8>=6.0.0"
]
docs = [
    "sphinx>=5.3.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0"
]
redis = ["redis>=5.0.1"]

[project.urls]
Homepage = "https://github.com/YAFATEK/grami-ai"
Documentation = "https://grami-ai.readthedocs.io"
Repository = "https://github.com/YAFATEK/grami-ai"
Issues = "https://github.com/YAFATEK/grami-ai/issues"

[project.scripts]
grami = "grami.cli:main"

[tool.hatch.build.targets.sdist]
include = ["/grami"]

[tool.hatch.build.targets.wheel]
packages = ["grami"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3