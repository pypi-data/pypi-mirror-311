# Generated by ariadne-codegen
# Source: graphql/schema.graphqls

from datetime import datetime
from typing import Annotated, Any, List, Optional, Union

from pydantic import Field, PlainSerializer

from promptscan_sdk.utils import parse_datetime, serialize_datetime

from .base_model import BaseModel, Upload


class KeyValuePairInput(BaseModel):
    key: str
    value: str


class GenerationInput(BaseModel):
    session_id: Optional[str] = Field(alias="sessionId", default=None)
    id: Optional[str] = None
    model: str
    messages: List["GenerationMessageInput"]
    usage: Optional["UsageInput"] = None
    tags: Optional[List["KeyValuePairInput"]] = None
    created: Optional[Annotated[datetime, PlainSerializer(serialize_datetime)]] = None
    duration: Optional[float] = None
    time_to_first_token: Optional[float] = Field(alias="timeToFirstToken", default=None)


class PromptTokensDetailsInput(BaseModel):
    cached_tokens: Optional[int] = Field(alias="cachedTokens", default=None)
    audio_tokens: Optional[int] = Field(alias="audioTokens", default=None)


class CompletionTokensDetailsInput(BaseModel):
    reasoning_tokens: Optional[int] = Field(alias="reasoningTokens", default=None)
    audio_tokens: Optional[int] = Field(alias="audioTokens", default=None)


class UsageInput(BaseModel):
    prompt_tokens: Optional[int] = Field(alias="promptTokens", default=None)
    completion_tokens: Optional[int] = Field(alias="completionTokens", default=None)
    total_tokens: Optional[int] = Field(alias="totalTokens", default=None)
    prompt_tokens_details: Optional["PromptTokensDetailsInput"] = Field(
        alias="promptTokensDetails", default=None
    )
    completion_tokens_details: Optional["CompletionTokensDetailsInput"] = Field(
        alias="completionTokensDetails", default=None
    )


class GenerationMessageInput(BaseModel):
    content: str
    role: str
    tags: Optional[List["KeyValuePairInput"]] = None


GenerationInput.model_rebuild()
UsageInput.model_rebuild()
GenerationMessageInput.model_rebuild()
