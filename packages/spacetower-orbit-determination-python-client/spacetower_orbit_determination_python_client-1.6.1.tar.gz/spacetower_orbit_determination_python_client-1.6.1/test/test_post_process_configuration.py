# coding: utf-8

"""
    Orbit Determination API

    Orbit Determination API

    The version of the OpenAPI document: 1.6.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_determination_python_client.models.post_process_configuration import PostProcessConfiguration

class TestPostProcessConfiguration(unittest.TestCase):
    """PostProcessConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostProcessConfiguration:
        """Test PostProcessConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostProcessConfiguration`
        """
        model = PostProcessConfiguration()
        if include_optional:
            return PostProcessConfiguration(
                output_osculating_orbit_type = 'CARTESIAN',
                mean_theory = 'DSST_6X0',
                residual_computation_configuration = spacetower_orbit_determination_python_client.models.residual_computation_configuration.ResidualComputationConfiguration(
                    remove_outliers = True, 
                    normalize_residuals = True, ),
                final_covariance_configuration = spacetower_orbit_determination_python_client.models.output_covariance_configuration.OutputCovarianceConfiguration(
                    orbit_type = 'CARTESIAN', 
                    anomaly_type = 'MEAN', 
                    frame_id = 'CIRF', )
            )
        else:
            return PostProcessConfiguration(
        )
        """

    def testPostProcessConfiguration(self):
        """Test PostProcessConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
