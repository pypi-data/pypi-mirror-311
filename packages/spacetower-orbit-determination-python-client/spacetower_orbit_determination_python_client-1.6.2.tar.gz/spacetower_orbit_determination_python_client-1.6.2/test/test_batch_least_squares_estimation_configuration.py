# coding: utf-8

"""
    Orbit Determination API

    Orbit Determination API

    The version of the OpenAPI document: 1.6.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_determination_python_client.models.batch_least_squares_estimation_configuration import BatchLeastSquaresEstimationConfiguration

class TestBatchLeastSquaresEstimationConfiguration(unittest.TestCase):
    """BatchLeastSquaresEstimationConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchLeastSquaresEstimationConfiguration:
        """Test BatchLeastSquaresEstimationConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchLeastSquaresEstimationConfiguration`
        """
        model = BatchLeastSquaresEstimationConfiguration()
        if include_optional:
            return BatchLeastSquaresEstimationConfiguration(
                outlier_filter = spacetower_orbit_determination_python_client.models.static_outlier_filter.StaticOutlierFilter(
                    sigma_threshold = 0, 
                    warm_up_iterations = 0, ),
                least_squares_configuration = spacetower_orbit_determination_python_client.models.least_squares_configuration.LeastSquaresConfiguration(
                    optimizer_type = 'GAUSS_NEWTON', 
                    maximum_iterations = 1, 
                    convergence_threshold = 0, ),
                orbit_estimation_request = None,
                propagation_parameters_estimation_request = spacetower_orbit_determination_python_client.models.batch_least_squares_propagation_parameters_estimation_request.BatchLeastSquaresPropagationParametersEstimationRequest(
                    estimate_drag_parameter = True, 
                    estimate_radiation_parameter = True, 
                    estimate_thrust_parameters = True, ),
                measurement_parameters_estimation_request = spacetower_orbit_determination_python_client.models.batch_least_squares_measurement_parameters_estimation_request.BatchLeastSquaresMeasurementParametersEstimationRequest(
                    satellite_clock_offset_estimation_request = spacetower_orbit_determination_python_client.models.satellite_clock_offset_estimation_request.SatelliteClockOffsetEstimationRequest(
                        minimum_value = 1.337, 
                        maximum_value = 1.337, ), )
            )
        else:
            return BatchLeastSquaresEstimationConfiguration(
        )
        """

    def testBatchLeastSquaresEstimationConfiguration(self):
        """Test BatchLeastSquaresEstimationConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
