# coding: utf-8

"""
    Orbit Determination API

    Orbit Determination API

    The version of the OpenAPI document: 1.6.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_determination_python_client.models.propulsion_system import PropulsionSystem

class TestPropulsionSystem(unittest.TestCase):
    """PropulsionSystem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PropulsionSystem:
        """Test PropulsionSystem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PropulsionSystem`
        """
        model = PropulsionSystem()
        if include_optional:
            return PropulsionSystem(
                thruster = spacetower_orbit_determination_python_client.models.thruster.Thruster(
                    thrust = 0, 
                    specific_impulse = 0, 
                    axis_in_space_object_frame = spacetower_orbit_determination_python_client.models.vector3_d.Vector3D(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), )
            )
        else:
            return PropulsionSystem(
                thruster = spacetower_orbit_determination_python_client.models.thruster.Thruster(
                    thrust = 0, 
                    specific_impulse = 0, 
                    axis_in_space_object_frame = spacetower_orbit_determination_python_client.models.vector3_d.Vector3D(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), ),
        )
        """

    def testPropulsionSystem(self):
        """Test PropulsionSystem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
