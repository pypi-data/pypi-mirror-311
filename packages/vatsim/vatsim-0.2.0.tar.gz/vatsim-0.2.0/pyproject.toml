[project]
name = "vatsim"
version = "0.2.0"
description = "Library for interacting with VATSIM APIs and data"
authors = [
    { name = "Franz Pletz", email = "fpletz@fnordicwalking.de" },
    { name = "Alex Legler", email = "alex@a3li.li" },
    { name = "Robin Gloster", email = "mail@glob.in" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Games/Entertainment :: Simulation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = ["pydantic>=2.10.2", "regex>=2024.11.6", "requests>=2.32.3"]

[dependency-groups]
dev = ["pyright>=1.1.389", "pytest>=8.3.3", "pytest-cov>=6.0.0", "ruff>=0.8.0"]

[tool.pytest.ini_options]
addopts = ["--cov-report=term", "--cov-report=xml:cov.xml", "--cov=vatsim"]
testpaths = ["tests"]

[tool.ruff]
line-length = 100
target-version = "py311"
preview = true

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "C90",   # mccabe
    "I",     # isort
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "EM",    # flake8-errmsg
    "ICN",   # flake8-import-conventions
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "SIM",   # flake8-simplify
    "TCH",   # flake8-typechecking
    "PTH",   # flake8-use-pathlib
    "UP",    # pyupgrade
    "RUF",   # ruff-specific
    "TRY",   # tryceratops
    "FURB",  # refurb
]
ignore = ["COM812"]

[tool.pyright]
include = ["vatsim", "tests"]
pythonVersion = "3.12"
typeCheckingMode = "strict"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
