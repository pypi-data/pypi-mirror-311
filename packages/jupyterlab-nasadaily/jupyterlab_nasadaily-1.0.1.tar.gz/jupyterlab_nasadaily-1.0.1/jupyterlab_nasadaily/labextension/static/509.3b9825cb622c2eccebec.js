"use strict";(self.webpackChunkjupyterlab_nasadaily=self.webpackChunkjupyterlab_nasadaily||[]).push([[509],{509:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var a=n(782),i=n(501),s=n(981),o=n(856),r=n(256),l=n(602),c=n(963);const h=new c.LabIcon({name:"jupyterlab_nasadaily:rocket-icon",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 512 512">\x3c!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2023 Fonticons, Inc.--\x3e<path fill="navy" d="M156.6 384.9L125.7 354c-8.5-8.5-11.5-20.8-7.7-32.2c3-8.9 7-20.5 11.8-33.8L24 288c-8.6 0-16.6-4.6-20.9-12.1s-4.2-16.7 .2-24.1l52.5-88.5c13-21.9 36.5-35.3 61.9-35.3l82.3 0c2.4-4 4.8-7.7 7.2-11.3C289.1-4.1 411.1-8.1 483.9 5.3c11.6 2.1 20.6 11.2 22.8 22.8c13.4 72.9 9.3 194.8-111.4 276.7c-3.5 2.4-7.3 4.8-11.3 7.2v82.3c0 25.4-13.4 49-35.3 61.9l-88.5 52.5c-7.4 4.4-16.6 4.5-24.1 .2s-12.1-12.2-12.1-20.9V380.8c-14.1 4.9-26.4 8.9-35.7 11.9c-11.2 3.6-23.4 .5-31.8-7.8zM384 168a40 40 0 1 0 0-80 40 40 0 1 0 0 80z"/></svg>'}),d=new c.LabIcon({name:"jupyterlab_nasadaily:sun-icon",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">\x3c!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--\x3e<g transform="scale(0.8, 0.8) translate(64, 64)"><path d="M361.5 1.2c5 2.1 8.6 6.6 9.6 11.9L391 121l107.9 19.8c5.3 1 9.8 4.6 11.9 9.6s1.5 10.7-1.6 15.2L446.9 256l62.3 90.3c3.1 4.5 3.7 10.2 1.6 15.2s-6.6 8.6-11.9 9.6L391 391 371.1 498.9c-1 5.3-4.6 9.8-9.6 11.9s-10.7 1.5-15.2-1.6L256 446.9l-90.3 62.3c-4.5 3.1-10.2 3.7-15.2 1.6s-8.6-6.6-9.6-11.9L121 391 13.1 371.1c-5.3-1-9.8-4.6-11.9-9.6s-1.5-10.7 1.6-15.2L65.1 256 2.8 165.7c-3.1-4.5-3.7-10.2-1.6-15.2s6.6-8.6 11.9-9.6L121 121 140.9 13.1c1-5.3 4.6-9.8 9.6-11.9s10.7-1.5 15.2 1.6L256 65.1 346.3 2.8c4.5-3.1 10.2-3.7 15.2-1.6zM160 256a96 96 0 1 1 192 0 96 96 0 1 1 -192 0zm224 0a128 128 0 1 0 -256 0 128 128 0 1 0 256 0z"/></g></svg>'});class p extends r.Widget{constructor(e={node:document.createElement("button")}){super(e),this._count={clickCount:0},this._stateChanged=new l.Signal(this),this.addClass("jp-button-widget"),this.spinner=document.createElement("div"),this.spinner.className="fa fa-sync-alt",this.spinner.style.display="",this.node.appendChild(this.spinner),this.node.addEventListener("click",(()=>{this._count.clickCount=this._count.clickCount+1,this._stateChanged.emit(this._count)}))}get stateChanged(){return this._stateChanged}}class m extends r.Widget{constructor(e){super({node:document.createElement("input")}),this.addClass("jp-Toolbar-dateInput");const t=this.node;t.placeholder="Enter Date: YYMMDD",t.addEventListener("keydown",(n=>{"Enter"===n.key&&(e(t.value),t.value="")}))}}class g extends r.Widget{constructor(e){var t;super(),this.fetchController=null,this.addClass("nasa-widget"),this.apiKey=(null==e?void 0:e.composite.api_key)||"DEMO_KEY",this.useOpenAI=null===(t=null==e?void 0:e.composite.use_openai)||void 0===t||t,this.openaiKey=(null==e?void 0:e.composite.openai_key)||"None",this.openaiModel=(null==e?void 0:e.composite.openai_model)||"gpt-4o-mini",this.prompt=(null==e?void 0:e.composite.prompt)||"This is the description of an image from NASA's Astronomy Picture of the Day. Elaborate more on relevant scientific discoveries, theories, narratives, or anecdotes behind the image and its description. Explain any technical or professional terms and names in simple language for better understanding. Generate an HTML snippet using only the simplest formatting elements, such as <b> for bold, <i> for italics, <p> for paragraphs, and <br> for line breaks. Avoid including any styles, colors, fonts, or size adjustments. Keep the structure clean and minimal.";const n=(null==e?void 0:e.composite.min_date)||"1995-07-01";this.minDate=isNaN(Date.parse(n))?new Date("1995-07-01"):new Date(n),this.refreshbutton=new p,this.node.appendChild(this.refreshbutton.node),this.refreshbutton.stateChanged.connect(this._onRefresh,this),this.imageContainer=document.createElement("div"),this.imageContainer.className="image-container",this.img=document.createElement("img"),this.imageContainer.appendChild(this.img),this.imgtitle=document.createElement("p"),this.imgtitle.className="nasa-imgtitle",this.node.appendChild(this.imgtitle),this.copyright=document.createElement("p"),this.copyright.className="nasa-copyright",this.imageContainer.appendChild(this.copyright),this.spinner=document.createElement("div"),this.spinner.className="fa fa-spinner fa-spin",this.spinner.style.display="none",this.node.appendChild(this.spinner),this.node.appendChild(this.imageContainer),this.img.onload=()=>{this.onImageLoaded()},this.currentDate=new Date}formatDate(e){return e.toISOString().slice(0,10)}_onRefresh(e,t){this.updateNASAImage(void 0,!0),console.log("Hey, a Signal has been received from",e),console.log(`Image refreshed ${t.clickCount} times.`)}onImageLoaded(){this.refreshbutton.spinner.className="fa fa-sync-alt",this.spinner.style.display="none",this.img.style.display="",this.imgtitle.style.display="",this.copyright.style.display=""}async updateNASAImage(e,t=!1){let n;e?(n=e,this.currentDate=new Date(e)):t?(n=this.randomDate(),this.currentDate=new Date(n)):(n=this.formatDate(new Date),this.currentDate=new Date(n));const a=await fetch(`https://api.nasa.gov/planetary/apod?api_key=${this.apiKey}&date=${n}`);this.refreshbutton.spinner.className="fa fa-sync-alt fa-spin",this.spinner.style.display="",this.img.style.display="none",this.imgtitle.style.display="none",this.copyright.style.display="none";let i="";if(this.imgtitle.innerHTML="",this.copyright.innerHTML="",!a.ok){const e=await a.json();if(404===e.code){const e=new Date(this.currentDate);return e.setDate(e.getDate()-1),this.currentDate=e,void await this.updateNASAImage(this.formatDate(e),t)}return e.error?this.imgtitle.innerText=e.error.message:this.imgtitle.innerText=a.statusText,this.refreshbutton.spinner.className="fa fa-sync-alt",this.spinner.style.display="none",void(this.imgtitle.style.display="")}const s=await a.json();if("image"===s.media_type){if(this.img.src=s.url,this.imgtitle.innerText=s.title,s.date||s.copyright||s.explanation||s.url||s.hdurl){const e=`https://apod.nasa.gov/apod/ap${this.transformDate(s.date)}.html`;this.copyright.innerHTML=`\n        <span style="color: cyan; font-weight: bold;">${s.date||""}</span> : \n        ${s.explanation||""}<br>\n        <em>Copyright: ${s.copyright||"NASA"} || \n        <a href="${e}" target="_blank">Page Link</a> || \n        <a href="${s.url}" target="_blank">Image Link</a> || \n        <a href="${s.hdurl}" target="_blank">HD Image Link</a></em>\n        `.replace(/[\r\n]/g,""),this.fetchController&&this.fetchController.abort(),this.fetchController=new AbortController,i=await this.fetchMoreExplanation(s,this.fetchController.signal),this.copyright.innerHTML=`\n        <span style="color: cyan; font-weight: bold;">${s.date||""}</span> : \n        ${s.explanation||""}<br>\n        ${i?"<hr>"+i+"<hr>":""}\n        <em>Copyright: ${s.copyright||"NASA"} ||\n        <a href="${e}" target="_blank">Page Link</a> || \n        <a href="${s.url}" target="_blank">Image Link</a> || \n        <a href="${s.hdurl}" target="_blank">HD Image Link</a></em>\n        `.replace(/[\r\n]/g,"")}}else if("video"===s.media_type){console.log("This is a video. Click link to view.");const e=`https://apod.nasa.gov/apod/ap${this.transformDate(s.date)}.html`;this.imgtitle.innerHTML=`\n        <span style="color: cyan; font-weight: bold;">${s.date||""}</span> :\n        <span style="color: skyblue; font-weight: bold;">${s.title||""}</span> || \n        <a href="${e}" target="_blank" style="color: blue; font-weight: bold;">Page Link</a> || \n        <a href="${s.url}" target="_blank" style="color: blue; font-weight: bold;">Video Link</a> <br>\n        ${s.explanation||""}<br>\n        `.replace(/[\r\n]/g,""),this.fetchController&&this.fetchController.abort(),this.fetchController=new AbortController,i=await this.fetchMoreExplanation(s,this.fetchController.signal),this.imgtitle.innerHTML=`\n        <span style="color: cyan; font-weight: bold;">${s.date||""}</span> :\n        <span style="color: skyblue; font-weight: bold;">${s.title||""}</span> || \n        <a href="${e}" target="_blank" style="color: blue; font-weight: bold;">Page Link</a> || \n        <a href="${s.url}" target="_blank" style="color: blue; font-weight: bold;">Video Link</a> <br>\n        ${s.explanation||""}<br>\n        ${i?"<hr>"+i+"<hr>":""}\n        `.replace(/[\r\n]/g,""),this.refreshbutton.spinner.className="fa fa-sync-alt",this.spinner.style.display="none",this.imgtitle.style.display=""}else this.imgtitle.innerText="This random fetch is not an image. Please refresh again.",this.refreshbutton.spinner.className="fa fa-sync-alt",this.spinner.style.display="none",this.imgtitle.style.display=""}randomDate(){const e=this.minDate,t=new Date;return new Date(e.getTime()+Math.random()*(t.getTime()-e.getTime())).toISOString().slice(0,10)}handleDateInput(e){const t=this.extractDate(e);let n;n=t?new Date(t):new Date;const a=new Date;n>a&&(n=a),n<this.minDate&&(n=this.minDate),this.updateNASAImage(this.formatDate(n))}extractDate(e){const t=[/^(\d{4})(\d{2})(\d{2})$/,/^(\d{2})(\d{2})(\d{2})$/,/^(\d{4})-(\d{2})-(\d{2})$/];for(const n of t){const t=e.match(n);if(t){let e=t[1];const n=t[2],a=t[3];return 2===e.length&&(e=parseInt(e,10)>=90?"19"+e:"20"+e),`${e}-${n}-${a}`}}return null}transformDate(e){return e.slice(2).replace(/-/g,"")}async fetchMoreExplanation(e,t){let n="";if(this.useOpenAI&&"None"!==this.openaiKey)try{const a=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.openaiKey}`},body:JSON.stringify({model:this.openaiModel,messages:[{role:"user",content:`${this.prompt}\n\n------\nTitle: ${e.title} || ${e.date}\nDescription: ${e.explanation}\n------\n`}]}),signal:t});if(!a.ok)return console.error("OpenAI API error:",a.statusText),"";const i=await a.json();if(i&&i.choices&&i.choices.length>0&&i.choices[0].message&&i.choices[0].message.content){const e=/```html([\s\S]*?)```/g,t=i.choices[0].message.content.match(e);if(t)for(const e of t)n+=e.replace(/```html/g,"").replace(/```/g,"");else n=i.choices[0].message.content}else console.error("Invalid OpenAI response format:",i)}catch(e){"AbortError"===e.name?console.log("Fetch aborted"):console.error("Error fetching from OpenAI:",e)}else console.log("OpenAI elaboration is disabled or OpenAI API key not provided.");return n}}const u={id:"jupyterlab_nasadaily:plugin",description:"JupyterLab Extension to Show Astronomy Picture of the Day from NASA",autoStart:!0,requires:[i.ICommandPalette,s.ISettingRegistry],optional:[a.ILayoutRestorer,o.ILauncher],activate:function(e,t,n,a,s){let o,r;console.log("JupyterLab extension jupyterlab_nasadaily:plugin is activated!"),n&&n.load("jupyterlab_nasadaily:plugin").then((e=>{r=e})).catch((e=>{console.error("failed to load settings for jupyterlab_nasadaily:plugin.",e)}));const l="nasa:open";e.commands.addCommand(l,{label:"NASA Daily",execute:()=>{if(!o||o.isDisposed){const e=new g(r);o=new i.MainAreaWidget({content:e}),o.id="nasa-pic",o.title.label="NASA Daily",o.title.icon=h,o.title.closable=!0}p.has(o)||p.add(o),o.isAttached||e.shell.add(o,"main"),o.content.updateNASAImage();const t=new i.ToolbarButton({label:"Today",icon:d,onClick:()=>{const e=new Date;o.content.updateNASAImage(o.content.formatDate(e))}});o.toolbar.addItem("today",t);const n=new i.ToolbarButton({label:"Prev Day",icon:c.caretLeftIcon,onClick:()=>{o.content.currentDate.setDate(o.content.currentDate.getDate()-1),o.content.updateNASAImage(o.content.formatDate(o.content.currentDate))}});o.toolbar.addItem("previous",n);const a=new i.ToolbarButton({label:"Next Day",icon:c.caretRightIcon,onClick:()=>{o.content.currentDate.setDate(o.content.currentDate.getDate()+1),o.content.updateNASAImage(o.content.formatDate(o.content.currentDate))}});o.toolbar.addItem("next",a);const s=new i.ToolbarButton({label:"Random Day",icon:c.refreshIcon,onClick:()=>o.content.updateNASAImage(void 0,!0)});o.toolbar.addItem("refresh",s);const l=new m((e=>{o.content.handleDateInput(e)}));o.toolbar.addItem("dateInput",l),e.shell.activateById(o.id)},icon:h}),t.addItem({command:l,category:"NASA"});const p=new i.WidgetTracker({namespace:"nasa"});a&&a.restore(p,{command:l,name:()=>"nasa"}),s&&s.add({command:l,category:"Other",rank:1})}}}}]);