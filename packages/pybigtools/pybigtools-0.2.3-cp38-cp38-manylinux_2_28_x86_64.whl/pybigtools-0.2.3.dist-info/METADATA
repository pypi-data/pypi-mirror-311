Metadata-Version: 2.3
Name: pybigtools
Version: 0.2.3
Classifier: Development Status :: 4 - Beta
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Programming Language :: Rust
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Dist: numpy
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: smart-open[http] ; extra == 'test'
Requires-Dist: ruff ; extra == 'dev'
Provides-Extra: test
Provides-Extra: dev
License-File: LICENSE
Summary: Python bindings to the Bigtools Rust library for high-performance BigWig and BigBed I/O
Keywords: bigwig,bigbed,bbi,bioinformatics,genomics,kent,ucsc,rust
Author: Jack <jackh726@gmail.com>
Author-email: Jack <jackh726@gmail.com>
License: MIT
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
Project-URL: homepage, https://github.com/jackh726/bigtools
Project-URL: documentation, https://bigtools.readthedocs.io
Project-URL: repository, https://github.com/jackh726/bigtools

The `pybigtools` python package wraps the `bigtools` Rust library and allows effecient reading and writing of bigWig and bigBed files.

## Documenation

Documentation is available on [readthedocs](https://bigtools.readthedocs.io/en/latest/pybigtools.html).

## Examples

(Replace `<path>` with the path to a bigWig file or url)

### Iterator of intervals

```python
import pybigtools
b = pybigtools.open(<path>)
i = b.intervals("chr1")
print(next(i))
```

### Numpy array of values

```python
import pybigtools
b = pybigtools.open(<path>)
a = b.values("chr1")
print(a.shape)
```

### Open a file-like object

```python
import pybigtools
b = pybigtools.open(open(<path>, 'rb'))
a = b.values("chr1")
print(a.shape)
```

