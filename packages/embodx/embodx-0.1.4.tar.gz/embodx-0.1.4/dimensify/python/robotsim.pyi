from typing import Dict, List, Union, Tuple


# class Attribute:
#     def __init__(self, name: str, value: float): ...
#     @property
#     def name(self) -> str: ...
#     @name.setter
#     def name(self, value: str): ...
#     @property
#     def value(self) -> float: ...
#     @value.setter
#     def value(self, val: float): ...


# class Model:
#     def __init__(self, data: bytes): ...
#     @staticmethod
#     def open(path: str) -> "Model": ...
#     def tag(
#         self,
#         xseq: List[List[Union[str, Tuple[str, float], Dict[str, float], Attribute]]],
#     ) -> List[str]: ...
